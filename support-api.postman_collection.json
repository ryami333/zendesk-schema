{
	"info": {
		"_postman_id": "491840ed-8cea-4d36-9e4e-3cc4fc97be68",
		"name": "Support API",
		"description": "Zendesk Support API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31640188",
		"_collection_link": "https://www.postman.com/zendesk-redback/workspace/zendesk-public-api/collection/19931619-491840ed-8cea-4d36-9e4e-3cc4fc97be68?action=share&source=collection_link&creator=31640188"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "v2",
					"item": [
						{
							"name": "{target_type}",
							"item": [
								{
									"name": "{target_id}",
									"item": [
										{
											"name": "relationship_fields",
											"item": [
												{
													"name": "{field_id}",
													"item": [
														{
															"name": "{source_type}",
															"item": [
																{
																	"name": "Get sources by target",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/:target_type/:target_id/relationship_fields/:field_id/:source_type",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				":target_type",
																				":target_id",
																				"relationship_fields",
																				":field_id",
																				":source_type"
																			],
																			"variable": [
																				{
																					"key": "target_type",
																					"value": "<string>",
																					"description": "(Required) The type of object the relationship field is targeting.\nThe options are \"zen:user\", \"zen:ticket\", \"zen:organization\", and \"zen:custom_object:CUSTOM_OBJECT_KEY\"\n"
																				},
																				{
																					"key": "target_id",
																					"value": "<integer>",
																					"description": "(Required) The id of the object the relationship field is targeting\n"
																				},
																				{
																					"key": "field_id",
																					"value": "<integer>",
																					"description": "(Required) The id of the lookup relationship field\n"
																				},
																				{
																					"key": "source_type",
																					"value": "<string>",
																					"description": "(Required) The type of object the relationship field belongs to (example. ticket field belongs to a ticket object).\nThe options are \"zen:user\", \"zen:ticket\", \"zen:organization\", and \"zen:custom_object:CUSTOM_OBJECT_KEY\"\n"
																				}
																			]
																		},
																		"description": "Returns a list of source objects whose values are populated with the id of a related target object.  For example,\nif you have a lookup field called \"Success Manager\" on a ticket, this endpoint can answer the question,\n\"What tickets (sources) is this user (found by `target_type` and `target_id`)\nassigned as the 'Success Manager' (field referenced by `field_id`)?\"\n\n#### Allowed For\n\n* Agents\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
																	},
																	"response": [
																		{
																			"name": "Success response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/:target_type/:target_id/relationship_fields/:field_id/:source_type",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						":target_type",
																						":target_id",
																						"relationship_fields",
																						":field_id",
																						":source_type"
																					],
																					"variable": [
																						{
																							"key": "target_type"
																						},
																						{
																							"key": "target_id"
																						},
																						{
																							"key": "field_id"
																						},
																						{
																							"key": "source_type"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"users\": [\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"eufc\": -4605729\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"mollit_61_\": false,\n        \"officiaca\": \"culpa reprehenderit amet\"\n      },\n      \"verified\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"labore_49\": false,\n        \"est_4bc\": false\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"laboredf\": false,\n        \"doloref\": -32691025\n      },\n      \"verified\": \"<boolean>\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "account",
							"item": [
								{
									"name": "settings",
									"item": [
										{
											"name": "Show Settings",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"settings"
													]
												},
												"description": "Shows the settings that are available for the account.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/account/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"account",
																"settings"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"settings\": {\n    \"active_features\": {\n      \"advanced_analytics\": \"<boolean>\",\n      \"agent_forwarding\": \"<boolean>\",\n      \"allow_ccs\": \"<boolean>\",\n      \"allow_email_template_customization\": \"<boolean>\",\n      \"automatic_answers\": \"<boolean>\",\n      \"bcc_archiving\": \"<boolean>\",\n      \"benchmark_opt_out\": \"<boolean>\",\n      \"business_hours\": \"<boolean>\",\n      \"chat\": \"<boolean>\",\n      \"chat_about_my_ticket\": \"<boolean>\",\n      \"csat_reason_code\": \"<boolean>\",\n      \"custom_dkim_domain\": \"<boolean>\",\n      \"customer_context_as_default\": \"<boolean>\",\n      \"customer_satisfaction\": \"<boolean>\",\n      \"dynamic_contents\": \"<boolean>\",\n      \"explore\": \"<boolean>\",\n      \"explore_on_support_ent_plan\": \"<boolean>\",\n      \"explore_on_support_pro_plan\": \"<boolean>\",\n      \"facebook\": \"<boolean>\",\n      \"facebook_login\": \"<boolean>\",\n      \"fallback_composer\": \"<boolean>\",\n      \"forum_analytics\": \"<boolean>\",\n      \"good_data_and_explore\": \"<boolean>\",\n      \"google_login\": \"<boolean>\",\n      \"insights\": \"<boolean>\",\n      \"is_abusive\": \"<boolean>\",\n      \"light_agents\": \"<boolean>\",\n      \"markdown\": \"<boolean>\",\n      \"on_hold_status\": \"<boolean>\",\n      \"rich_content_in_emails\": \"<boolean>\",\n      \"sandbox\": \"<boolean>\",\n      \"satisfaction_prediction\": \"<boolean>\",\n      \"suspended_ticket_notification\": \"<boolean>\",\n      \"ticket_forms\": \"<boolean>\",\n      \"ticket_tagging\": \"<boolean>\",\n      \"topic_suggestion\": \"<boolean>\",\n      \"twitter\": \"<boolean>\",\n      \"twitter_login\": \"<boolean>\",\n      \"user_org_fields\": \"<boolean>\",\n      \"user_tagging\": \"<boolean>\",\n      \"voice\": \"<boolean>\"\n    },\n    \"agents\": {\n      \"agent_home\": \"<boolean>\",\n      \"agent_workspace\": \"<boolean>\",\n      \"aw_self_serve_migration_enabled\": \"<boolean>\",\n      \"focus_mode\": \"<boolean>\",\n      \"idle_timeout_enabled\": \"<boolean>\",\n      \"unified_agent_statuses\": \"<boolean>\"\n    },\n    \"api\": {\n      \"accepted_api_agreement\": \"<boolean>\",\n      \"api_password_access\": \"<string>\",\n      \"api_token_access\": \"<string>\"\n    },\n    \"apps\": {\n      \"create_private\": \"<boolean>\",\n      \"create_public\": \"<boolean>\",\n      \"use\": \"<boolean>\"\n    },\n    \"billing\": {\n      \"backend\": \"<string>\"\n    },\n    \"branding\": {\n      \"favicon_url\": \"<string>\",\n      \"header_color\": \"<string>\",\n      \"header_logo_url\": \"<string>\",\n      \"page_background_color\": \"<string>\",\n      \"tab_background_color\": \"<string>\",\n      \"text_color\": \"<string>\"\n    },\n    \"brands\": {\n      \"default_brand_id\": \"<integer>\",\n      \"require_brand_on_new_tickets\": \"<boolean>\"\n    },\n    \"cdn\": {\n      \"cdn_provider\": \"<string>\",\n      \"fallback_cdn_provider\": \"<string>\",\n      \"hosts\": [\n        {\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ]\n    },\n    \"chat\": {\n      \"available\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"integrated\": \"<boolean>\",\n      \"maximum_request_count\": \"<integer>\",\n      \"welcome_message\": \"<string>\"\n    },\n    \"cross_sell\": {\n      \"show_chat_tooltip\": \"<boolean>\",\n      \"xsell_source\": \"<string>\"\n    },\n    \"gooddata_advanced_analytics\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"google_apps\": {\n      \"has_google_apps\": \"<boolean>\",\n      \"has_google_apps_admin\": \"<boolean>\"\n    },\n    \"groups\": {\n      \"check_group_name_uniqueness\": \"<boolean>\"\n    },\n    \"limits\": {\n      \"attachment_size\": \"<integer>\"\n    },\n    \"localization\": {\n      \"locale_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ]\n    },\n    \"lotus\": {\n      \"pod_id\": \"<integer>\",\n      \"prefer_lotus\": \"<boolean>\",\n      \"reporting\": \"<boolean>\"\n    },\n    \"metrics\": {\n      \"account_size\": \"<string>\"\n    },\n    \"onboarding\": {\n      \"checklist_onboarding_version\": \"<integer>\",\n      \"onboarding_segments\": \"<string>\",\n      \"product_sign_up\": \"<string>\"\n    },\n    \"routing\": {\n      \"autorouting_tag\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"max_email_capacity\": \"<integer>\",\n      \"max_messaging_capacity\": \"<integer>\",\n      \"reassignment_messaging_enabled\": \"<boolean>\",\n      \"reassignment_messaging_timeout\": \"<integer>\",\n      \"reassignment_talk_timeout\": \"<integer>\"\n    },\n    \"rule\": {\n      \"macro_most_used\": \"<boolean>\",\n      \"macro_order\": \"<string>\",\n      \"skill_based_filtered_views\": [\n        {\n          \"id_112\": \"culpa nulla in irure\"\n        },\n        {\n          \"aliqua288\": true\n        }\n      ],\n      \"using_skill_based_routing\": \"<boolean>\"\n    },\n    \"side_conversations\": {\n      \"email_channel\": \"<boolean>\",\n      \"msteams_channel\": \"<boolean>\",\n      \"show_in_context_panel\": \"<boolean>\",\n      \"slack_channel\": \"<boolean>\",\n      \"tickets_channel\": \"<boolean>\"\n    },\n    \"statistics\": {\n      \"forum\": \"<boolean>\",\n      \"rule_usage\": \"<boolean>\",\n      \"search\": \"<boolean>\"\n    },\n    \"ticket_form\": {\n      \"raw_ticket_forms_instructions\": \"<string>\",\n      \"ticket_forms_instructions\": \"<string>\"\n    },\n    \"ticket_sharing_partners\": {\n      \"support_addresses\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"tickets\": {\n      \"accepted_new_collaboration_tos\": \"<boolean>\",\n      \"agent_collision\": \"<boolean>\",\n      \"agent_invitation_enabled\": \"<boolean>\",\n      \"agent_ticket_deletion\": \"<boolean>\",\n      \"allow_group_reset\": \"<boolean>\",\n      \"assign_default_organization\": \"<boolean>\",\n      \"assign_tickets_upon_solve\": \"<boolean>\",\n      \"auto_translation_enabled\": \"<boolean>\",\n      \"auto_updated_ccs_followers_rules\": \"<boolean>\",\n      \"collaboration\": \"<boolean>\",\n      \"comments_public_by_default\": \"<boolean>\",\n      \"email_attachments\": \"<boolean>\",\n      \"emoji_autocompletion\": \"<boolean>\",\n      \"follower_and_email_cc_collaborations\": \"<boolean>\",\n      \"has_color_text\": \"<boolean>\",\n      \"is_first_comment_private_enabled\": \"<boolean>\",\n      \"light_agent_email_ccs_allowed\": \"<boolean>\",\n      \"list_empty_views\": \"<boolean>\",\n      \"list_newest_comments_first\": \"<boolean>\",\n      \"markdown_ticket_comments\": \"<boolean>\",\n      \"maximum_personal_views_to_list\": \"<integer>\",\n      \"private_attachments\": \"<boolean>\",\n      \"rich_text_comments\": \"<boolean>\",\n      \"status_hold\": \"<boolean>\",\n      \"tagging\": \"<boolean>\",\n      \"using_skill_based_routing\": \"<boolean>\"\n    },\n    \"twitter\": {\n      \"shorten_url\": \"<string>\"\n    },\n    \"user\": {\n      \"agent_created_welcome_emails\": \"<boolean>\",\n      \"end_user_phone_number_validation\": \"<boolean>\",\n      \"have_gravatars_enabled\": \"<boolean>\",\n      \"language_selection\": \"<boolean>\",\n      \"multiple_organizations\": \"<boolean>\",\n      \"tagging\": \"<boolean>\",\n      \"time_zone_selection\": \"<boolean>\"\n    },\n    \"voice\": {\n      \"agent_confirmation_when_forwarding\": \"<boolean>\",\n      \"agent_wrap_up_after_calls\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"logging\": \"<boolean>\",\n      \"maximum_queue_size\": \"<integer>\",\n      \"maximum_queue_wait_time\": \"<integer>\",\n      \"only_during_business_hours\": \"<boolean>\",\n      \"outbound_enabled\": \"<boolean>\",\n      \"recordings_public\": \"<boolean>\",\n      \"uk_mobile_forwarding\": \"<boolean>\"\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "Update Account Settings",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/account/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"account",
														"settings"
													]
												},
												"description": "Updates settings for the account. See [JSON Format](#json-format) above for the settings you can update.\n\n#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/account/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"account",
																"settings"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"settings\": {\n    \"active_features\": {\n      \"advanced_analytics\": \"<boolean>\",\n      \"agent_forwarding\": \"<boolean>\",\n      \"allow_ccs\": \"<boolean>\",\n      \"allow_email_template_customization\": \"<boolean>\",\n      \"automatic_answers\": \"<boolean>\",\n      \"bcc_archiving\": \"<boolean>\",\n      \"benchmark_opt_out\": \"<boolean>\",\n      \"business_hours\": \"<boolean>\",\n      \"chat\": \"<boolean>\",\n      \"chat_about_my_ticket\": \"<boolean>\",\n      \"csat_reason_code\": \"<boolean>\",\n      \"custom_dkim_domain\": \"<boolean>\",\n      \"customer_context_as_default\": \"<boolean>\",\n      \"customer_satisfaction\": \"<boolean>\",\n      \"dynamic_contents\": \"<boolean>\",\n      \"explore\": \"<boolean>\",\n      \"explore_on_support_ent_plan\": \"<boolean>\",\n      \"explore_on_support_pro_plan\": \"<boolean>\",\n      \"facebook\": \"<boolean>\",\n      \"facebook_login\": \"<boolean>\",\n      \"fallback_composer\": \"<boolean>\",\n      \"forum_analytics\": \"<boolean>\",\n      \"good_data_and_explore\": \"<boolean>\",\n      \"google_login\": \"<boolean>\",\n      \"insights\": \"<boolean>\",\n      \"is_abusive\": \"<boolean>\",\n      \"light_agents\": \"<boolean>\",\n      \"markdown\": \"<boolean>\",\n      \"on_hold_status\": \"<boolean>\",\n      \"rich_content_in_emails\": \"<boolean>\",\n      \"sandbox\": \"<boolean>\",\n      \"satisfaction_prediction\": \"<boolean>\",\n      \"suspended_ticket_notification\": \"<boolean>\",\n      \"ticket_forms\": \"<boolean>\",\n      \"ticket_tagging\": \"<boolean>\",\n      \"topic_suggestion\": \"<boolean>\",\n      \"twitter\": \"<boolean>\",\n      \"twitter_login\": \"<boolean>\",\n      \"user_org_fields\": \"<boolean>\",\n      \"user_tagging\": \"<boolean>\",\n      \"voice\": \"<boolean>\"\n    },\n    \"agents\": {\n      \"agent_home\": \"<boolean>\",\n      \"agent_workspace\": \"<boolean>\",\n      \"aw_self_serve_migration_enabled\": \"<boolean>\",\n      \"focus_mode\": \"<boolean>\",\n      \"idle_timeout_enabled\": \"<boolean>\",\n      \"unified_agent_statuses\": \"<boolean>\"\n    },\n    \"api\": {\n      \"accepted_api_agreement\": \"<boolean>\",\n      \"api_password_access\": \"<string>\",\n      \"api_token_access\": \"<string>\"\n    },\n    \"apps\": {\n      \"create_private\": \"<boolean>\",\n      \"create_public\": \"<boolean>\",\n      \"use\": \"<boolean>\"\n    },\n    \"billing\": {\n      \"backend\": \"<string>\"\n    },\n    \"branding\": {\n      \"favicon_url\": \"<string>\",\n      \"header_color\": \"<string>\",\n      \"header_logo_url\": \"<string>\",\n      \"page_background_color\": \"<string>\",\n      \"tab_background_color\": \"<string>\",\n      \"text_color\": \"<string>\"\n    },\n    \"brands\": {\n      \"default_brand_id\": \"<integer>\",\n      \"require_brand_on_new_tickets\": \"<boolean>\"\n    },\n    \"cdn\": {\n      \"cdn_provider\": \"<string>\",\n      \"fallback_cdn_provider\": \"<string>\",\n      \"hosts\": [\n        {\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ]\n    },\n    \"chat\": {\n      \"available\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"integrated\": \"<boolean>\",\n      \"maximum_request_count\": \"<integer>\",\n      \"welcome_message\": \"<string>\"\n    },\n    \"cross_sell\": {\n      \"show_chat_tooltip\": \"<boolean>\",\n      \"xsell_source\": \"<string>\"\n    },\n    \"gooddata_advanced_analytics\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"google_apps\": {\n      \"has_google_apps\": \"<boolean>\",\n      \"has_google_apps_admin\": \"<boolean>\"\n    },\n    \"groups\": {\n      \"check_group_name_uniqueness\": \"<boolean>\"\n    },\n    \"limits\": {\n      \"attachment_size\": \"<integer>\"\n    },\n    \"localization\": {\n      \"locale_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ]\n    },\n    \"lotus\": {\n      \"pod_id\": \"<integer>\",\n      \"prefer_lotus\": \"<boolean>\",\n      \"reporting\": \"<boolean>\"\n    },\n    \"metrics\": {\n      \"account_size\": \"<string>\"\n    },\n    \"onboarding\": {\n      \"checklist_onboarding_version\": \"<integer>\",\n      \"onboarding_segments\": \"<string>\",\n      \"product_sign_up\": \"<string>\"\n    },\n    \"routing\": {\n      \"autorouting_tag\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"max_email_capacity\": \"<integer>\",\n      \"max_messaging_capacity\": \"<integer>\",\n      \"reassignment_messaging_enabled\": \"<boolean>\",\n      \"reassignment_messaging_timeout\": \"<integer>\",\n      \"reassignment_talk_timeout\": \"<integer>\"\n    },\n    \"rule\": {\n      \"macro_most_used\": \"<boolean>\",\n      \"macro_order\": \"<string>\",\n      \"skill_based_filtered_views\": [\n        {\n          \"id_112\": \"culpa nulla in irure\"\n        },\n        {\n          \"aliqua288\": true\n        }\n      ],\n      \"using_skill_based_routing\": \"<boolean>\"\n    },\n    \"side_conversations\": {\n      \"email_channel\": \"<boolean>\",\n      \"msteams_channel\": \"<boolean>\",\n      \"show_in_context_panel\": \"<boolean>\",\n      \"slack_channel\": \"<boolean>\",\n      \"tickets_channel\": \"<boolean>\"\n    },\n    \"statistics\": {\n      \"forum\": \"<boolean>\",\n      \"rule_usage\": \"<boolean>\",\n      \"search\": \"<boolean>\"\n    },\n    \"ticket_form\": {\n      \"raw_ticket_forms_instructions\": \"<string>\",\n      \"ticket_forms_instructions\": \"<string>\"\n    },\n    \"ticket_sharing_partners\": {\n      \"support_addresses\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"tickets\": {\n      \"accepted_new_collaboration_tos\": \"<boolean>\",\n      \"agent_collision\": \"<boolean>\",\n      \"agent_invitation_enabled\": \"<boolean>\",\n      \"agent_ticket_deletion\": \"<boolean>\",\n      \"allow_group_reset\": \"<boolean>\",\n      \"assign_default_organization\": \"<boolean>\",\n      \"assign_tickets_upon_solve\": \"<boolean>\",\n      \"auto_translation_enabled\": \"<boolean>\",\n      \"auto_updated_ccs_followers_rules\": \"<boolean>\",\n      \"collaboration\": \"<boolean>\",\n      \"comments_public_by_default\": \"<boolean>\",\n      \"email_attachments\": \"<boolean>\",\n      \"emoji_autocompletion\": \"<boolean>\",\n      \"follower_and_email_cc_collaborations\": \"<boolean>\",\n      \"has_color_text\": \"<boolean>\",\n      \"is_first_comment_private_enabled\": \"<boolean>\",\n      \"light_agent_email_ccs_allowed\": \"<boolean>\",\n      \"list_empty_views\": \"<boolean>\",\n      \"list_newest_comments_first\": \"<boolean>\",\n      \"markdown_ticket_comments\": \"<boolean>\",\n      \"maximum_personal_views_to_list\": \"<integer>\",\n      \"private_attachments\": \"<boolean>\",\n      \"rich_text_comments\": \"<boolean>\",\n      \"status_hold\": \"<boolean>\",\n      \"tagging\": \"<boolean>\",\n      \"using_skill_based_routing\": \"<boolean>\"\n    },\n    \"twitter\": {\n      \"shorten_url\": \"<string>\"\n    },\n    \"user\": {\n      \"agent_created_welcome_emails\": \"<boolean>\",\n      \"end_user_phone_number_validation\": \"<boolean>\",\n      \"have_gravatars_enabled\": \"<boolean>\",\n      \"language_selection\": \"<boolean>\",\n      \"multiple_organizations\": \"<boolean>\",\n      \"tagging\": \"<boolean>\",\n      \"time_zone_selection\": \"<boolean>\"\n    },\n    \"voice\": {\n      \"agent_confirmation_when_forwarding\": \"<boolean>\",\n      \"agent_wrap_up_after_calls\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"logging\": \"<boolean>\",\n      \"maximum_queue_size\": \"<integer>\",\n      \"maximum_queue_wait_time\": \"<integer>\",\n      \"only_during_business_hours\": \"<boolean>\",\n      \"outbound_enabled\": \"<boolean>\",\n      \"recordings_public\": \"<boolean>\",\n      \"uk_mobile_forwarding\": \"<boolean>\"\n    }\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "accounts",
							"item": [
								{
									"name": "available",
									"item": [
										{
											"name": "Verify Subdomain Availability",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/accounts/available?subdomain=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"accounts",
														"available"
													],
													"query": [
														{
															"key": "subdomain",
															"value": "<string>",
															"description": "(Required) Specify the name of the subdomain you want to verify. The name can't contain underscores, hyphens, or spaces.\n"
														}
													]
												},
												"description": "Zendesk Support credentials are not required to access this endpoint. You can use any Zendesk Support subdomain.\n\nReturns \"true\" if the subdomain is available.\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/accounts/available?subdomain=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"accounts",
																"available"
															],
															"query": [
																{
																	"key": "subdomain",
																	"value": "<string>",
																	"description": "(Required) Specify the name of the subdomain you want to verify. The name can't contain underscores, hyphens, or spaces.\n"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create Trial Account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"accounts"
											]
										}
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"accounts"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account\": {\n    \"name\": \"<string>\",\n    \"subdomain\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "activities",
							"item": [
								{
									"name": "{activity_id}",
									"item": [
										{
											"name": "Show Activity",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/:activity_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														":activity_id"
													],
													"variable": [
														{
															"key": "activity_id",
															"value": "<integer>",
															"description": "(Required) The activity ID"
														}
													]
												},
												"description": "Lists a specific activity.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/activities/:activity_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"activities",
																":activity_id"
															],
															"variable": [
																{
																	"key": "activity_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"activity\": {\n    \"actor\": {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"irure_0b\": \"Lorem irure labore tempor Excepteur\",\n        \"mollit__\": 38104242\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"incididunt3e9\": 35441231.10533577,\n        \"nulla__52\": -47427705.594102584\n      },\n      \"verified\": \"<boolean>\"\n    },\n    \"actor_id\": \"<integer>\",\n    \"created_at\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"object\": {\n      \"ad_7c\": true,\n      \"nulla_75\": \"mollit commodo ut sunt\"\n    },\n    \"target\": {\n      \"Lorem_3\": \"amet\",\n      \"incididunt_a5\": -56317698\n    },\n    \"title\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\",\n    \"user\": {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"ipsum_e\": -47370330\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"aute_de\": 24206129.37237893\n      },\n      \"verified\": \"<boolean>\"\n    },\n    \"user_id\": \"<integer>\",\n    \"verb\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "count",
									"item": [
										{
											"name": "Count Activities",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities",
														"count"
													]
												},
												"description": "Returns an approximate count of ticket activities in the last 30 days affecting the agent making the request. If the count exceeds 100,000, the count will return a cached result. This cached result will update every 24 hours.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n* Agents"
											},
											"response": [
												{
													"name": "Count of ticket activities",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/activities/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"activities",
																"count"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": {\n    \"refreshed_at\": \"<dateTime>\",\n    \"value\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Activities",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/activities?since=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"activities"
											],
											"query": [
												{
													"key": "since",
													"value": "<string>",
													"description": "A UTC time in ISO 8601 format to return ticket activities since said date."
												}
											]
										},
										"description": "Lists ticket activities in the last 30 days affecting the agent making the request.\nAlso sideloads the following arrays of user records:\n\n- actors - All actors involved in the listed activities\n- users - All users involved in the listed activities\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/activities?since=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"activities"
													],
													"query": [
														{
															"key": "since",
															"value": "<string>",
															"description": "A UTC time in ISO 8601 format to return ticket activities since said date."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"activities\": [\n    {\n      \"actor\": {\n        \"name\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"alias\": \"<string>\",\n        \"chat_only\": \"<boolean>\",\n        \"created_at\": \"<string>\",\n        \"custom_role_id\": \"<integer>\",\n        \"default_group_id\": \"<integer>\",\n        \"details\": \"<string>\",\n        \"email\": \"<string>\",\n        \"external_id\": \"<string>\",\n        \"iana_time_zone\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"last_login_at\": \"<string>\",\n        \"locale\": \"<string>\",\n        \"locale_id\": \"<integer>\",\n        \"moderator\": \"<boolean>\",\n        \"notes\": \"<string>\",\n        \"only_private_comments\": \"<boolean>\",\n        \"organization_id\": \"<integer>\",\n        \"phone\": \"<string>\",\n        \"photo\": {\n          \"elit91\": -14327192.09180662,\n          \"officiac\": -69738620.91123389,\n          \"consequat_f4\": -53537763\n        },\n        \"remote_photo_url\": \"<string>\",\n        \"report_csv\": \"<boolean>\",\n        \"restricted_agent\": \"<boolean>\",\n        \"role\": \"<string>\",\n        \"role_type\": \"<integer>\",\n        \"shared\": \"<boolean>\",\n        \"shared_agent\": \"<boolean>\",\n        \"shared_phone_number\": \"<boolean>\",\n        \"signature\": \"<string>\",\n        \"suspended\": \"<boolean>\",\n        \"tags\": \"<array>\",\n        \"ticket_restriction\": \"<string>\",\n        \"time_zone\": \"<string>\",\n        \"two_factor_auth_enabled\": \"<boolean>\",\n        \"updated_at\": \"<string>\",\n        \"url\": \"<string>\",\n        \"user_fields\": {\n          \"et_1\": \"enim cupidatat commodo culpa\",\n          \"est9\": 71939695\n        },\n        \"verified\": \"<boolean>\"\n      },\n      \"actor_id\": \"<integer>\",\n      \"created_at\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"object\": {\n        \"ad_b\": -58994698.62054207,\n        \"cillum_54\": true,\n        \"quis751\": true\n      },\n      \"target\": {\n        \"quis_1\": 42851901.69927469,\n        \"in_fa_\": -84684856.55347013\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user\": {\n        \"name\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"alias\": \"<string>\",\n        \"chat_only\": \"<boolean>\",\n        \"created_at\": \"<string>\",\n        \"custom_role_id\": \"<integer>\",\n        \"default_group_id\": \"<integer>\",\n        \"details\": \"<string>\",\n        \"email\": \"<string>\",\n        \"external_id\": \"<string>\",\n        \"iana_time_zone\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"last_login_at\": \"<string>\",\n        \"locale\": \"<string>\",\n        \"locale_id\": \"<integer>\",\n        \"moderator\": \"<boolean>\",\n        \"notes\": \"<string>\",\n        \"only_private_comments\": \"<boolean>\",\n        \"organization_id\": \"<integer>\",\n        \"phone\": \"<string>\",\n        \"photo\": {\n          \"doe\": \"eu cul\",\n          \"in824\": 20213666.498054832,\n          \"sit_cee\": true,\n          \"tempor_35\": false\n        },\n        \"remote_photo_url\": \"<string>\",\n        \"report_csv\": \"<boolean>\",\n        \"restricted_agent\": \"<boolean>\",\n        \"role\": \"<string>\",\n        \"role_type\": \"<integer>\",\n        \"shared\": \"<boolean>\",\n        \"shared_agent\": \"<boolean>\",\n        \"shared_phone_number\": \"<boolean>\",\n        \"signature\": \"<string>\",\n        \"suspended\": \"<boolean>\",\n        \"tags\": \"<array>\",\n        \"ticket_restriction\": \"<string>\",\n        \"time_zone\": \"<string>\",\n        \"two_factor_auth_enabled\": \"<boolean>\",\n        \"updated_at\": \"<string>\",\n        \"url\": \"<string>\",\n        \"user_fields\": {\n          \"laboref99\": 93240306.6169321,\n          \"eae\": true\n        },\n        \"verified\": \"<boolean>\"\n      },\n      \"user_id\": \"<integer>\",\n      \"verb\": \"<string>\"\n    },\n    {\n      \"actor\": {\n        \"name\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"alias\": \"<string>\",\n        \"chat_only\": \"<boolean>\",\n        \"created_at\": \"<string>\",\n        \"custom_role_id\": \"<integer>\",\n        \"default_group_id\": \"<integer>\",\n        \"details\": \"<string>\",\n        \"email\": \"<string>\",\n        \"external_id\": \"<string>\",\n        \"iana_time_zone\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"last_login_at\": \"<string>\",\n        \"locale\": \"<string>\",\n        \"locale_id\": \"<integer>\",\n        \"moderator\": \"<boolean>\",\n        \"notes\": \"<string>\",\n        \"only_private_comments\": \"<boolean>\",\n        \"organization_id\": \"<integer>\",\n        \"phone\": \"<string>\",\n        \"photo\": {\n          \"sitb20\": -90358256.91389015\n        },\n        \"remote_photo_url\": \"<string>\",\n        \"report_csv\": \"<boolean>\",\n        \"restricted_agent\": \"<boolean>\",\n        \"role\": \"<string>\",\n        \"role_type\": \"<integer>\",\n        \"shared\": \"<boolean>\",\n        \"shared_agent\": \"<boolean>\",\n        \"shared_phone_number\": \"<boolean>\",\n        \"signature\": \"<string>\",\n        \"suspended\": \"<boolean>\",\n        \"tags\": \"<array>\",\n        \"ticket_restriction\": \"<string>\",\n        \"time_zone\": \"<string>\",\n        \"two_factor_auth_enabled\": \"<boolean>\",\n        \"updated_at\": \"<string>\",\n        \"url\": \"<string>\",\n        \"user_fields\": {\n          \"consectetur_3c\": -6810769.664323062\n        },\n        \"verified\": \"<boolean>\"\n      },\n      \"actor_id\": \"<integer>\",\n      \"created_at\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"object\": {\n        \"sint9\": -9514168.938832283,\n        \"culpa_f8f\": \"eiusmod culpa\",\n        \"laboriscab\": -63866791,\n        \"elita8e\": -45933527\n      },\n      \"target\": {\n        \"est94\": -28873171.1259941\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user\": {\n        \"name\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"alias\": \"<string>\",\n        \"chat_only\": \"<boolean>\",\n        \"created_at\": \"<string>\",\n        \"custom_role_id\": \"<integer>\",\n        \"default_group_id\": \"<integer>\",\n        \"details\": \"<string>\",\n        \"email\": \"<string>\",\n        \"external_id\": \"<string>\",\n        \"iana_time_zone\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"last_login_at\": \"<string>\",\n        \"locale\": \"<string>\",\n        \"locale_id\": \"<integer>\",\n        \"moderator\": \"<boolean>\",\n        \"notes\": \"<string>\",\n        \"only_private_comments\": \"<boolean>\",\n        \"organization_id\": \"<integer>\",\n        \"phone\": \"<string>\",\n        \"photo\": {\n          \"exercitation_a8c\": 61259941.24725601\n        },\n        \"remote_photo_url\": \"<string>\",\n        \"report_csv\": \"<boolean>\",\n        \"restricted_agent\": \"<boolean>\",\n        \"role\": \"<string>\",\n        \"role_type\": \"<integer>\",\n        \"shared\": \"<boolean>\",\n        \"shared_agent\": \"<boolean>\",\n        \"shared_phone_number\": \"<boolean>\",\n        \"signature\": \"<string>\",\n        \"suspended\": \"<boolean>\",\n        \"tags\": \"<array>\",\n        \"ticket_restriction\": \"<string>\",\n        \"time_zone\": \"<string>\",\n        \"two_factor_auth_enabled\": \"<boolean>\",\n        \"updated_at\": \"<string>\",\n        \"url\": \"<string>\",\n        \"user_fields\": {\n          \"consectetur_1\": 174133,\n          \"elit_16\": -61474319,\n          \"dod7\": \"Duis irure sint\",\n          \"sitd00\": \"dolor sint\"\n        },\n        \"verified\": \"<boolean>\"\n      },\n      \"user_id\": \"<integer>\",\n      \"verb\": \"<string>\"\n    }\n  ],\n  \"actors\": [\n    {\n      \"ex132\": false,\n      \"nisi_b8_\": false,\n      \"est_c37\": 30998795.08260712\n    },\n    {\n      \"eiusmod10_\": 20873734.33531061\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"users\": [\n    {\n      \"consecteturb57\": \"non commodo pariatur sit\"\n    },\n    {\n      \"deserunt_f8e\": 40033640\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "attachments",
							"item": [
								{
									"name": "{attachment_id}",
									"item": [
										{
											"name": "Show Attachment",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/attachments/:attachment_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"attachments",
														":attachment_id"
													],
													"variable": [
														{
															"key": "attachment_id",
															"value": "<integer>",
															"description": "(Required) The ID of the attachment"
														}
													]
												},
												"description": "Shows attachment details. You can get the value of the `attachment_id` parameter by listing the ticket's comments.\nSee [List Comments](/api-reference/ticketing/tickets/ticket_comments/#list-comments). Each comment\nin the list has an `attachments` list that specifies an `id` for each attachment.\n\n\n #### Allowed for\n\n * Agents\n"
											},
											"response": [
												{
													"name": "Success Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/attachments/:attachment_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"attachments",
																":attachment_id"
															],
															"variable": [
																{
																	"key": "attachment_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"attachment\": {\n    \"content_type\": \"<string>\",\n    \"content_url\": \"<string>\",\n    \"deleted\": \"<boolean>\",\n    \"file_name\": \"<string>\",\n    \"height\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"inline\": \"<boolean>\",\n    \"malware_access_override\": \"<boolean>\",\n    \"malware_scan_result\": \"<string>\",\n    \"mapped_content_url\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"url\": \"<string>\",\n    \"width\": \"<string>\",\n    \"thumbnails\": [\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\"\n      },\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\"\n      }\n    ]\n  }\n}"
												}
											]
										},
										{
											"name": "Update Attachment for Malware",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"attachment\": {\n    \"malware_access_override\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/attachments/:attachment_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"attachments",
														":attachment_id"
													],
													"variable": [
														{
															"key": "attachment_id",
															"value": "<integer>",
															"description": "(Required) The ID of the attachment"
														}
													]
												},
												"description": "Toggles enabling or restricting agent access to attachments with detected malware.\n\n#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"attachment\": {\n    \"malware_access_override\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/attachments/:attachment_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"attachments",
																":attachment_id"
															],
															"variable": [
																{
																	"key": "attachment_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"attachment\": {\n    \"content_type\": \"<string>\",\n    \"content_url\": \"<string>\",\n    \"deleted\": \"<boolean>\",\n    \"file_name\": \"<string>\",\n    \"height\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"inline\": \"<boolean>\",\n    \"malware_access_override\": \"<boolean>\",\n    \"malware_scan_result\": \"<string>\",\n    \"mapped_content_url\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"url\": \"<string>\",\n    \"width\": \"<string>\",\n    \"thumbnails\": [\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\"\n      },\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\"\n      }\n    ]\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "audit_logs",
							"item": [
								{
									"name": "{audit_log_id}",
									"item": [
										{
											"name": "Show Audit Log",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit_logs/:audit_log_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit_logs",
														":audit_log_id"
													],
													"variable": [
														{
															"key": "audit_log_id",
															"value": "<integer>",
															"description": "(Required) The ID of the audit log"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins on accounts that have audit-log access\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/audit_logs/:audit_log_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"audit_logs",
																":audit_log_id"
															],
															"variable": [
																{
																	"key": "audit_log_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"audit_log\": {\n    \"action\": \"<string>\",\n    \"action_label\": \"<string>\",\n    \"actor_id\": \"<integer>\",\n    \"actor_name\": \"<string>\",\n    \"change_description\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"ip_address\": \"<string>\",\n    \"source_id\": \"<integer>\",\n    \"source_label\": \"<string>\",\n    \"source_type\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "export",
									"item": [
										{
											"name": "Export Audit Logs",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit_logs/export?filter[source_type]=<string>&filter[source_id]=<integer>&filter[actor_id]=<integer>&filter[ip_address]=<string>&filter[created_at]=<string>&filter[action]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit_logs",
														"export"
													],
													"query": [
														{
															"key": "filter[source_type]",
															"value": "<string>",
															"description": "Filter audit logs by the source type. For example, user or rule"
														},
														{
															"key": "filter[source_id]",
															"value": "<integer>",
															"description": "Filter audit logs by the source id. Requires `filter[source_type]` to also be set."
														},
														{
															"key": "filter[actor_id]",
															"value": "<integer>",
															"description": "Filter audit logs by the actor id"
														},
														{
															"key": "filter[ip_address]",
															"value": "<string>",
															"description": "Filter audit logs by the ip address"
														},
														{
															"key": "filter[created_at]",
															"value": "<string>",
															"description": "Filter audit logs by the time of creation"
														},
														{
															"key": "filter[action]",
															"value": "<string>",
															"description": "Filter audit logs by the action"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins on accounts that have audit log access\n"
											},
											"response": [
												{
													"name": "Accepted description",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/audit_logs/export?filter[source_type]=<string>&filter[source_id]=<integer>&filter[actor_id]=<integer>&filter[ip_address]=<string>&filter[created_at]=<string>&filter[action]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"audit_logs",
																"export"
															],
															"query": [
																{
																	"key": "filter[source_type]",
																	"value": "<string>",
																	"description": "Filter audit logs by the source type. For example, user or rule"
																},
																{
																	"key": "filter[source_id]",
																	"value": "<integer>",
																	"description": "Filter audit logs by the source id. Requires `filter[source_type]` to also be set."
																},
																{
																	"key": "filter[actor_id]",
																	"value": "<integer>",
																	"description": "Filter audit logs by the actor id"
																},
																{
																	"key": "filter[ip_address]",
																	"value": "<string>",
																	"description": "Filter audit logs by the ip address"
																},
																{
																	"key": "filter[created_at]",
																	"value": "<string>",
																	"description": "Filter audit logs by the time of creation"
																},
																{
																	"key": "filter[action]",
																	"value": "<string>",
																	"description": "Filter audit logs by the action"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "<string>"
												}
											]
										}
									]
								},
								{
									"name": "List Audit Logs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/audit_logs?filter[source_type]=<string>&filter[source_id]=<integer>&filter[actor_id]=<integer>&filter[ip_address]=<string>&filter[created_at]=<string>&filter[action]=<string>&sort_by=<string>&sort_order=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"audit_logs"
											],
											"query": [
												{
													"key": "filter[source_type]",
													"value": "<string>",
													"description": "Filter audit logs by the source type. For example, user or rule"
												},
												{
													"key": "filter[source_id]",
													"value": "<integer>",
													"description": "Filter audit logs by the source id. Requires `filter[source_type]` to also be set."
												},
												{
													"key": "filter[actor_id]",
													"value": "<integer>",
													"description": "Filter audit logs by the actor id"
												},
												{
													"key": "filter[ip_address]",
													"value": "<string>",
													"description": "Filter audit logs by the ip address"
												},
												{
													"key": "filter[created_at]",
													"value": "<string>",
													"description": "Filter audit logs by the time of creation"
												},
												{
													"key": "filter[action]",
													"value": "<string>",
													"description": "Filter audit logs by the action"
												},
												{
													"key": "sort_by",
													"value": "<string>",
													"description": "Offset pagination only. Sort audit logs. Default is `sort_by=created_at`"
												},
												{
													"key": "sort_order",
													"value": "<string>",
													"description": "Offset pagination only. Sort audit logs. Default is `sort_order=desc`"
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "Cursor pagination only. Sort audit logs. Default is `sort=-created_at`"
												}
											]
										},
										"description": "#### Allowed For\n\n* Admins on accounts that have audit log access\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/audit_logs?filter[source_type]=<string>&filter[source_id]=<integer>&filter[actor_id]=<integer>&filter[ip_address]=<string>&filter[created_at]=<string>&filter[action]=<string>&sort_by=<string>&sort_order=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"audit_logs"
													],
													"query": [
														{
															"key": "filter[source_type]",
															"value": "<string>",
															"description": "Filter audit logs by the source type. For example, user or rule"
														},
														{
															"key": "filter[source_id]",
															"value": "<integer>",
															"description": "Filter audit logs by the source id. Requires `filter[source_type]` to also be set."
														},
														{
															"key": "filter[actor_id]",
															"value": "<integer>",
															"description": "Filter audit logs by the actor id"
														},
														{
															"key": "filter[ip_address]",
															"value": "<string>",
															"description": "Filter audit logs by the ip address"
														},
														{
															"key": "filter[created_at]",
															"value": "<string>",
															"description": "Filter audit logs by the time of creation"
														},
														{
															"key": "filter[action]",
															"value": "<string>",
															"description": "Filter audit logs by the action"
														},
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "Offset pagination only. Sort audit logs. Default is `sort_by=created_at`"
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "Offset pagination only. Sort audit logs. Default is `sort_order=desc`"
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Cursor pagination only. Sort audit logs. Default is `sort=-created_at`"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"audit_logs\": [\n    {\n      \"action\": \"<string>\",\n      \"action_label\": \"<string>\",\n      \"actor_id\": \"<integer>\",\n      \"actor_name\": \"<string>\",\n      \"change_description\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"ip_address\": \"<string>\",\n      \"source_id\": \"<integer>\",\n      \"source_label\": \"<string>\",\n      \"source_type\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"action\": \"<string>\",\n      \"action_label\": \"<string>\",\n      \"actor_id\": \"<integer>\",\n      \"actor_name\": \"<string>\",\n      \"change_description\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"ip_address\": \"<string>\",\n      \"source_id\": \"<integer>\",\n      \"source_label\": \"<string>\",\n      \"source_type\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "autocomplete",
							"item": [
								{
									"name": "tags",
									"item": [
										{
											"name": "Search Tags",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/autocomplete/tags?name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"autocomplete",
														"tags"
													],
													"query": [
														{
															"key": "name",
															"value": "<string>",
															"description": "A substring of a tag to search for"
														}
													]
												},
												"description": "Returns an array of registered and recent tag names that start with the characters specified in the `name` query parameter. You must specify at least 2 characters.\n\n#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/autocomplete/tags?name=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"autocomplete",
																"tags"
															],
															"query": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "A substring of a tag to search for"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "automations",
							"item": [
								{
									"name": "{automation_id}",
									"item": [
										{
											"name": "Show Automation",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/automations/:automation_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"automations",
														":automation_id"
													],
													"variable": [
														{
															"key": "automation_id",
															"value": "<integer>",
															"description": "(Required) The ID of the automation"
														}
													]
												},
												"description": "#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/automations/:automation_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"automations",
																":automation_id"
															],
															"variable": [
																{
																	"key": "automation_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"automation\": {\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"active\": \"<boolean>\",\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_title\": \"<string>\",\n    \"title\": \"<string>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Automation",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/automations/:automation_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"automations",
														":automation_id"
													],
													"variable": [
														{
															"key": "automation_id",
															"value": "<integer>",
															"description": "(Required) The ID of the automation"
														}
													]
												},
												"description": "Updates an automation.\n\nUpdated automations must be unique and have at least one condition that is true only once or an action that nullifies at least one of the conditions. Active automations can have overlapping conditions but can't be identical.\n\nThe request must include the following conditions in the `all` array:\n- At least one time-based condition\n- At least one condition that checks one of the following fields: 'status', 'type', 'group_id', 'assignee_id', or 'requester_id'\n\n**Note**: Updating a condition or action updates both the `conditions` and `actions` arrays, clearing all existing values of both arrays. Include all your conditions and actions when updating any condition or action.\n**Note**: You might be restricted from updating some default automations.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/automations/:automation_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"automations",
																":automation_id"
															],
															"variable": [
																{
																	"key": "automation_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"automation\": {\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"active\": \"<boolean>\",\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_title\": \"<string>\",\n    \"title\": \"<string>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Automation",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/automations/:automation_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"automations",
														":automation_id"
													],
													"variable": [
														{
															"key": "automation_id",
															"value": "<integer>",
															"description": "(Required) The ID of the automation"
														}
													]
												},
												"description": "**Note**: You might be restricted from deleting some default automations.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/automations/:automation_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"automations",
																":automation_id"
															],
															"variable": [
																{
																	"key": "automation_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "active",
									"item": [
										{
											"name": "List Active Automations",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/automations/active",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"automations",
														"active"
													]
												},
												"description": "Lists all active automations.\n\n#### Allowed For\n\n* Agents\n\n#### Available Parameters\n\nYou can pass in any combination of the following optional filters:\n\n| Name       | Type   | Comment\n| ---------- | ------ | -------\n| sort_by    | string | Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\"\n| sort_order | string | One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each automation, if present\n| permissions      | The permissions for each automation\n| usage_1h         | The number of times each automation has been used in the past hour\n| usage_24h        | The number of times each automation has been used in the past day\n| usage_7d         | The number of times each automation has been used in the past week\n| usage_30d        | The number of times each automation has been used in the past thirty days\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/automations/active",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"automations",
																"active"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"automations\": [\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Bulk Delete Automations",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/automations/destroy_many?ids=<integer>&ids=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"automations",
														"destroy_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<integer>",
															"description": "The IDs of the automations to delete"
														},
														{
															"key": "ids",
															"value": "<integer>",
															"description": "The IDs of the automations to delete"
														}
													]
												},
												"description": "Deletes the automations corresponding to the provided comma-separated list of IDs.\n\n**Note**: You might be restricted from deleting some default automations. If included in a bulk deletion, the unrestricted automations will be deleted.\n\n#### Allowed For\n\n* Agents\n\n#### Request Parameters\n\nThe DELETE request takes one parameter, an `ids` object that lists the automations to delete.\n\n| Name | Description\n| ---- | -----------\n| ids  | The IDs of the automations to delete\n\n#### Example request\n\n```js\n{\n  \"ids\": \"25,23,27,22\"\n}\n```\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/automations/destroy_many?ids=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"automations",
																"destroy_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<integer>",
																	"description": "The IDs of the automations to delete"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "search",
									"item": [
										{
											"name": "Search Automations",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/automations/search?query=<string>&active=<boolean>&sort_by=<string>&sort_order=<string>&include=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"automations",
														"search"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>",
															"description": "(Required) Query string used to find all automations with matching title"
														},
														{
															"key": "active",
															"value": "<boolean>",
															"description": "Filter by active automations if true or inactive automations if false"
														},
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "Possible values are \"alphabetical\", \"created_at\", \"updated_at\", and \"position\". If unspecified, the automations are sorted by relevance"
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
														},
														{
															"key": "include",
															"value": "<string>",
															"description": "A sideload to include in the response. See [Sideloads](#sideloads-2)"
														}
													]
												},
												"description": "#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported. For more information, see [Side-loading](/documentation/ticketing/using-the-zendesk-api/side_loading/).\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each automation, if present\n| permissions      | The permissions for each automation\n| usage_1h         | The number of times each automation has been used in the past hour\n| usage_24h        | The number of times each automation has been used in the past day\n| usage_7d         | The number of times each automation has been used in the past week\n| usage_30d        | The number of times each automation has been used in the past thirty days\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/automations/search?query=<string>&active=<boolean>&sort_by=<string>&sort_order=<string>&include=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"automations",
																"search"
															],
															"query": [
																{
																	"key": "query",
																	"value": "<string>",
																	"description": "(Required) Query string used to find all automations with matching title"
																},
																{
																	"key": "active",
																	"value": "<boolean>",
																	"description": "Filter by active automations if true or inactive automations if false"
																},
																{
																	"key": "sort_by",
																	"value": "<string>",
																	"description": "Possible values are \"alphabetical\", \"created_at\", \"updated_at\", and \"position\". If unspecified, the automations are sorted by relevance"
																},
																{
																	"key": "sort_order",
																	"value": "<string>",
																	"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
																},
																{
																	"key": "include",
																	"value": "<string>",
																	"description": "A sideload to include in the response. See [Sideloads](#sideloads-2)"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"automations\": [\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "update_many",
									"item": [
										{
											"name": "Update Many Automations",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/automations/update_many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"automations",
														"update_many"
													]
												},
												"description": "**Note**: You might be restricted from updating some default automations. If included in a bulk update, the unrestricted automations will be updated.\n\n#### Allowed For\n\n* Agents\n\n#### Request Parameters\n\nThe PUT request expects an `automations` object that lists the automations to update.\n\nEach automation may have the following properties:\n\n| Name     | Mandatory | Description\n| -------- | --------- | -----------\n| id       | yes       | The ID of the automation to update\n| position | no        | The new position of the automation\n| active   | no        | The active status of the automation (true or false)\n\n#### Example Request\n\n```js\n{\n  \"automations\": [\n    {\"id\": 25, \"position\": 3},\n    {\"id\": 23, \"position\": 5},\n    {\"id\": 27, \"position\": 9},\n    {\"id\": 22, \"position\": 7}\n  ]\n}\n```\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/automations/update_many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"automations",
																"update_many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"automations\": [\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Automations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/automations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"automations"
											]
										},
										"description": "Lists all automations for the current account.\n\n#### Allowed For\n\n* Agents\n\n#### Available Parameters\n\nYou can pass in any combination of the following optional filters:\n\n| Name       | Type    | Comment\n| ---------- | ------- | -------\n| active     | boolean | Only active automations if true, inactive automations if false\n| sort_by    | string  | Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\"\n| sort_order | string  | One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others\n\n#### Sideloads\n\nThe following sideloads are supported. The usage sideloads are only supported on the Support Professional or Suite Growth plan or above.\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each automation, if present\n| permissions      | The permissions for each automation\n| usage_1h         | The number of times each automation has been used in the past hour\n| usage_24h        | The number of times each automation has been used in the past day\n| usage_7d         | The number of times each automation has been used in the past week\n| usage_30d        | The number of times each automation has been used in the past thirty days\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/automations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"automations"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"automations\": [\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create Automation",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/automations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"automations"
											]
										},
										"description": "Creates an automation.\n\nNew automations must be unique and have at least one condition that is true only once or an action that nullifies at least one of the conditions. Active automations can have overlapping conditions but can't be identical.\n\nThe request must include the following conditions in the `all` array:\n\n- At least one time-based condition\n- At least one condition that checks one of the following fields: `status`, `type`, `group_id`, `assignee_id`, or `requester_id`.\n\n#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/automations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"automations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"automation\": {\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"active\": \"<boolean>\",\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_title\": \"<string>\",\n    \"title\": \"<string>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "bookmarks",
							"item": [
								{
									"name": "{bookmark_id}",
									"item": [
										{
											"name": "Delete Bookmark",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/bookmarks/:bookmark_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"bookmarks",
														":bookmark_id"
													],
													"variable": [
														{
															"key": "bookmark_id",
															"value": "<integer>",
															"description": "(Required) The ID of the bookmark"
														}
													]
												},
												"description": "#### Allowed For\n- Agents (own bookmarks only)\n\nIf the bookmark already exists with a specified ticket id, the response status will be `http Status: 200 OK`."
											},
											"response": [
												{
													"name": "No content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/bookmarks/:bookmark_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"bookmarks",
																":bookmark_id"
															],
															"variable": [
																{
																	"key": "bookmark_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "List Bookmarks",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/bookmarks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"bookmarks"
											]
										},
										"description": "#### Allowed For\n- Agents"
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/bookmarks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"bookmarks"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"bookmarks\": [\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"ticket\": {\n        \"requester_id\": \"<integer>\",\n        \"allow_attachments\": \"<boolean>\",\n        \"allow_channelback\": \"<boolean>\",\n        \"assignee_email\": \"<string>\",\n        \"assignee_id\": \"<integer>\",\n        \"attribute_value_ids\": \"<array>\",\n        \"brand_id\": \"<integer>\",\n        \"collaborator_ids\": \"<array>\",\n        \"collaborators\": [\n          {\n            \"email\": \"<email>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"email\": \"<email>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"comment\": {},\n        \"created_at\": \"<dateTime>\",\n        \"custom_fields\": \"<array>\",\n        \"custom_status_id\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"due_at\": \"<dateTime>\",\n        \"email_cc_ids\": \"<array>\",\n        \"email_ccs\": {},\n        \"external_id\": \"<string>\",\n        \"follower_ids\": \"<array>\",\n        \"followers\": {},\n        \"followup_ids\": \"<array>\",\n        \"forum_topic_id\": \"<integer>\",\n        \"from_messaging_channel\": \"<boolean>\",\n        \"group_id\": \"<integer>\",\n        \"has_incidents\": \"<boolean>\",\n        \"id\": \"<integer>\",\n        \"is_public\": \"<boolean>\",\n        \"macro_id\": \"<integer>\",\n        \"macro_ids\": \"<array>\",\n        \"metadata\": {},\n        \"organization_id\": \"<integer>\",\n        \"priority\": \"normal\",\n        \"problem_id\": \"<integer>\",\n        \"raw_subject\": \"<string>\",\n        \"recipient\": \"<string>\",\n        \"requester\": {},\n        \"safe_update\": \"<boolean>\",\n        \"satisfaction_rating\": {\n          \"quisf2\": 70233016.1992557\n        },\n        \"sharing_agreement_ids\": \"<array>\",\n        \"status\": \"new\",\n        \"subject\": \"<string>\",\n        \"submitter_id\": \"<integer>\",\n        \"tags\": \"<array>\",\n        \"ticket_form_id\": \"<integer>\",\n        \"type\": \"problem\",\n        \"updated_at\": \"<dateTime>\",\n        \"updated_stamp\": \"<string>\",\n        \"url\": \"<string>\",\n        \"via\": {\n          \"channel\": \"<string>\",\n          \"source\": {\n            \"sit4\": \"elit qui aute est\",\n            \"amet_9\": false,\n            \"cillum_fc7\": false\n          }\n        },\n        \"via_followup_source_id\": \"<integer>\",\n        \"via_id\": \"<integer>\",\n        \"voice_comment\": {}\n      },\n      \"url\": \"<string>\"\n    },\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"ticket\": {\n        \"requester_id\": \"<integer>\",\n        \"allow_attachments\": \"<boolean>\",\n        \"allow_channelback\": \"<boolean>\",\n        \"assignee_email\": \"<string>\",\n        \"assignee_id\": \"<integer>\",\n        \"attribute_value_ids\": \"<array>\",\n        \"brand_id\": \"<integer>\",\n        \"collaborator_ids\": \"<array>\",\n        \"collaborators\": [\n          {\n            \"email\": \"<email>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"email\": \"<email>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"comment\": {},\n        \"created_at\": \"<dateTime>\",\n        \"custom_fields\": \"<array>\",\n        \"custom_status_id\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"due_at\": \"<dateTime>\",\n        \"email_cc_ids\": \"<array>\",\n        \"email_ccs\": {},\n        \"external_id\": \"<string>\",\n        \"follower_ids\": \"<array>\",\n        \"followers\": {},\n        \"followup_ids\": \"<array>\",\n        \"forum_topic_id\": \"<integer>\",\n        \"from_messaging_channel\": \"<boolean>\",\n        \"group_id\": \"<integer>\",\n        \"has_incidents\": \"<boolean>\",\n        \"id\": \"<integer>\",\n        \"is_public\": \"<boolean>\",\n        \"macro_id\": \"<integer>\",\n        \"macro_ids\": \"<array>\",\n        \"metadata\": {},\n        \"organization_id\": \"<integer>\",\n        \"priority\": \"high\",\n        \"problem_id\": \"<integer>\",\n        \"raw_subject\": \"<string>\",\n        \"recipient\": \"<string>\",\n        \"requester\": {},\n        \"safe_update\": \"<boolean>\",\n        \"satisfaction_rating\": {\n          \"proident68\": \"dolor \",\n          \"veliteb\": 3794106.446971357\n        },\n        \"sharing_agreement_ids\": \"<array>\",\n        \"status\": \"open\",\n        \"subject\": \"<string>\",\n        \"submitter_id\": \"<integer>\",\n        \"tags\": \"<array>\",\n        \"ticket_form_id\": \"<integer>\",\n        \"type\": \"task\",\n        \"updated_at\": \"<dateTime>\",\n        \"updated_stamp\": \"<string>\",\n        \"url\": \"<string>\",\n        \"via\": {\n          \"channel\": \"<string>\",\n          \"source\": {\n            \"aute_bb\": 81082586\n          }\n        },\n        \"via_followup_source_id\": \"<integer>\",\n        \"via_id\": \"<integer>\",\n        \"voice_comment\": {}\n      },\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Bookmark",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bookmark\": {\n    \"ticket_id\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/bookmarks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"bookmarks"
											]
										},
										"description": "#### Allowed For\n- Agents"
									},
									"response": [
										{
											"name": "Successfully created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bookmark\": {\n    \"ticket_id\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/bookmarks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"bookmarks"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"bookmark\": {\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"ticket\": {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"low\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"ex_3\": false,\n        \"in588\": \"ea veniam eiusmod ex\",\n        \"occaecat5a\": 52127570\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"hold\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"problem\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"eu_f\": \"tempor rep\",\n          \"cupidatat_78e\": true,\n          \"minimc9\": -69061563.29743615\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    },\n    \"url\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Successfully created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bookmark\": {\n    \"ticket_id\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/bookmarks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"bookmarks"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"bookmark\": {\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"ticket\": {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"low\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"ex_3\": false,\n        \"in588\": \"ea veniam eiusmod ex\",\n        \"occaecat5a\": 52127570\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"hold\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"problem\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"eu_f\": \"tempor rep\",\n          \"cupidatat_78e\": true,\n          \"minimc9\": -69061563.29743615\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    },\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "brands",
							"item": [
								{
									"name": "{brand_id}",
									"item": [
										{
											"name": "check_host_mapping",
											"item": [
												{
													"name": "Check Host Mapping Validity for an Existing Brand",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/brands/:brand_id/check_host_mapping",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"brands",
																":brand_id",
																"check_host_mapping"
															],
															"variable": [
																{
																	"key": "brand_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the brand"
																}
															]
														},
														"description": "Returns a JSON object determining whether a host mapping is valid for the given brand.\n\n#### Allowed for\n- Admins"
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/brands/:brand_id/check_host_mapping",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"brands",
																		":brand_id",
																		"check_host_mapping"
																	],
																	"variable": [
																		{
																			"key": "brand_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"cname\": \"<string>\",\n  \"expected_cnames\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"is_valid\": \"<boolean>\",\n  \"reason\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Show a Brand",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id",
															"value": "<integer>",
															"description": "(Required) The ID of the brand"
														}
													]
												},
												"description": "Returns a brand for your account.\n\n#### Allowed for\n\n* Admins, Agents"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/brands/:brand_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"brands",
																":brand_id"
															],
															"variable": [
																{
																	"key": "brand_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"brand\": {\n    \"name\": \"<string>\",\n    \"subdomain\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"brand_url\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"has_help_center\": \"<boolean>\",\n    \"help_center_state\": \"disabled\",\n    \"host_mapping\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"is_deleted\": \"<boolean>\",\n    \"logo\": {\n      \"content_type\": \"<string>\",\n      \"content_url\": \"<string>\",\n      \"deleted\": \"<boolean>\",\n      \"file_name\": \"<string>\",\n      \"height\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"inline\": \"<boolean>\",\n      \"malware_access_override\": \"<boolean>\",\n      \"malware_scan_result\": \"<string>\",\n      \"mapped_content_url\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"url\": \"<string>\",\n      \"width\": \"<string>\",\n      \"thumbnails\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        }\n      ]\n    },\n    \"signature_template\": \"<string>\",\n    \"ticket_form_ids\": \"<array>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update a Brand",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"brand\": {\n    \"name\": \"<string>\",\n    \"subdomain\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"brand_url\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"has_help_center\": \"<boolean>\",\n    \"help_center_state\": \"disabled\",\n    \"host_mapping\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"is_deleted\": \"<boolean>\",\n    \"logo\": {\n      \"content_type\": \"<string>\",\n      \"content_url\": \"<string>\",\n      \"deleted\": \"<boolean>\",\n      \"file_name\": \"<string>\",\n      \"height\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"inline\": \"<boolean>\",\n      \"malware_access_override\": \"<boolean>\",\n      \"malware_scan_result\": \"<string>\",\n      \"mapped_content_url\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"url\": \"<string>\",\n      \"width\": \"<string>\",\n      \"thumbnails\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        }\n      ]\n    },\n    \"signature_template\": \"<string>\",\n    \"ticket_form_ids\": \"<array>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id",
															"value": "<integer>",
															"description": "(Required) The ID of the brand"
														}
													]
												},
												"description": "Returns an updated brand.\n\n#### Allowed for\n* Admins\n\n#### Updating a Brand's Image\nA brand image can be updated by uploading a local file using the update brand endpoint. See the **Using curl** sections below for more information."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"brand\": {\n    \"name\": \"<string>\",\n    \"subdomain\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"brand_url\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"has_help_center\": \"<boolean>\",\n    \"help_center_state\": \"disabled\",\n    \"host_mapping\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"is_deleted\": \"<boolean>\",\n    \"logo\": {\n      \"content_type\": \"<string>\",\n      \"content_url\": \"<string>\",\n      \"deleted\": \"<boolean>\",\n      \"file_name\": \"<string>\",\n      \"height\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"inline\": \"<boolean>\",\n      \"malware_access_override\": \"<boolean>\",\n      \"malware_scan_result\": \"<string>\",\n      \"mapped_content_url\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"url\": \"<string>\",\n      \"width\": \"<string>\",\n      \"thumbnails\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        }\n      ]\n    },\n    \"signature_template\": \"<string>\",\n    \"ticket_form_ids\": \"<array>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/brands/:brand_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"brands",
																":brand_id"
															],
															"variable": [
																{
																	"key": "brand_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"brand\": {\n    \"name\": \"<string>\",\n    \"subdomain\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"brand_url\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"has_help_center\": \"<boolean>\",\n    \"help_center_state\": \"disabled\",\n    \"host_mapping\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"is_deleted\": \"<boolean>\",\n    \"logo\": {\n      \"content_type\": \"<string>\",\n      \"content_url\": \"<string>\",\n      \"deleted\": \"<boolean>\",\n      \"file_name\": \"<string>\",\n      \"height\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"inline\": \"<boolean>\",\n      \"malware_access_override\": \"<boolean>\",\n      \"malware_scan_result\": \"<string>\",\n      \"mapped_content_url\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"url\": \"<string>\",\n      \"width\": \"<string>\",\n      \"thumbnails\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        }\n      ]\n    },\n    \"signature_template\": \"<string>\",\n    \"ticket_form_ids\": \"<array>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete a Brand",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/brands/:brand_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"brands",
														":brand_id"
													],
													"variable": [
														{
															"key": "brand_id",
															"value": "<integer>",
															"description": "(Required) The ID of the brand"
														}
													]
												},
												"description": "Deletes a brand.\n\n#### Allowed for\n- Admins"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/brands/:brand_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"brands",
																":brand_id"
															],
															"variable": [
																{
																	"key": "brand_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "check_host_mapping",
									"item": [
										{
											"name": "Check Host Mapping Validity",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/brands/check_host_mapping?host_mapping=<string>&subdomain=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"brands",
														"check_host_mapping"
													],
													"query": [
														{
															"key": "host_mapping",
															"value": "<string>",
															"description": "(Required) The hostmapping to a brand, if any (only admins view this key)"
														},
														{
															"key": "subdomain",
															"value": "<string>",
															"description": "(Required) Subdomain for a given Zendesk account address"
														}
													]
												},
												"description": "Returns a JSON object determining whether a host mapping is valid for a given subdomain.\n\n#### Allowed for\n\n* Admins"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/brands/check_host_mapping?host_mapping=<string>&subdomain=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"brands",
																"check_host_mapping"
															],
															"query": [
																{
																	"key": "host_mapping",
																	"value": "<string>",
																	"description": "(Required) The hostmapping to a brand, if any (only admins view this key)"
																},
																{
																	"key": "subdomain",
																	"value": "<string>",
																	"description": "(Required) Subdomain for a given Zendesk account address"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"cname\": \"<string>\",\n  \"expected_cnames\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"is_valid\": \"<boolean>\",\n  \"reason\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Brands",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/brands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"brands"
											]
										},
										"description": "Returns a list of all brands for your account sorted by name.\n\n#### Allowed for\n\n* Admins, Agents\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/)."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/brands",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"brands"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"brands\": [\n    {\n      \"name\": \"<string>\",\n      \"subdomain\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"brand_url\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"has_help_center\": \"<boolean>\",\n      \"help_center_state\": \"restricted\",\n      \"host_mapping\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"is_deleted\": \"<boolean>\",\n      \"logo\": {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\",\n        \"thumbnails\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          }\n        ]\n      },\n      \"signature_template\": \"<string>\",\n      \"ticket_form_ids\": \"<array>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"subdomain\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"brand_url\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"has_help_center\": \"<boolean>\",\n      \"help_center_state\": \"disabled\",\n      \"host_mapping\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"is_deleted\": \"<boolean>\",\n      \"logo\": {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\",\n        \"thumbnails\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          }\n        ]\n      },\n      \"signature_template\": \"<string>\",\n      \"ticket_form_ids\": \"<array>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Brand",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"brand\": {\n    \"name\": \"<string>\",\n    \"subdomain\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"brand_url\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"has_help_center\": \"<boolean>\",\n    \"help_center_state\": \"disabled\",\n    \"host_mapping\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"is_deleted\": \"<boolean>\",\n    \"logo\": {\n      \"content_type\": \"<string>\",\n      \"content_url\": \"<string>\",\n      \"deleted\": \"<boolean>\",\n      \"file_name\": \"<string>\",\n      \"height\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"inline\": \"<boolean>\",\n      \"malware_access_override\": \"<boolean>\",\n      \"malware_scan_result\": \"<string>\",\n      \"mapped_content_url\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"url\": \"<string>\",\n      \"width\": \"<string>\",\n      \"thumbnails\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        }\n      ]\n    },\n    \"signature_template\": \"<string>\",\n    \"ticket_form_ids\": \"<array>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/brands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"brands"
											]
										},
										"description": "#### Allowed for\n- Admins"
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"brand\": {\n    \"name\": \"<string>\",\n    \"subdomain\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"brand_url\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"has_help_center\": \"<boolean>\",\n    \"help_center_state\": \"disabled\",\n    \"host_mapping\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"is_deleted\": \"<boolean>\",\n    \"logo\": {\n      \"content_type\": \"<string>\",\n      \"content_url\": \"<string>\",\n      \"deleted\": \"<boolean>\",\n      \"file_name\": \"<string>\",\n      \"height\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"inline\": \"<boolean>\",\n      \"malware_access_override\": \"<boolean>\",\n      \"malware_scan_result\": \"<string>\",\n      \"mapped_content_url\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"url\": \"<string>\",\n      \"width\": \"<string>\",\n      \"thumbnails\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        }\n      ]\n    },\n    \"signature_template\": \"<string>\",\n    \"ticket_form_ids\": \"<array>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/brands",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"brands"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"brand\": {\n    \"name\": \"<string>\",\n    \"subdomain\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"brand_url\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"has_help_center\": \"<boolean>\",\n    \"help_center_state\": \"disabled\",\n    \"host_mapping\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"is_deleted\": \"<boolean>\",\n    \"logo\": {\n      \"content_type\": \"<string>\",\n      \"content_url\": \"<string>\",\n      \"deleted\": \"<boolean>\",\n      \"file_name\": \"<string>\",\n      \"height\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"inline\": \"<boolean>\",\n      \"malware_access_override\": \"<boolean>\",\n      \"malware_scan_result\": \"<string>\",\n      \"mapped_content_url\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"url\": \"<string>\",\n      \"width\": \"<string>\",\n      \"thumbnails\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        }\n      ]\n    },\n    \"signature_template\": \"<string>\",\n    \"ticket_form_ids\": \"<array>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "channels",
							"item": [
								{
									"name": "voice",
									"item": [
										{
											"name": "agents",
											"item": [
												{
													"name": "{agent_id}",
													"item": [
														{
															"name": "tickets",
															"item": [
																{
																	"name": "{ticket_id}",
																	"item": [
																		{
																			"name": "display",
																			"item": [
																				{
																					"name": "Open Ticket in Agent's Browser",
																					"request": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/api/v2/channels/voice/agents/:agent_id/tickets/:ticket_id/display",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"api",
																								"v2",
																								"channels",
																								"voice",
																								"agents",
																								":agent_id",
																								"tickets",
																								":ticket_id",
																								"display"
																							],
																							"variable": [
																								{
																									"key": "agent_id",
																									"value": "<integer>",
																									"description": "(Required) ID of an agent"
																								},
																								{
																									"key": "ticket_id",
																									"value": "<integer>",
																									"description": "(Required) The ID of the ticket"
																								}
																							]
																						},
																						"description": "Allows you to instruct an agent's browser to open a ticket.\n\nWhen the message is successfully delivered to an agent's browser:\n\n```http\nStatus: 200 OK\n```\n\nWhen `agent_id` or `ticket_id` is invalid:\n\n```http\nStatus: 404 Not Found\n```\n\n#### Allowed For\n* Agents"
																					},
																					"response": [
																						{
																							"name": "Successful response",
																							"originalRequest": {
																								"method": "POST",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"description": "Added as a part of security scheme: basic",
																										"key": "Authorization",
																										"value": "Basic <credentials>"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/api/v2/channels/voice/agents/:agent_id/tickets/:ticket_id/display",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"v2",
																										"channels",
																										"voice",
																										"agents",
																										":agent_id",
																										"tickets",
																										":ticket_id",
																										"display"
																									],
																									"variable": [
																										{
																											"key": "agent_id"
																										},
																										{
																											"key": "ticket_id"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "<string>"
																						},
																						{
																							"name": "When the `agent_id` or `ticket_id` is invalid",
																							"originalRequest": {
																								"method": "POST",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"description": "Added as a part of security scheme: basic",
																										"key": "Authorization",
																										"value": "Basic <credentials>"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/api/v2/channels/voice/agents/:agent_id/tickets/:ticket_id/display",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"v2",
																										"channels",
																										"voice",
																										"agents",
																										":agent_id",
																										"tickets",
																										":ticket_id",
																										"display"
																									],
																									"variable": [
																										{
																											"key": "agent_id"
																										},
																										{
																											"key": "ticket_id"
																										}
																									]
																								}
																							},
																							"status": "Not Found",
																							"code": 404,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "<string>"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"name": "users",
															"item": [
																{
																	"name": "{user_id}",
																	"item": [
																		{
																			"name": "display",
																			"item": [
																				{
																					"name": "Open a User's Profile in an Agent's Browser",
																					"request": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/api/v2/channels/voice/agents/:agent_id/users/:user_id/display",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"api",
																								"v2",
																								"channels",
																								"voice",
																								"agents",
																								":agent_id",
																								"users",
																								":user_id",
																								"display"
																							],
																							"variable": [
																								{
																									"key": "agent_id",
																									"value": "<integer>",
																									"description": "(Required) ID of an agent"
																								},
																								{
																									"key": "user_id",
																									"value": "<integer>",
																									"description": "(Required) The id of the user"
																								}
																							]
																						},
																						"description": "Allows you to instruct an agent's browser to open a user's profile.\n\nWhen the message is successfully delivered to an agent's browser:\n\n```http\nStatus: 200 OK\n```\n\nWhen `agent_id` or `user_id` is invalid:\n\n```http\nStatus: 404 Not Found\n```\n\n#### Allowed For\n* Agents"
																					},
																					"response": [
																						{
																							"name": "Successful response",
																							"originalRequest": {
																								"method": "POST",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"description": "Added as a part of security scheme: basic",
																										"key": "Authorization",
																										"value": "Basic <credentials>"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/api/v2/channels/voice/agents/:agent_id/users/:user_id/display",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"v2",
																										"channels",
																										"voice",
																										"agents",
																										":agent_id",
																										"users",
																										":user_id",
																										"display"
																									],
																									"variable": [
																										{
																											"key": "agent_id"
																										},
																										{
																											"key": "user_id"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "<string>"
																						},
																						{
																							"name": "When the `agent_id` or `user_id` is invalid",
																							"originalRequest": {
																								"method": "POST",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"description": "Added as a part of security scheme: basic",
																										"key": "Authorization",
																										"value": "Basic <credentials>"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/api/v2/channels/voice/agents/:agent_id/users/:user_id/display",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"v2",
																										"channels",
																										"voice",
																										"agents",
																										":agent_id",
																										"users",
																										":user_id",
																										"display"
																									],
																									"variable": [
																										{
																											"key": "agent_id"
																										},
																										{
																											"key": "user_id"
																										}
																									]
																								}
																							},
																							"status": "Not Found",
																							"code": 404,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "<string>"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "tickets",
											"item": [
												{
													"name": "Create Ticket or Voicemail Ticket",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"display_to_agent\": \"<integer>\",\n  \"ticket\": {\n    \"comment\": {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"audit_id\": \"<integer>\",\n      \"author_id\": \"<integer>\",\n      \"body\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"html_body\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"labore1c1\": -60202155.98280605,\n        \"essea4\": -39178263\n      },\n      \"plain_body\": \"<string>\",\n      \"public\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"uploads\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"non9eb\": 31028114\n        }\n      }\n    },\n    \"priority\": \"low\",\n    \"via_id\": 44,\n    \"voice_comment\": {\n      \"answered_by_id\": \"<integer>\",\n      \"call_duration\": \"<integer>\",\n      \"from\": \"<string>\",\n      \"location\": \"<string>\",\n      \"recording_url\": \"<string>\",\n      \"started_at\": \"<dateTime>\",\n      \"to\": \"<string>\",\n      \"transcription_text\": \"<string>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/channels/voice/tickets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"channels",
																"voice",
																"tickets"
															],
															"variable": [
																{
																	"key": "agent_id",
																	"value": "<integer>",
																	"description": "(Required) ID of an agent"
																},
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "#### Allowed For\n* Agents\n\n### Creating tickets\n\n#### Introduction\n\nCreating tickets using Talk Partner Edition follows the same conventions as the Create Ticket endpoint. See [Create Ticket](/api-reference/ticketing/tickets/tickets/#create-ticket).\n\n#### Request parameters\n\nThe POST request takes a mandatory `ticket` object that lists the values to set when the ticket is created.\nYou may also include an optional `display_to_agent` value such as the ID of the agent that will see the newly created ticket.\n\nTickets created using this endpoint must have a `via_id` parameter. See the following\nsection for possible values.\n\n#### Zendesk Talk Integration Via IDs\n\nTickets created using this endpoint must have one of the following `via_id` parameters:\n\n| ID       | Description\n| ---------| -------------\n| 44       | Voicemail\n| 45       | Phone call (inbound)\n| 46       | Phone call (outbound)\n\n### Creating voicemail tickets\n#### Request parameters\n\nThe POST request takes a mandatory `ticket` object that lists the values to set when the ticket is created.\nThe ticket must have a `voice_comment` with the following values:\n\n| Name               | Type                  | Comment\n| ------------------ | ----------------------| -------\n| from               | string                | Incoming phone number\n| to                 | string                | Dialed phone number\n| recording_url      | string                | URL of the recording\n| started_at         | date                  | [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) timestamp of the call starting time\n| call_duration      | integer               | Duration in seconds of the call\n| answered_by_id     | integer               | The agent who answered the call\n| transcription_text | string                | Transcription of the call (optional)\n| location           | string                | Location of the caller (optional)"
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"display_to_agent\": \"<integer>\",\n  \"ticket\": {\n    \"comment\": {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"audit_id\": \"<integer>\",\n      \"author_id\": \"<integer>\",\n      \"body\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"html_body\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"labore1c1\": -60202155.98280605,\n        \"essea4\": -39178263\n      },\n      \"plain_body\": \"<string>\",\n      \"public\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"uploads\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"non9eb\": 31028114\n        }\n      }\n    },\n    \"priority\": \"low\",\n    \"via_id\": 44,\n    \"voice_comment\": {\n      \"answered_by_id\": \"<integer>\",\n      \"call_duration\": \"<integer>\",\n      \"from\": \"<string>\",\n      \"location\": \"<string>\",\n      \"recording_url\": \"<string>\",\n      \"started_at\": \"<dateTime>\",\n      \"to\": \"<string>\",\n      \"transcription_text\": \"<string>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/channels/voice/tickets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"channels",
																		"voice",
																		"tickets"
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ticket\": {\n    \"requester_id\": \"<integer>\",\n    \"allow_attachments\": \"<boolean>\",\n    \"allow_channelback\": \"<boolean>\",\n    \"assignee_email\": \"<string>\",\n    \"assignee_id\": \"<integer>\",\n    \"attribute_value_ids\": \"<array>\",\n    \"brand_id\": \"<integer>\",\n    \"collaborator_ids\": \"<array>\",\n    \"collaborators\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"comment\": {},\n    \"created_at\": \"<dateTime>\",\n    \"custom_fields\": \"<array>\",\n    \"custom_status_id\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"due_at\": \"<dateTime>\",\n    \"email_cc_ids\": \"<array>\",\n    \"email_ccs\": {},\n    \"external_id\": \"<string>\",\n    \"follower_ids\": \"<array>\",\n    \"followers\": {},\n    \"followup_ids\": \"<array>\",\n    \"forum_topic_id\": \"<integer>\",\n    \"from_messaging_channel\": \"<boolean>\",\n    \"group_id\": \"<integer>\",\n    \"has_incidents\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"is_public\": \"<boolean>\",\n    \"macro_id\": \"<integer>\",\n    \"macro_ids\": \"<array>\",\n    \"metadata\": {},\n    \"organization_id\": \"<integer>\",\n    \"priority\": \"high\",\n    \"problem_id\": \"<integer>\",\n    \"raw_subject\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"requester\": {},\n    \"safe_update\": \"<boolean>\",\n    \"satisfaction_rating\": {\n      \"exercitation_c48\": false,\n      \"Ut4\": 54410130.125641406\n    },\n    \"sharing_agreement_ids\": \"<array>\",\n    \"status\": \"pending\",\n    \"subject\": \"<string>\",\n    \"submitter_id\": \"<integer>\",\n    \"tags\": \"<array>\",\n    \"ticket_form_id\": \"<integer>\",\n    \"type\": \"incident\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_stamp\": \"<string>\",\n    \"url\": \"<string>\",\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"voluptate_de\": -31344927.765781045,\n        \"dolore_e\": \"ea nisi magna do\",\n        \"est952\": false\n      }\n    },\n    \"via_followup_source_id\": \"<integer>\",\n    \"via_id\": \"<integer>\",\n    \"voice_comment\": {}\n  }\n}"
														},
														{
															"name": "When the `agent_id` or `ticket_id` is invalid",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"display_to_agent\": \"<integer>\",\n  \"ticket\": {\n    \"comment\": {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"audit_id\": \"<integer>\",\n      \"author_id\": \"<integer>\",\n      \"body\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"html_body\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"labore1c1\": -60202155.98280605,\n        \"essea4\": -39178263\n      },\n      \"plain_body\": \"<string>\",\n      \"public\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"uploads\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"non9eb\": 31028114\n        }\n      }\n    },\n    \"priority\": \"low\",\n    \"via_id\": 44,\n    \"voice_comment\": {\n      \"answered_by_id\": \"<integer>\",\n      \"call_duration\": \"<integer>\",\n      \"from\": \"<string>\",\n      \"location\": \"<string>\",\n      \"recording_url\": \"<string>\",\n      \"started_at\": \"<dateTime>\",\n      \"to\": \"<string>\",\n      \"transcription_text\": \"<string>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/channels/voice/tickets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"channels",
																		"voice",
																		"tickets"
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "<string>"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "chat_file_redactions",
							"item": [
								{
									"name": "{ticket_id}",
									"item": [
										{
											"name": "Redact Chat Comment Attachment",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/chat_file_redactions/:ticket_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"chat_file_redactions",
														":ticket_id"
													],
													"variable": [
														{
															"key": "ticket_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket"
														}
													]
												},
												"description": "Permanently removes one or more chat attachments from a chat ticket.\n\n**Note**: This does not work on active chats. For chat tickets that predate March 2020, consider using [Redact Ticket Comment In Agent Workspace](#redact-ticket-comment-in-agent-workspace).\n\n#### Allowed For\n\n- Agents\n\n[Agent Workspace](https://support.zendesk.com/hc/en-us/articles/360024218473) must enabled for the account. Deleting tickets must be enabled for agents.\n\n#### Request Body Properties\n\n| Name         | Type    | Required | Description                                                                                                                                          |\n| ------------ | ------- | -------- | ---------------------------------------------------------------------------------------------------------------------------------------------------- |\n| chat_id      | string  | true     | The `chat_id` in the `ChatStartedEvent` event in the ticket audit. See [Ticket Audits](/api-reference/ticketing/tickets/ticket_audits)               |\n| chat_indexes | array   | true     | The array of `chat_index` in the `ChatFileAttachment` event in the ticket audit. See [Ticket Audits](/api-reference/ticketing/tickets/ticket_audits) |\n\nTo get the required body properties, make a request to the [Ticket Audits](/api-reference/ticketing/tickets/ticket_audits) endpoint. Example response:\n\n```http\nStatus 200 OK\n{\n  \"audits\": [\n    \"events\": [\n      {\n        \"id\": 1932802680168,\n        \"type\": \"ChatStartedEvent\",\n        \"value\": {\n          \"visitor_id\": \"10502823-16EkM3T6VNq7KMd\",\n          \"chat_id\": \"2109.10502823.Sjuj2YrBpXwei\",\n          \"history\": [\n            {\n              \"chat_index\": 0,\n              \"type\": \"ChatFileAttachment\",\n              \"filename\": \"image1.jpg\"\n            },\n            {\n              \"chat_index\": 1,\n              \"type\": \"ChatFileAttachment\",\n              \"filename\": \"image2.jpg\"\n            }\n          ]\n        }\n      }\n    ]\n  ]\n}\n```\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/chat_file_redactions/:ticket_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"chat_file_redactions",
																":ticket_id"
															],
															"variable": [
																{
																	"key": "ticket_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"chat_event\": {\n    \"id\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"value\": {\n      \"chat_id\": \"<string>\",\n      \"history\": [\n        {\n          \"laboris2d\": \"velit\",\n          \"Excepteur_78\": false\n        },\n        {\n          \"velit_9\": \"la\",\n          \"Lorem_63\": 77678918,\n          \"dolore6\": -46572852.82743819\n        }\n      ],\n      \"visitor_id\": \"<string>\"\n    }\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "chat_redactions",
							"item": [
								{
									"name": "{ticket_id}",
									"item": [
										{
											"name": "Redact Chat Comment",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/chat_redactions/:ticket_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"chat_redactions",
														":ticket_id"
													],
													"variable": [
														{
															"key": "ticket_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket"
														}
													]
												},
												"description": "Permanently removes words or strings from a chat ticket's comment. \n\nWrap `<redact>` tags around the content in the chat comment you want redacted. Example: \n\n```json\n{\n  \"text\": \"My ID number is <redact>847564</redact>!\"\n}\n```\n\nThe characters contained in the tag will be replaced by the ▇ symbol.\n\n**Note**: This does not work on active chats. For chat tickets that predate March 2020, consider using [Redact Ticket Comment In Agent Workspace](#redact-ticket-comment-in-agent-workspace).\n\n#### Allowed For\n\n- Agents\n\n[Agent Workspace](https://support.zendesk.com/hc/en-us/articles/360024218473) must enabled for the account. Deleting tickets must be enabled for agents.\n\n#### Request Body Properties\n\n| Name                     | Type    | Required | Description                                                                                                                                                             |\n| ------------------------ | ------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| chat_id                  | string  | true     | The `chat_id` in the `ChatStartedEvent` event in the ticket audit. See [Ticket Audits](/api-reference/ticketing/tickets/ticket_audits)                                  |\n| chat_index               | integer | true     | The `chat_index` in the `ChatMessage` event in the ticket audit. See [Ticket Audits](/api-reference/ticketing/tickets/ticket_audits)                                    |\n| text                     | string  | true     | The `message` in the `ChatMessage` event in the ticket audit. See [Ticket Audits](/api-reference/ticketing/tickets/ticket_audits).  Wrap `message` with `<redact>` tags |\n\nTo get the required body properties, make a request to the [Ticket Audit](/api-reference/ticketing/tickets/ticket_audits) endpoint. Example response:\n\n```http\nStatus 200 OK\n{\n  \"audits\": [\n    \"events\": [\n      {\n        \"id\": 1932802680168,\n        \"type\": \"ChatStartedEvent\",\n        \"value\": {\n          \"visitor_id\": \"10502823-16EkM3T6VNq7KMd\",\n          \"chat_id\": \"2109.10502823.Sjuj2YrBpXwei\",\n          \"history\": [\n            {\n              \"chat_index\": 0,\n              \"type\": \"ChatMessage\",\n              \"message\": \"My ID number is 847564!\"\n            }\n          ]\n        }\n      }\n    ]\n  ]\n}\n```\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/chat_redactions/:ticket_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"chat_redactions",
																":ticket_id"
															],
															"variable": [
																{
																	"key": "ticket_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"chat_event\": {\n    \"id\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"value\": {\n      \"chat_id\": \"<string>\",\n      \"history\": [\n        {\n          \"laboris2d\": \"velit\",\n          \"Excepteur_78\": false\n        },\n        {\n          \"velit_9\": \"la\",\n          \"Lorem_63\": 77678918,\n          \"dolore6\": -46572852.82743819\n        }\n      ],\n      \"visitor_id\": \"<string>\"\n    }\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "comment_redactions",
							"item": [
								{
									"name": "{ticket_comment_id}",
									"item": [
										{
											"name": "Redact Ticket Comment In Agent Workspace",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/comment_redactions/:ticket_comment_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"comment_redactions",
														":ticket_comment_id"
													],
													"variable": [
														{
															"key": "ticket_comment_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket comment"
														}
													]
												},
												"description": "Redaction allows you to permanently remove words, strings, or attachments from a ticket comment.\n\nIn the `html_body` of the comment, wrap the content you want redacted in `<redact>` tags. Example:\n\n```json\n{\n  \"html_body\": \"<div class=\\\"zd-comment\\\" dir=\\\"auto\\\">My ID number is <redact>847564</redact>!</div>\",\n  \"ticket_id\":100\n}\n```\n\nThe characters in the redact tag will be replaced by the ▇ symbol.\n\nTo redact inline images and anchor tags, add the individual attribute `redact` to the element. Example: `<a href=\"http://example.com\" redact>some link</a>`.\n\nRedaction is permanent and can not be undone. Data is permanently deleted from Zendesk servers with no way to recover it.\n\nThis endpoint provides all the same functionality that the [Redact String in Comment](/api-reference/ticketing/tickets/ticket_comments/#redact-string-in-comment) endpoint provides, plus:\n\n- Redaction of comments in closed tickets\n\n- Redaction of comments in archived tickets\n\n- Redaction of formatted text (bold, italics, hyperlinks)\n\n**Limitations**: When content is redacted from an email comment, the content is also redacted from the original email through a background job. It may take a while for the changes to be completed.\n\n**Note**: We recommend using this endpoint instead of the [Redact String in Comment](/api-reference/ticketing/tickets/ticket_comments/#redact-string-in-comment) endpoint, which will eventually be deprecated.\n\n#### Allowed For\n\n- Agents\n\n[Agent Workspace](https://support.zendesk.com/hc/en-us/articles/360024218473) must be enabled on the account. For professional accounts, deleting tickets must be enabled for agents. On Enterprise accounts, you can assign agents to a custom role with permissions to redact ticket content.\n\n#### Request Body Properties\n\n| Name                     | Type    | Required | Description                                                                                                                                      |\n| -------------------------| ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------ |\n| ticket_id                | integer | true     | The ID of the ticket                                                                                                                             |\n| html_body                | string  | false    | The `html_body` of the comment containing `<redact>` tags or `redact` attributes                                           |\n| external_attachment_urls | array   | false    | Array of attachment URLs belonging to the comment to be redacted. See [`content_url` property of Attachment](/api-reference/ticketing/tickets/ticket-attachments/) |\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/comment_redactions/:ticket_comment_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"comment_redactions",
																":ticket_comment_id"
															],
															"variable": [
																{
																	"key": "ticket_comment_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"comment\": {\n    \"attachments\": [\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\",\n        \"thumbnails\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\",\n        \"thumbnails\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"audit_id\": \"<integer>\",\n    \"author_id\": \"<integer>\",\n    \"body\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"html_body\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"metadata\": {\n      \"Duis620\": -98653633,\n      \"esse90e\": \"aliquip enim laboris\"\n    },\n    \"plain_body\": \"<string>\",\n    \"public\": \"<boolean>\",\n    \"type\": \"<string>\",\n    \"uploads\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"velitac\": false,\n        \"minima\": \"dolore commodo Excepte\"\n      }\n    }\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "custom_objects",
							"item": [
								{
									"name": "{custom_object_key}",
									"item": [
										{
											"name": "fields",
											"item": [
												{
													"name": "{custom_object_field_key_or_id}",
													"item": [
														{
															"name": "Show Custom Object Field",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/fields/:custom_object_field_key_or_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"fields",
																		":custom_object_field_key_or_id"
																	],
																	"variable": [
																		{
																			"key": "custom_object_key",
																			"value": "<string>",
																			"description": "(Required) The key of a custom object"
																		},
																		{
																			"key": "custom_object_field_key_or_id",
																			"value": "<string>",
																			"description": "(Required) The key or id of a custom object field"
																		}
																	]
																},
																"description": "Returns a custom field for a specific object using a provided key or id of the field.\n#### Allowed For\n* Agents\n"
															},
															"response": [
																{
																	"name": "Custom Object Field",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/fields/:custom_object_field_key_or_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"custom_objects",
																				":custom_object_key",
																				"fields",
																				":custom_object_field_key_or_id"
																			],
																			"variable": [
																				{
																					"key": "custom_object_key"
																				},
																				{
																					"key": "custom_object_field_key_or_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"custom_object_field\": {\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"system\": \"<boolean>\",\n    \"tag\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
																}
															]
														},
														{
															"name": "Update Custom Object Field",
															"request": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/fields/:custom_object_field_key_or_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"fields",
																		":custom_object_field_key_or_id"
																	],
																	"variable": [
																		{
																			"key": "custom_object_key",
																			"value": "<string>",
																			"description": "(Required) The key of a custom object"
																		},
																		{
																			"key": "custom_object_field_key_or_id",
																			"value": "<string>",
																			"description": "(Required) The key or id of a custom object field"
																		}
																	]
																},
																"description": "Updates individual custom object fields. The updating rules are as follows:\n* Takes a `custom_object_field` object that specifies the properties to update\n* The `key` property cannot be updated\n* If updating a standard field, only the `title` and `description` properties can be updated.\n#### Allowed For\n* Admins"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/fields/:custom_object_field_key_or_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"custom_objects",
																				":custom_object_key",
																				"fields",
																				":custom_object_field_key_or_id"
																			],
																			"variable": [
																				{
																					"key": "custom_object_key"
																				},
																				{
																					"key": "custom_object_field_key_or_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"custom_object_field\": {\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"system\": \"<boolean>\",\n    \"tag\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
																}
															]
														},
														{
															"name": "Delete Custom Object Field",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/fields/:custom_object_field_key_or_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"fields",
																		":custom_object_field_key_or_id"
																	],
																	"variable": [
																		{
																			"key": "custom_object_key",
																			"value": "<string>",
																			"description": "(Required) The key of a custom object"
																		},
																		{
																			"key": "custom_object_field_key_or_id",
																			"value": "<string>",
																			"description": "(Required) The key or id of a custom object field"
																		}
																	]
																},
																"description": "Deletes a field with the specified key. Note: You can't delete standard fields.\n#### Allowed For\n* Admins"
															},
															"response": [
																{
																	"name": "No content response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/fields/:custom_object_field_key_or_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"custom_objects",
																				":custom_object_key",
																				"fields",
																				":custom_object_field_key_or_id"
																			],
																			"variable": [
																				{
																					"key": "custom_object_key"
																				},
																				{
																					"key": "custom_object_field_key_or_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": null
																}
															]
														}
													]
												},
												{
													"name": "reorder",
													"item": [
														{
															"name": "Reorder Custom Fields of an Object",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/fields/reorder",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"fields",
																		"reorder"
																	],
																	"variable": [
																		{
																			"key": "custom_object_key",
																			"value": "<string>",
																			"description": "(Required) The key of a custom object"
																		}
																	]
																},
																"description": "Sets a preferred order of custom fields for a specific object by providing field ids in the desired order.\n#### Allowed For\n\n* Admins\n"
															},
															"response": [
																{
																	"name": "Reordered",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/fields/reorder",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"custom_objects",
																				":custom_object_key",
																				"fields",
																				"reorder"
																			],
																			"variable": [
																				{
																					"key": "custom_object_key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "<string>"
																}
															]
														}
													]
												},
												{
													"name": "List Custom Object Fields",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/fields?include_standard_fields=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_objects",
																":custom_object_key",
																"fields"
															],
															"query": [
																{
																	"key": "include_standard_fields",
																	"value": "<boolean>",
																	"description": "Include standard fields if true. Exclude them if false"
																}
															],
															"variable": [
																{
																	"key": "custom_object_key",
																	"value": "<string>",
																	"description": "(Required) The key of a custom object"
																}
															]
														},
														"description": "Lists all undeleted custom fields for the specified object.\n\n#### Allowed For\n* Agents\n\n#### Pagination\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/)."
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/fields?include_standard_fields=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"fields"
																	],
																	"query": [
																		{
																			"key": "include_standard_fields",
																			"value": "<boolean>",
																			"description": "Include standard fields if true. Exclude them if false"
																		}
																	],
																	"variable": [
																		{
																			"key": "custom_object_key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"custom_object_fields\": [\n    {\n      \"key\": \"<string>\",\n      \"type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"custom_field_options\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_description\": \"<string>\",\n      \"raw_title\": \"<string>\",\n      \"regexp_for_validation\": \"<string>\",\n      \"relationship_filter\": {},\n      \"relationship_target_type\": \"<string>\",\n      \"system\": \"<boolean>\",\n      \"tag\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"custom_field_options\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_description\": \"<string>\",\n      \"raw_title\": \"<string>\",\n      \"regexp_for_validation\": \"<string>\",\n      \"relationship_filter\": {},\n      \"relationship_target_type\": \"<string>\",\n      \"system\": \"<boolean>\",\n      \"tag\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create Custom Object Field",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"custom_object_field\": {\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"system\": \"<boolean>\",\n    \"tag\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_objects",
																":custom_object_key",
																"fields"
															],
															"variable": [
																{
																	"key": "custom_object_key",
																	"value": "<string>",
																	"description": "(Required) The key of a custom object"
																}
															]
														},
														"description": "Creates any of the following custom field types:\n\n* text (default when no \"type\" is specified)\n* textarea\n* checkbox\n* date\n* integer\n* decimal\n* regexp\n* dropdown\n* lookup\n\nSee [About custom field types](https://support.zendesk.com/hc/en-us/articles/203661866) in Zendesk help.\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"custom_object_field\": {\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"system\": \"<boolean>\",\n    \"tag\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/fields",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"fields"
																	],
																	"variable": [
																		{
																			"key": "custom_object_key"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"custom_object_field\": {\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"system\": \"<boolean>\",\n    \"tag\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "jobs",
											"item": [
												{
													"name": "Custom Object Record Bulk Jobs",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"job\": {\n    \"action\": \"<string>\",\n    \"items\": [\n      {\n        \"name\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"created_by_user_id\": \"<string>\",\n        \"custom_object_fields\": {\n          \"non9_\": \"<integer,string>\",\n          \"nulla_5f\": \"<integer,string>\",\n          \"et2\": \"<integer,string>\",\n          \"ad965\": \"<integer,string>\",\n          \"auteb9d\": \"<integer,string>\"\n        },\n        \"custom_object_key\": \"<string>\",\n        \"external_id\": \"<string>\",\n        \"id\": \"<string>\",\n        \"updated_at\": \"<dateTime>\",\n        \"updated_by_user_id\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"created_by_user_id\": \"<string>\",\n        \"custom_object_fields\": {\n          \"reprehenderit_1\": \"<integer,string>\"\n        },\n        \"custom_object_key\": \"<string>\",\n        \"external_id\": \"<string>\",\n        \"id\": \"<string>\",\n        \"updated_at\": \"<dateTime>\",\n        \"updated_by_user_id\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/jobs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_objects",
																":custom_object_key",
																"jobs"
															],
															"variable": [
																{
																	"key": "custom_object_key",
																	"value": "<string>",
																	"description": "(Required) The key of a custom object"
																}
															]
														},
														"description": "Queues a background job to perform bulk actions on up to 100 custom object records per single request.\nTakes a `job` object with two nested fields:\n* `action`, one of:\n    * `\"create\"`\n    * `\"delete\"`\n    * `\"delete_by_external_id\"`\n* `items`\n    * For a `\"create\"` action, an array of JSON objects representing the custom object records being created\n    * For a `\"delete\"` action, an array of strings representing Zendesk record ids\n    * For a `\"delete_by_external_id\"` action, an array of strings representing external ids\n\n#### Allowed For\n* Agents\n\n#### Response ###\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n"
													},
													"response": [
														{
															"name": "Created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"job\": {\n    \"action\": \"<string>\",\n    \"items\": [\n      {\n        \"name\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"created_by_user_id\": \"<string>\",\n        \"custom_object_fields\": {\n          \"non9_\": \"<integer,string>\",\n          \"nulla_5f\": \"<integer,string>\",\n          \"et2\": \"<integer,string>\",\n          \"ad965\": \"<integer,string>\",\n          \"auteb9d\": \"<integer,string>\"\n        },\n        \"custom_object_key\": \"<string>\",\n        \"external_id\": \"<string>\",\n        \"id\": \"<string>\",\n        \"updated_at\": \"<dateTime>\",\n        \"updated_by_user_id\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"created_by_user_id\": \"<string>\",\n        \"custom_object_fields\": {\n          \"reprehenderit_1\": \"<integer,string>\"\n        },\n        \"custom_object_key\": \"<string>\",\n        \"external_id\": \"<string>\",\n        \"id\": \"<string>\",\n        \"updated_at\": \"<dateTime>\",\n        \"updated_by_user_id\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/jobs",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"jobs"
																	],
																	"variable": [
																		{
																			"key": "custom_object_key"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"name\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"created_by_user_id\": \"<string>\",\n        \"custom_object_fields\": {\n          \"Excepteurfdd\": \"<integer,string>\",\n          \"Ut_8\": \"<integer,string>\",\n          \"magna0\": \"<integer,string>\",\n          \"nostrud_1b\": \"<integer,string>\"\n        },\n        \"custom_object_key\": \"<string>\",\n        \"external_id\": \"<string>\",\n        \"id\": \"<string>\",\n        \"updated_at\": \"<dateTime>\",\n        \"updated_by_user_id\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"created_by_user_id\": \"<string>\",\n        \"custom_object_fields\": {\n          \"consecteturf67\": \"<integer,string>\",\n          \"commodo_1\": \"<integer,string>\"\n        },\n        \"custom_object_key\": \"<string>\",\n        \"external_id\": \"<string>\",\n        \"id\": \"<string>\",\n        \"updated_at\": \"<dateTime>\",\n        \"updated_by_user_id\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "limits",
											"item": [
												{
													"name": "field_limit",
													"item": [
														{
															"name": "Custom Object Fields Limit",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/limits/field_limit",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"limits",
																		"field_limit"
																	],
																	"variable": [
																		{
																			"key": "custom_object_key",
																			"value": "<string>",
																			"description": "(Required) The key of a custom object"
																		}
																	]
																},
																"description": "List the current count and the limit for a custom object's fields\n#### Allowed For\n* Agents"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/limits/field_limit",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"custom_objects",
																				":custom_object_key",
																				"limits",
																				"field_limit"
																			],
																			"variable": [
																				{
																					"key": "custom_object_key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\"\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "records",
											"item": [
												{
													"name": "{custom_object_record_id}",
													"item": [
														{
															"name": "Show Custom Object Record",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records/:custom_object_record_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"records",
																		":custom_object_record_id"
																	],
																	"variable": [
																		{
																			"key": "custom_object_key",
																			"value": "<string>",
																			"description": "(Required) The key of a custom object"
																		},
																		{
																			"key": "custom_object_record_id",
																			"value": "<string>",
																			"description": "(Required) The id of a custom object record"
																		}
																	]
																},
																"description": "Returns a custom record for a specific object using a provided id.\n#### Allowed For\n* Agents\n"
															},
															"response": [
																{
																	"name": "Custom Object Record",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records/:custom_object_record_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"custom_objects",
																				":custom_object_key",
																				"records",
																				":custom_object_record_id"
																			],
																			"variable": [
																				{
																					"key": "custom_object_key"
																				},
																				{
																					"key": "custom_object_record_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"custom_object_record\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"created_by_user_id\": \"<string>\",\n    \"custom_object_fields\": {\n      \"id_829\": \"<integer,string>\"\n    },\n    \"custom_object_key\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_by_user_id\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
																}
															]
														},
														{
															"name": "Update Custom Object Record",
															"request": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records/:custom_object_record_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"records",
																		":custom_object_record_id"
																	],
																	"variable": [
																		{
																			"key": "custom_object_key",
																			"value": "<string>",
																			"description": "(Required) The key of a custom object"
																		},
																		{
																			"key": "custom_object_record_id",
																			"value": "<string>",
																			"description": "(Required) The id of a custom object record"
																		}
																	]
																},
																"description": "Updates an individual custom object record. The updating rules are as follows:\n* Takes a `custom_object_record` object that specifies the properties to update\n* The custom object fields should be nested inside a `custom_object_fields` object\n#### Allowed For\n* Agents"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records/:custom_object_record_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"custom_objects",
																				":custom_object_key",
																				"records",
																				":custom_object_record_id"
																			],
																			"variable": [
																				{
																					"key": "custom_object_key"
																				},
																				{
																					"key": "custom_object_record_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"custom_object_record\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"created_by_user_id\": \"<string>\",\n    \"custom_object_fields\": {\n      \"id_829\": \"<integer,string>\"\n    },\n    \"custom_object_key\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_by_user_id\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
																}
															]
														},
														{
															"name": "Delete Custom Object Record",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records/:custom_object_record_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"records",
																		":custom_object_record_id"
																	],
																	"variable": [
																		{
																			"key": "custom_object_key",
																			"value": "<string>",
																			"description": "(Required) The key of a custom object"
																		},
																		{
																			"key": "custom_object_record_id",
																			"value": "<string>",
																			"description": "(Required) The id of a custom object record"
																		}
																	]
																},
																"description": "Deletes a record with the specified id\n#### Allowed For\n* Agents"
															},
															"response": [
																{
																	"name": "No content response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records/:custom_object_record_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"custom_objects",
																				":custom_object_key",
																				"records",
																				":custom_object_record_id"
																			],
																			"variable": [
																				{
																					"key": "custom_object_key"
																				},
																				{
																					"key": "custom_object_record_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": null
																}
															]
														}
													]
												},
												{
													"name": "autocomplete",
													"item": [
														{
															"name": "Autocomplete Custom Object Record Search",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records/autocomplete?name=<string>&page[before]=<string>&page[after]=<string>&page[size]=<integer>&field_id=<string>&source=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"records",
																		"autocomplete"
																	],
																	"query": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "Part of a name of the record you are searching for"
																		},
																		{
																			"key": "page[before]",
																			"value": "<string>",
																			"description": "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.before_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
																		},
																		{
																			"key": "page[after]",
																			"value": "<string>",
																			"description": "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.after_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
																		},
																		{
																			"key": "page[size]",
																			"value": "<integer>",
																			"description": "The number of records to return in the response.\n"
																		},
																		{
																			"key": "field_id",
																			"value": "<string>",
																			"description": "The id of the lookup field. If the field has a relationship filter, the filter is applied to the results. Must be used with `source` param.\n"
																		},
																		{
																			"key": "source",
																			"value": "<string>",
																			"description": "One of \"zen:user\", \"zen:ticket\", \"zen:organization\", or \"zen:custom_object:CUSTOM_OBJECT_KEY\". Represents the object `field_id` belongs to. Must be used with field_id param.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "custom_object_key",
																			"value": "<string>",
																			"description": "(Required) The key of a custom object"
																		}
																	]
																},
																"description": "Retrieves an array of custom object records that have a field value that matches the value specified in the `name` parameter.\n\n#### Pagination\n\n* [Cursor pagination](/api-reference/introduction/pagination/#cursor-pagination) only.\n* Returns the first 10,000 records sorted by relevancy with page limits.\n#### Allowed For\n* Agents"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records/autocomplete?name=<string>&page[before]=<string>&page[after]=<string>&page[size]=<integer>&field_id=<string>&source=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"custom_objects",
																				":custom_object_key",
																				"records",
																				"autocomplete"
																			],
																			"query": [
																				{
																					"key": "name",
																					"value": "<string>",
																					"description": "Part of a name of the record you are searching for"
																				},
																				{
																					"key": "page[before]",
																					"value": "<string>",
																					"description": "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.before_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
																				},
																				{
																					"key": "page[after]",
																					"value": "<string>",
																					"description": "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.after_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
																				},
																				{
																					"key": "page[size]",
																					"value": "<integer>",
																					"description": "The number of records to return in the response.\n"
																				},
																				{
																					"key": "field_id",
																					"value": "<string>",
																					"description": "The id of the lookup field. If the field has a relationship filter, the filter is applied to the results. Must be used with `source` param.\n"
																				},
																				{
																					"key": "source",
																					"value": "<string>",
																					"description": "One of \"zen:user\", \"zen:ticket\", \"zen:organization\", or \"zen:custom_object:CUSTOM_OBJECT_KEY\". Represents the object `field_id` belongs to. Must be used with field_id param.\n"
																				}
																			],
																			"variable": [
																				{
																					"key": "custom_object_key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"count\": \"<integer>\",\n  \"custom_object_records\": [\n    {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"created_by_user_id\": \"<string>\",\n      \"custom_object_fields\": {\n        \"in_386\": \"<integer,string>\",\n        \"pariatur_a\": \"<integer,string>\"\n      },\n      \"custom_object_key\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_by_user_id\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"created_by_user_id\": \"<string>\",\n      \"custom_object_fields\": {\n        \"Ut_b_\": \"<integer,string>\",\n        \"qui_f\": \"<integer,string>\"\n      },\n      \"custom_object_key\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_by_user_id\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"links\": {\n    \"prev\": \"<string>\",\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"has_more\": \"<boolean>\",\n    \"after_cursor\": \"<string>\",\n    \"before_cursor\": \"<string>\"\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "count",
													"item": [
														{
															"name": "Count Custom Object Records",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records/count",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"records",
																		"count"
																	],
																	"variable": [
																		{
																			"key": "custom_object_key",
																			"value": "<string>",
																			"description": "(Required) The key of a custom object"
																		}
																	]
																},
																"description": "Returns a total count of records for a specific custom object as well as the time the count was refreshed.\n#### Allowed For\n* Agents"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records/count",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"custom_objects",
																				":custom_object_key",
																				"records",
																				"count"
																			],
																			"variable": [
																				{
																					"key": "custom_object_key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"count\": {\n    \"ex3\": {\n      \"refreshed_at\": \"<dateTime>\",\n      \"value\": \"<integer>\"\n    }\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "search",
													"item": [
														{
															"name": "Search Custom Object Records",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records/search?query=<string>&sort=<string>&page[before]=<string>&page[after]=<string>&page[size]=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"records",
																		"search"
																	],
																	"query": [
																		{
																			"key": "query",
																			"value": "<string>",
																			"description": "The query parameter is used to search text-based fields for records that match specific query terms.\nThe query can be multiple words or numbers. Every record that matches the beginning of any word or number in the query string is returned.<br/><br/>\n\nFor example, you might want to search for records related to Tesla vehicles: `query=Tesla`. In this example the API would return every record for the given custom object where any of the text fields contain the word 'Tesla'.<br/><br/>\n\nIf needed, you could include multiple words or numbers in your search. For example: `query=Tesla Honda 2020`. This would be URL encoded as `query=Tesla%20Honda%202020`. In this example, the API would return every record for the custom object for which any of the text fields contained 'Tesla', 'Honda', or '2020'.\n"
																		},
																		{
																			"key": "sort",
																			"value": "<string>",
																			"description": "One of `name`, `created_at`, `updated_at`, `-name`, `-created_at`, or `-updated_at`. The `-` denotes the sort will be descending. Defaults to sorting by relevance.\n"
																		},
																		{
																			"key": "page[before]",
																			"value": "<string>",
																			"description": "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.before_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
																		},
																		{
																			"key": "page[after]",
																			"value": "<string>",
																			"description": "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.after_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
																		},
																		{
																			"key": "page[size]",
																			"value": "<integer>",
																			"description": "Specifies how many records should be returned in the response.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "custom_object_key",
																			"value": "<string>",
																			"description": "(Required) The key of a custom object"
																		}
																	]
																},
																"description": "Returns an array of custom object records that meet the search criteria\n\n#### Pagination\n\n* [Cursor pagination](/api-reference/introduction/pagination/#cursor-pagination) only.\n* Returns the records sorted by relevancy with page limits. Without a `sort` parameter, only the first 10,000 records are returned. With a `sort` parameter, all records are returned.\n#### Allowed For\n* Agents"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records/search?query=<string>&sort=<string>&page[before]=<string>&page[after]=<string>&page[size]=<integer>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"custom_objects",
																				":custom_object_key",
																				"records",
																				"search"
																			],
																			"query": [
																				{
																					"key": "query",
																					"value": "<string>",
																					"description": "The query parameter is used to search text-based fields for records that match specific query terms.\nThe query can be multiple words or numbers. Every record that matches the beginning of any word or number in the query string is returned.<br/><br/>\n\nFor example, you might want to search for records related to Tesla vehicles: `query=Tesla`. In this example the API would return every record for the given custom object where any of the text fields contain the word 'Tesla'.<br/><br/>\n\nIf needed, you could include multiple words or numbers in your search. For example: `query=Tesla Honda 2020`. This would be URL encoded as `query=Tesla%20Honda%202020`. In this example, the API would return every record for the custom object for which any of the text fields contained 'Tesla', 'Honda', or '2020'.\n"
																				},
																				{
																					"key": "sort",
																					"value": "<string>",
																					"description": "One of `name`, `created_at`, `updated_at`, `-name`, `-created_at`, or `-updated_at`. The `-` denotes the sort will be descending. Defaults to sorting by relevance.\n"
																				},
																				{
																					"key": "page[before]",
																					"value": "<string>",
																					"description": "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.before_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
																				},
																				{
																					"key": "page[after]",
																					"value": "<string>",
																					"description": "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.after_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
																				},
																				{
																					"key": "page[size]",
																					"value": "<integer>",
																					"description": "Specifies how many records should be returned in the response.\n"
																				}
																			],
																			"variable": [
																				{
																					"key": "custom_object_key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"count\": \"<integer>\",\n  \"custom_object_records\": [\n    {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"created_by_user_id\": \"<string>\",\n      \"custom_object_fields\": {\n        \"in_386\": \"<integer,string>\",\n        \"pariatur_a\": \"<integer,string>\"\n      },\n      \"custom_object_key\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_by_user_id\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"created_by_user_id\": \"<string>\",\n      \"custom_object_fields\": {\n        \"Ut_b_\": \"<integer,string>\",\n        \"qui_f\": \"<integer,string>\"\n      },\n      \"custom_object_key\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_by_user_id\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"links\": {\n    \"prev\": \"<string>\",\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"has_more\": \"<boolean>\",\n    \"after_cursor\": \"<string>\",\n    \"before_cursor\": \"<string>\"\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "List Custom Object Records",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records?filter[ids]=<string>&filter[external_ids]=<string>&sort=<string>&page[before]=<string>&page[after]=<string>&page[size]=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_objects",
																":custom_object_key",
																"records"
															],
															"query": [
																{
																	"key": "filter[ids]",
																	"value": "<string>",
																	"description": "Optional comma-separated list of ids to filter records by. If one or more ids are specified, only matching records are returned. The ids must be unique and are case sensitive."
																},
																{
																	"key": "filter[external_ids]",
																	"value": "<string>",
																	"description": "Optional comma-separated list of external ids to filter records by. If one or more ids are specified, only matching records are returned. The ids must be unique and are case sensitive."
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "One of `id`, `updated_at`, `-id`, or `-updated_at`. The `-` denotes the sort will be descending.\n"
																},
																{
																	"key": "page[before]",
																	"value": "<string>",
																	"description": "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.before_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
																},
																{
																	"key": "page[after]",
																	"value": "<string>",
																	"description": "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.after_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
																},
																{
																	"key": "page[size]",
																	"value": "<integer>",
																	"description": "Specifies how many records should be returned in the response.\n"
																}
															],
															"variable": [
																{
																	"key": "custom_object_key",
																	"value": "<string>",
																	"description": "(Required) The key of a custom object"
																}
															]
														},
														"description": "Lists all undeleted custom object records for the specified object\n\n #### Pagination\n\n* [Cursor pagination](/api-reference/introduction/pagination/#cursor-pagination) only.\n#### Allowed For\n* Agents"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records?filter[ids]=<string>&filter[external_ids]=<string>&sort=<string>&page[before]=<string>&page[after]=<string>&page[size]=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"records"
																	],
																	"query": [
																		{
																			"key": "filter[ids]",
																			"value": "<string>",
																			"description": "Optional comma-separated list of ids to filter records by. If one or more ids are specified, only matching records are returned. The ids must be unique and are case sensitive."
																		},
																		{
																			"key": "filter[external_ids]",
																			"value": "<string>",
																			"description": "Optional comma-separated list of external ids to filter records by. If one or more ids are specified, only matching records are returned. The ids must be unique and are case sensitive."
																		},
																		{
																			"key": "sort",
																			"value": "<string>",
																			"description": "One of `id`, `updated_at`, `-id`, or `-updated_at`. The `-` denotes the sort will be descending.\n"
																		},
																		{
																			"key": "page[before]",
																			"value": "<string>",
																			"description": "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.before_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
																		},
																		{
																			"key": "page[after]",
																			"value": "<string>",
																			"description": "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.after_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
																		},
																		{
																			"key": "page[size]",
																			"value": "<integer>",
																			"description": "Specifies how many records should be returned in the response.\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "custom_object_key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"count\": \"<integer>\",\n  \"custom_object_records\": [\n    {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"created_by_user_id\": \"<string>\",\n      \"custom_object_fields\": {\n        \"in_386\": \"<integer,string>\",\n        \"pariatur_a\": \"<integer,string>\"\n      },\n      \"custom_object_key\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_by_user_id\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"created_by_user_id\": \"<string>\",\n      \"custom_object_fields\": {\n        \"Ut_b_\": \"<integer,string>\",\n        \"qui_f\": \"<integer,string>\"\n      },\n      \"custom_object_key\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_by_user_id\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"links\": {\n    \"prev\": \"<string>\",\n    \"next\": \"<string>\"\n  },\n  \"meta\": {\n    \"has_more\": \"<boolean>\",\n    \"after_cursor\": \"<string>\",\n    \"before_cursor\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Create Custom Object Record",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"custom_object_record\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"created_by_user_id\": \"<string>\",\n    \"custom_object_fields\": {\n      \"id_829\": \"<integer,string>\"\n    },\n    \"custom_object_key\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_by_user_id\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_objects",
																":custom_object_key",
																"records"
															],
															"variable": [
																{
																	"key": "custom_object_key",
																	"value": "<string>",
																	"description": "(Required) The key of a custom object"
																}
															]
														},
														"description": "Creates a custom object record according to all the properties described by a custom object definition\n#### Allowed For\n* Agents\n"
													},
													"response": [
														{
															"name": "Created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"custom_object_record\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"created_by_user_id\": \"<string>\",\n    \"custom_object_fields\": {\n      \"id_829\": \"<integer,string>\"\n    },\n    \"custom_object_key\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_by_user_id\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "custom_object_key"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"custom_object_record\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"created_by_user_id\": \"<string>\",\n    \"custom_object_fields\": {\n      \"id_829\": \"<integer,string>\"\n    },\n    \"custom_object_key\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_by_user_id\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Set Custom Object Record by External Id",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"custom_object_record\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"created_by_user_id\": \"<string>\",\n    \"custom_object_fields\": {\n      \"id_829\": \"<integer,string>\"\n    },\n    \"custom_object_key\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_by_user_id\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records?external_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_objects",
																":custom_object_key",
																"records"
															],
															"query": [
																{
																	"key": "external_id",
																	"value": "<string>",
																	"description": "(Required) The external id of a custom object record"
																}
															],
															"variable": [
																{
																	"key": "custom_object_key",
																	"value": "<string>",
																	"description": "(Required) The key of a custom object"
																}
															]
														},
														"description": "If a record exists for the given external id, updates it. Only the specified attributes are updated. Otherwise, creates a new record with the provided external id and attributes.\n#### Allowed For\n* Agents\n"
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"custom_object_record\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"created_by_user_id\": \"<string>\",\n    \"custom_object_fields\": {\n      \"id_829\": \"<integer,string>\"\n    },\n    \"custom_object_key\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_by_user_id\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records?external_id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"records"
																	],
																	"query": [
																		{
																			"key": "external_id",
																			"value": "<string>",
																			"description": "(Required) The external id of a custom object record"
																		}
																	],
																	"variable": [
																		{
																			"key": "custom_object_key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"custom_object_record\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"created_by_user_id\": \"<string>\",\n    \"custom_object_fields\": {\n      \"id_829\": \"<integer,string>\"\n    },\n    \"custom_object_key\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_by_user_id\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Delete Custom Object Record by External Id",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records?external_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_objects",
																":custom_object_key",
																"records"
															],
															"query": [
																{
																	"key": "external_id",
																	"value": "<string>",
																	"description": "(Required) The external id of a custom object record"
																}
															],
															"variable": [
																{
																	"key": "custom_object_key",
																	"value": "<string>",
																	"description": "(Required) The key of a custom object"
																}
															]
														},
														"description": "Deletes a record with the specified external id.\n#### Allowed For\n* Agents\n"
													},
													"response": [
														{
															"name": "No content response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key/records?external_id=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		":custom_object_key",
																		"records"
																	],
																	"query": [
																		{
																			"key": "external_id",
																			"value": "<string>",
																			"description": "(Required) The external id of a custom object record"
																		}
																	],
																	"variable": [
																		{
																			"key": "custom_object_key"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														}
													]
												}
											]
										},
										{
											"name": "Show Custom Object",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_objects",
														":custom_object_key"
													],
													"variable": [
														{
															"key": "custom_object_key",
															"value": "<string>",
															"description": "(Required) The key of a custom object"
														}
													]
												},
												"description": "Returns an object with the specified key\n#### Allowed For\n* Agents\n"
											},
											"response": [
												{
													"name": "Custom Object",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_objects",
																":custom_object_key"
															],
															"variable": [
																{
																	"key": "custom_object_key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"custom_object\": {\n    \"key\": \"<string>\",\n    \"title\": \"<string>\",\n    \"title_pluralized\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"created_by_user_id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"raw_title_pluralized\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_by_user_id\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Custom Object",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_objects",
														":custom_object_key"
													],
													"variable": [
														{
															"key": "custom_object_key",
															"value": "<string>",
															"description": "(Required) The key of a custom object"
														}
													]
												},
												"description": "Updates an individual custom object. The updating rules are as follows:\n* Takes a `custom_object` object that specifies the properties to update\n* The `key` property cannot be updated\n#### Allowed For\n* Admins"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_objects",
																":custom_object_key"
															],
															"variable": [
																{
																	"key": "custom_object_key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"custom_object\": {\n    \"key\": \"<string>\",\n    \"title\": \"<string>\",\n    \"title_pluralized\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"created_by_user_id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"raw_title_pluralized\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_by_user_id\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Custom Object",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_objects",
														":custom_object_key"
													],
													"variable": [
														{
															"key": "custom_object_key",
															"value": "<string>",
															"description": "(Required) The key of a custom object"
														}
													]
												},
												"description": "Permanently deletes the custom object with the specified key\n#### Allowed For\n* Admins"
											},
											"response": [
												{
													"name": "No content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_objects/:custom_object_key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_objects",
																":custom_object_key"
															],
															"variable": [
																{
																	"key": "custom_object_key"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "limits",
									"item": [
										{
											"name": "object_limit",
											"item": [
												{
													"name": "Custom Objects Limit",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_objects/limits/object_limit",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_objects",
																"limits",
																"object_limit"
															]
														},
														"description": "List the current count and the limit for custom objects\n#### Allowed For\n* Admins"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/limits/object_limit",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		"limits",
																		"object_limit"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "record_limit",
											"item": [
												{
													"name": "Custom Object Records Limit",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_objects/limits/record_limit",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_objects",
																"limits",
																"record_limit"
															]
														},
														"description": "List the current count and the limit for custom object records\n#### Allowed For\n* Agents"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/custom_objects/limits/record_limit",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"custom_objects",
																		"limits",
																		"record_limit"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "List Custom Objects",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/custom_objects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"custom_objects"
											]
										},
										"description": "Lists all undeleted custom objects for the account\n#### Allowed For\n* Agents"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_objects",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_objects"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"custom_objects\": [\n    {\n      \"key\": \"<string>\",\n      \"title\": \"<string>\",\n      \"title_pluralized\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"created_by_user_id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"raw_description\": \"<string>\",\n      \"raw_title\": \"<string>\",\n      \"raw_title_pluralized\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_by_user_id\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"title\": \"<string>\",\n      \"title_pluralized\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"created_by_user_id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"raw_description\": \"<string>\",\n      \"raw_title\": \"<string>\",\n      \"raw_title_pluralized\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_by_user_id\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Custom Object",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_object\": {\n    \"key\": \"<string>\",\n    \"title\": \"<string>\",\n    \"title_pluralized\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/custom_objects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"custom_objects"
											]
										},
										"description": "Creates an object describing all the properties required to create a custom object record\n#### Allowed For\n* Admins\n"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"custom_object\": {\n    \"key\": \"<string>\",\n    \"title\": \"<string>\",\n    \"title_pluralized\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_objects",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_objects"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"custom_object\": {\n    \"key\": \"<string>\",\n    \"title\": \"<string>\",\n    \"title_pluralized\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"created_by_user_id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"raw_title_pluralized\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_by_user_id\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "custom_roles",
							"item": [
								{
									"name": "{custom_role_id}",
									"item": [
										{
											"name": "Show Custom Role",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_roles/:custom_role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_roles",
														":custom_role_id"
													],
													"variable": [
														{
															"key": "custom_role_id",
															"value": "<integer>",
															"description": "(Required) The ID of the custom agent role"
														}
													]
												},
												"description": "#### Availability\n\n* Accounts on the Enterprise plan or above\n\n#### Allowed for\n\n* Administrators\n* Agents with the `manage_roles` permission\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_roles/:custom_role_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_roles",
																":custom_role_id"
															],
															"variable": [
																{
																	"key": "custom_role_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"custom_role\": {\n    \"name\": \"<string>\",\n    \"role_type\": \"<integer>\",\n    \"configuration\": {\n      \"assign_tickets_to_any_group\": \"<boolean>\",\n      \"chat_access\": \"<boolean>\",\n      \"end_user_list_access\": \"<string>\",\n      \"end_user_profile_access\": \"<string>\",\n      \"explore_access\": \"<string>\",\n      \"forum_access\": \"<string>\",\n      \"forum_access_restricted_content\": \"<boolean>\",\n      \"group_access\": \"<boolean>\",\n      \"light_agent\": \"<boolean>\",\n      \"macro_access\": \"<string>\",\n      \"manage_business_rules\": \"<boolean>\",\n      \"manage_contextual_workspaces\": \"<boolean>\",\n      \"manage_dynamic_content\": \"<boolean>\",\n      \"manage_extensions_and_channels\": \"<boolean>\",\n      \"manage_facebook\": \"<boolean>\",\n      \"manage_organization_fields\": \"<boolean>\",\n      \"manage_ticket_fields\": \"<boolean>\",\n      \"manage_ticket_forms\": \"<boolean>\",\n      \"manage_user_fields\": \"<boolean>\",\n      \"moderate_forums\": \"<boolean>\",\n      \"organization_editing\": \"<boolean>\",\n      \"organization_notes_editing\": \"<boolean>\",\n      \"report_access\": \"<string>\",\n      \"side_conversation_create\": \"<boolean>\",\n      \"ticket_access\": \"<string>\",\n      \"ticket_comment_access\": \"<string>\",\n      \"ticket_deletion\": \"<boolean>\",\n      \"ticket_editing\": \"<boolean>\",\n      \"ticket_merge\": \"<boolean>\",\n      \"ticket_tag_editing\": \"<boolean>\",\n      \"twitter_search_access\": \"<boolean>\",\n      \"user_view_access\": \"<string>\",\n      \"view_access\": \"<string>\",\n      \"view_deleted_tickets\": \"<boolean>\",\n      \"voice_access\": \"<boolean>\",\n      \"voice_dashboard_access\": \"<boolean>\"\n    },\n    \"created_at\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"team_member_count\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Custom Role",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_roles/:custom_role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_roles",
														":custom_role_id"
													],
													"variable": [
														{
															"key": "custom_role_id",
															"value": "<integer>",
															"description": "(Required) The ID of the custom agent role"
														}
													]
												},
												"description": "#### Availability\n\n* Accounts on the Enterprise plan or above\n\n#### Allowed for\n\n* Administrators\nAgents with the `manage_roles` permission\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_roles/:custom_role_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_roles",
																":custom_role_id"
															],
															"variable": [
																{
																	"key": "custom_role_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"custom_role\": {\n    \"name\": \"<string>\",\n    \"role_type\": \"<integer>\",\n    \"configuration\": {\n      \"assign_tickets_to_any_group\": \"<boolean>\",\n      \"chat_access\": \"<boolean>\",\n      \"end_user_list_access\": \"<string>\",\n      \"end_user_profile_access\": \"<string>\",\n      \"explore_access\": \"<string>\",\n      \"forum_access\": \"<string>\",\n      \"forum_access_restricted_content\": \"<boolean>\",\n      \"group_access\": \"<boolean>\",\n      \"light_agent\": \"<boolean>\",\n      \"macro_access\": \"<string>\",\n      \"manage_business_rules\": \"<boolean>\",\n      \"manage_contextual_workspaces\": \"<boolean>\",\n      \"manage_dynamic_content\": \"<boolean>\",\n      \"manage_extensions_and_channels\": \"<boolean>\",\n      \"manage_facebook\": \"<boolean>\",\n      \"manage_organization_fields\": \"<boolean>\",\n      \"manage_ticket_fields\": \"<boolean>\",\n      \"manage_ticket_forms\": \"<boolean>\",\n      \"manage_user_fields\": \"<boolean>\",\n      \"moderate_forums\": \"<boolean>\",\n      \"organization_editing\": \"<boolean>\",\n      \"organization_notes_editing\": \"<boolean>\",\n      \"report_access\": \"<string>\",\n      \"side_conversation_create\": \"<boolean>\",\n      \"ticket_access\": \"<string>\",\n      \"ticket_comment_access\": \"<string>\",\n      \"ticket_deletion\": \"<boolean>\",\n      \"ticket_editing\": \"<boolean>\",\n      \"ticket_merge\": \"<boolean>\",\n      \"ticket_tag_editing\": \"<boolean>\",\n      \"twitter_search_access\": \"<boolean>\",\n      \"user_view_access\": \"<string>\",\n      \"view_access\": \"<string>\",\n      \"view_deleted_tickets\": \"<boolean>\",\n      \"voice_access\": \"<boolean>\",\n      \"voice_dashboard_access\": \"<boolean>\"\n    },\n    \"created_at\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"team_member_count\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Custom Role",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_roles/:custom_role_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_roles",
														":custom_role_id"
													],
													"variable": [
														{
															"key": "custom_role_id",
															"value": "<integer>",
															"description": "(Required) The ID of the custom agent role"
														}
													]
												},
												"description": "#### Availability\n\n* Accounts on the Enterprise plan or above\n\n#### Allowed for\n\n* Administrators\n* Agents with the `manage_roles` permission\n"
											},
											"response": [
												{
													"name": "No Contetnt response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_roles/:custom_role_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_roles",
																":custom_role_id"
															],
															"variable": [
																{
																	"key": "custom_role_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "List Custom Roles",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/custom_roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"custom_roles"
											]
										},
										"description": "#### Availability\n\n* Accounts on the Enterprise plan or above\n\n#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_roles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_roles"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"custom_roles\": [\n    {\n      \"name\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"configuration\": {\n        \"assign_tickets_to_any_group\": \"<boolean>\",\n        \"chat_access\": \"<boolean>\",\n        \"end_user_list_access\": \"<string>\",\n        \"end_user_profile_access\": \"<string>\",\n        \"explore_access\": \"<string>\",\n        \"forum_access\": \"<string>\",\n        \"forum_access_restricted_content\": \"<boolean>\",\n        \"group_access\": \"<boolean>\",\n        \"light_agent\": \"<boolean>\",\n        \"macro_access\": \"<string>\",\n        \"manage_business_rules\": \"<boolean>\",\n        \"manage_contextual_workspaces\": \"<boolean>\",\n        \"manage_dynamic_content\": \"<boolean>\",\n        \"manage_extensions_and_channels\": \"<boolean>\",\n        \"manage_facebook\": \"<boolean>\",\n        \"manage_organization_fields\": \"<boolean>\",\n        \"manage_ticket_fields\": \"<boolean>\",\n        \"manage_ticket_forms\": \"<boolean>\",\n        \"manage_user_fields\": \"<boolean>\",\n        \"moderate_forums\": \"<boolean>\",\n        \"organization_editing\": \"<boolean>\",\n        \"organization_notes_editing\": \"<boolean>\",\n        \"report_access\": \"<string>\",\n        \"side_conversation_create\": \"<boolean>\",\n        \"ticket_access\": \"<string>\",\n        \"ticket_comment_access\": \"<string>\",\n        \"ticket_deletion\": \"<boolean>\",\n        \"ticket_editing\": \"<boolean>\",\n        \"ticket_merge\": \"<boolean>\",\n        \"ticket_tag_editing\": \"<boolean>\",\n        \"twitter_search_access\": \"<boolean>\",\n        \"user_view_access\": \"<string>\",\n        \"view_access\": \"<string>\",\n        \"view_deleted_tickets\": \"<boolean>\",\n        \"voice_access\": \"<boolean>\",\n        \"voice_dashboard_access\": \"<boolean>\"\n      },\n      \"created_at\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"team_member_count\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"configuration\": {\n        \"assign_tickets_to_any_group\": \"<boolean>\",\n        \"chat_access\": \"<boolean>\",\n        \"end_user_list_access\": \"<string>\",\n        \"end_user_profile_access\": \"<string>\",\n        \"explore_access\": \"<string>\",\n        \"forum_access\": \"<string>\",\n        \"forum_access_restricted_content\": \"<boolean>\",\n        \"group_access\": \"<boolean>\",\n        \"light_agent\": \"<boolean>\",\n        \"macro_access\": \"<string>\",\n        \"manage_business_rules\": \"<boolean>\",\n        \"manage_contextual_workspaces\": \"<boolean>\",\n        \"manage_dynamic_content\": \"<boolean>\",\n        \"manage_extensions_and_channels\": \"<boolean>\",\n        \"manage_facebook\": \"<boolean>\",\n        \"manage_organization_fields\": \"<boolean>\",\n        \"manage_ticket_fields\": \"<boolean>\",\n        \"manage_ticket_forms\": \"<boolean>\",\n        \"manage_user_fields\": \"<boolean>\",\n        \"moderate_forums\": \"<boolean>\",\n        \"organization_editing\": \"<boolean>\",\n        \"organization_notes_editing\": \"<boolean>\",\n        \"report_access\": \"<string>\",\n        \"side_conversation_create\": \"<boolean>\",\n        \"ticket_access\": \"<string>\",\n        \"ticket_comment_access\": \"<string>\",\n        \"ticket_deletion\": \"<boolean>\",\n        \"ticket_editing\": \"<boolean>\",\n        \"ticket_merge\": \"<boolean>\",\n        \"ticket_tag_editing\": \"<boolean>\",\n        \"twitter_search_access\": \"<boolean>\",\n        \"user_view_access\": \"<string>\",\n        \"view_access\": \"<string>\",\n        \"view_deleted_tickets\": \"<boolean>\",\n        \"voice_access\": \"<boolean>\",\n        \"voice_dashboard_access\": \"<boolean>\"\n      },\n      \"created_at\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"team_member_count\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Custom Role",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/custom_roles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"custom_roles"
											]
										},
										"description": "#### Availability\n\n* Accounts on the Enterprise plan or above\n\n#### Allowed for\n\n* Administrators\n* Agents with the `manage_roles` permission\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_roles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_roles"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"custom_role\": {\n    \"name\": \"<string>\",\n    \"role_type\": \"<integer>\",\n    \"configuration\": {\n      \"assign_tickets_to_any_group\": \"<boolean>\",\n      \"chat_access\": \"<boolean>\",\n      \"end_user_list_access\": \"<string>\",\n      \"end_user_profile_access\": \"<string>\",\n      \"explore_access\": \"<string>\",\n      \"forum_access\": \"<string>\",\n      \"forum_access_restricted_content\": \"<boolean>\",\n      \"group_access\": \"<boolean>\",\n      \"light_agent\": \"<boolean>\",\n      \"macro_access\": \"<string>\",\n      \"manage_business_rules\": \"<boolean>\",\n      \"manage_contextual_workspaces\": \"<boolean>\",\n      \"manage_dynamic_content\": \"<boolean>\",\n      \"manage_extensions_and_channels\": \"<boolean>\",\n      \"manage_facebook\": \"<boolean>\",\n      \"manage_organization_fields\": \"<boolean>\",\n      \"manage_ticket_fields\": \"<boolean>\",\n      \"manage_ticket_forms\": \"<boolean>\",\n      \"manage_user_fields\": \"<boolean>\",\n      \"moderate_forums\": \"<boolean>\",\n      \"organization_editing\": \"<boolean>\",\n      \"organization_notes_editing\": \"<boolean>\",\n      \"report_access\": \"<string>\",\n      \"side_conversation_create\": \"<boolean>\",\n      \"ticket_access\": \"<string>\",\n      \"ticket_comment_access\": \"<string>\",\n      \"ticket_deletion\": \"<boolean>\",\n      \"ticket_editing\": \"<boolean>\",\n      \"ticket_merge\": \"<boolean>\",\n      \"ticket_tag_editing\": \"<boolean>\",\n      \"twitter_search_access\": \"<boolean>\",\n      \"user_view_access\": \"<string>\",\n      \"view_access\": \"<string>\",\n      \"view_deleted_tickets\": \"<boolean>\",\n      \"voice_access\": \"<boolean>\",\n      \"voice_dashboard_access\": \"<boolean>\"\n    },\n    \"created_at\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"team_member_count\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "custom_status",
							"item": [
								{
									"name": "default",
									"item": [
										{
											"name": "Bulk Update Default Custom Ticket Status",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_status/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_status",
														"default"
													]
												},
												"description": "Updates the default values for many custom ticket statuses at once.\n\n#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Updated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ids\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_status/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_status",
																"default"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "custom_statuses",
							"item": [
								{
									"name": "{custom_status_id}",
									"item": [
										{
											"name": "Show Custom Ticket Status",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_statuses/:custom_status_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_statuses",
														":custom_status_id"
													],
													"variable": [
														{
															"key": "custom_status_id",
															"value": "<integer>",
															"description": "(Required) The id of the custom status"
														}
													]
												},
												"description": "Returns the custom ticket status object.\n\n#### Allowed For\n\n* End Users\n"
											},
											"response": [
												{
													"name": "Custom Status",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_statuses/:custom_status_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_statuses",
																":custom_status_id"
															],
															"variable": [
																{
																	"key": "custom_status_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"custom_status\": {\n    \"status_category\": \"solved\",\n    \"agent_label\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"end_user_description\": \"<string>\",\n    \"end_user_label\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"raw_agent_label\": \"<string>\",\n    \"raw_description\": \"<string>\",\n    \"raw_end_user_description\": \"<string>\",\n    \"raw_end_user_label\": \"<string>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Custom Ticket Status",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"custom_status\": {\n    \"active\": \"<boolean>\",\n    \"agent_label\": \"<string>\",\n    \"description\": \"<string>\",\n    \"end_user_description\": \"<string>\",\n    \"end_user_label\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_statuses/:custom_status_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_statuses",
														":custom_status_id"
													],
													"variable": [
														{
															"key": "custom_status_id",
															"value": "<integer>",
															"description": "(Required) The id of the custom status"
														}
													]
												},
												"description": "Takes a `custom_status` object that specifies the properties to update.\n\n#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Updated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"custom_status\": {\n    \"active\": \"<boolean>\",\n    \"agent_label\": \"<string>\",\n    \"description\": \"<string>\",\n    \"end_user_description\": \"<string>\",\n    \"end_user_label\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/custom_statuses/:custom_status_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"custom_statuses",
																":custom_status_id"
															],
															"variable": [
																{
																	"key": "custom_status_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"custom_status\": {\n    \"status_category\": \"solved\",\n    \"agent_label\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"end_user_description\": \"<string>\",\n    \"end_user_label\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"raw_agent_label\": \"<string>\",\n    \"raw_description\": \"<string>\",\n    \"raw_end_user_description\": \"<string>\",\n    \"raw_end_user_label\": \"<string>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Custom Ticket Statuses",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/custom_statuses?status_categories=<string>&active=<boolean>&default=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"custom_statuses"
											],
											"query": [
												{
													"key": "status_categories",
													"value": "<string>",
													"description": "Filter the list of custom ticket statuses by a comma-separated list of status categories"
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "If true, show only active custom ticket statuses. If false, show only inactive custom ticket statuses. If the filter is not used, show all custom ticket statuses"
												},
												{
													"key": "default",
													"value": "<boolean>",
													"description": "If true, show only default custom ticket statuses. If false, show only non-default custom ticket statuses. If the filter is not used, show all custom ticket statuses"
												}
											]
										},
										"description": "Lists all undeleted custom ticket statuses for the account. No pagination is provided.\n\n#### Allowed For\n\n* End Users\n"
									},
									"response": [
										{
											"name": "List custom ticket statuses",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_statuses?status_categories=<string>&active=<boolean>&default=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_statuses"
													],
													"query": [
														{
															"key": "status_categories",
															"value": "<string>",
															"description": "Filter the list of custom ticket statuses by a comma-separated list of status categories"
														},
														{
															"key": "active",
															"value": "<boolean>",
															"description": "If true, show only active custom ticket statuses. If false, show only inactive custom ticket statuses. If the filter is not used, show all custom ticket statuses"
														},
														{
															"key": "default",
															"value": "<boolean>",
															"description": "If true, show only default custom ticket statuses. If false, show only non-default custom ticket statuses. If the filter is not used, show all custom ticket statuses"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"custom_statuses\": [\n    {\n      \"status_category\": \"pending\",\n      \"agent_label\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"end_user_description\": \"<string>\",\n      \"end_user_label\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"raw_agent_label\": \"<string>\",\n      \"raw_description\": \"<string>\",\n      \"raw_end_user_description\": \"<string>\",\n      \"raw_end_user_label\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"status_category\": \"new\",\n      \"agent_label\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"end_user_description\": \"<string>\",\n      \"end_user_label\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"raw_agent_label\": \"<string>\",\n      \"raw_description\": \"<string>\",\n      \"raw_end_user_description\": \"<string>\",\n      \"raw_end_user_label\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Custom Ticket Status",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_status\": {\n    \"active\": \"<boolean>\",\n    \"agent_label\": \"<string>\",\n    \"description\": \"<string>\",\n    \"end_user_description\": \"<string>\",\n    \"end_user_label\": \"<string>\",\n    \"status_category\": \"open\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/custom_statuses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"custom_statuses"
											]
										},
										"description": "Takes a `custom_status` object that specifies the custom ticket status properties to create.\n\n#### Allowed For\n\n* Admins\n"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"custom_status\": {\n    \"active\": \"<boolean>\",\n    \"agent_label\": \"<string>\",\n    \"description\": \"<string>\",\n    \"end_user_description\": \"<string>\",\n    \"end_user_label\": \"<string>\",\n    \"status_category\": \"open\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/custom_statuses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"custom_statuses"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"custom_status\": {\n    \"status_category\": \"solved\",\n    \"agent_label\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"end_user_description\": \"<string>\",\n    \"end_user_label\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"raw_agent_label\": \"<string>\",\n    \"raw_description\": \"<string>\",\n    \"raw_end_user_description\": \"<string>\",\n    \"raw_end_user_label\": \"<string>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "deleted_tickets",
							"item": [
								{
									"name": "{ticket_id}",
									"item": [
										{
											"name": "restore",
											"item": [
												{
													"name": "Restore a previously deleted ticket",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/deleted_tickets/:ticket_id/restore",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"deleted_tickets",
																":ticket_id",
																"restore"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "#### Allowed For\n\n* Agents"
													},
													"response": [
														{
															"name": "Empty response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/deleted_tickets/:ticket_id/restore",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"deleted_tickets",
																		":ticket_id",
																		"restore"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "<string>"
														}
													]
												}
											]
										},
										{
											"name": "Delete ticket permanently",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/deleted_tickets/:ticket_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"deleted_tickets",
														":ticket_id"
													],
													"variable": [
														{
															"key": "ticket_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket"
														}
													]
												},
												"description": "Permanently deletes a soft-deleted ticket. See [Soft delete](https://support.zendesk.com/hc/en-us/articles/4408834005530#topic_zrm_wbj_1db)\nin the Zendesk GDPR docs. To soft delete a ticket, use the [Delete Ticket](#delete-ticket) endpoint.\n\nThis endpoint enqueues a ticket deletion job and returns a payload with the jobs status.\n\nIf the job succeeds, the ticket is permanently deleted. This operation can't be undone.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work.\nUse the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion.\n\n#### Allowed For\n\n* Agents"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/deleted_tickets/:ticket_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"deleted_tickets",
																":ticket_id"
															],
															"variable": [
																{
																	"key": "ticket_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Delete multiple tickets permanently",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/deleted_tickets/destroy_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"deleted_tickets",
														"destroy_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) Comma-separated list of ticket ids"
														}
													]
												},
												"description": "Permanently deletes up to 100 soft-deleted tickets. See [Soft delete](https://support.zendesk.com/hc/en-us/articles/4408834005530#topic_zrm_wbj_1db)\nin the Zendesk GDPR docs. To soft delete tickets, use the [Bulk Delete Tickets](#bulk-delete-tickets) endpoint.\n\nThis endpoint accepts a comma-separated list of up to 100 ticket ids. It enqueues\na ticket deletion job and returns a payload with the jobs status.\n\nIf one ticket fails to be deleted, the endpoint still attempts to delete the others. If the job succeeds,\nthe tickets that were successfully deleted are permanently deleted. This operation can't be undone.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Agents"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/deleted_tickets/destroy_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"deleted_tickets",
																"destroy_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) Comma-separated list of ticket ids"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "restore_many",
									"item": [
										{
											"name": "Restore previously deleted tickets in bulk",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/deleted_tickets/restore_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"deleted_tickets",
														"restore_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) Comma-separated list of ticket ids"
														}
													]
												},
												"description": "#### Allowed For\n\n* Agents"
											},
											"response": [
												{
													"name": "Empty response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/deleted_tickets/restore_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"deleted_tickets",
																"restore_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) Comma-separated list of ticket ids"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "<string>"
												}
											]
										}
									]
								},
								{
									"name": "List deleted tickets",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/deleted_tickets?sort_by=subject&sort_order=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"deleted_tickets"
											],
											"query": [
												{
													"key": "sort_by",
													"value": "subject",
													"description": "Sort by"
												},
												{
													"key": "sort_order",
													"value": "desc",
													"description": "Sort order. Defaults to \"asc\""
												}
											]
										},
										"description": "Returns a maximum of 100 deleted tickets per page. See [Pagination](/api-reference/introduction/pagination/).\n\nThe results includes all deleted (and not yet archived) tickets that\nhave not yet been [scrubbed](https://support.zendesk.com/hc/en-us/articles/4408845703194#topic_fv5_w51_sdb) in the past 30 days. Archived tickets are\nnot included in the results. See [About archived tickets](https://support.zendesk.com/hc/en-us/articles/203657756)\nin the Support Help Center.\n\nThe tickets are ordered chronologically by created date, from oldest to newest.\nThe first ticket listed may not be the oldest ticket in your\naccount due to [ticket archiving](https://support.zendesk.com/hc/en-us/articles/203657756).\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n\n#### Rate Limit\n\nYou can make 10 requests every 1 minute using this endpoint.\nWhen making requests beyond page 100, you can make 5 requests every 1 minute.\nThe rate limiting mechanism behaves as described in\n[Monitoring your request activity](/api-reference/ticketing/account-configuration/usage_limits/#monitoring-your-request-activity) in the API introduction."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/deleted_tickets?sort_by=subject&sort_order=desc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"deleted_tickets"
													],
													"query": [
														{
															"key": "sort_by",
															"value": "subject",
															"description": "Sort by"
														},
														{
															"key": "sort_order",
															"value": "desc",
															"description": "Sort order. Defaults to \"asc\""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted_tickets\": [\n    {\n      \"actor\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"deleted_at\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"previous_state\": \"<string>\",\n      \"subject\": \"<string>\"\n    },\n    {\n      \"actor\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"deleted_at\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"previous_state\": \"<string>\",\n      \"subject\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "deleted_users",
							"item": [
								{
									"name": "{deleted_user_id}",
									"item": [
										{
											"name": "Show Deleted User",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/deleted_users/:deleted_user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"deleted_users",
														":deleted_user_id"
													],
													"variable": [
														{
															"key": "deleted_user_id",
															"value": "<integer>",
															"description": "(Required) The ID of the deleted user"
														}
													]
												},
												"description": "Returns users that have been deleted but not permanently yet. See [Permanently Delete User](#permanently-delete-user).\n\n#### Allowed For:\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/deleted_users/:deleted_user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"deleted_users",
																":deleted_user_id"
															],
															"variable": [
																{
																	"key": "deleted_user_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deleted_user\": {\n    \"id\": \"<integer>\",\n    \"url\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<null>\",\n    \"created_at\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"shared_phone_number\": \"<string>\",\n    \"photo\": {},\n    \"locale_id\": \"<integer>\",\n    \"locale\": \"<string>\",\n    \"organization_id\": \"<null>\",\n    \"role\": \"<string>\",\n    \"active\": \"<boolean>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Permanently Delete User",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/deleted_users/:deleted_user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"deleted_users",
														":deleted_user_id"
													],
													"variable": [
														{
															"key": "deleted_user_id",
															"value": "<integer>",
															"description": "(Required) The ID of the deleted user"
														}
													]
												},
												"description": "Before permanently deleting a user, you must delete the user first. See [Delete User](/api-reference/ticketing/users/users/#delete-user).\n\nWARNING: Permanently deleting a user deletes all of their information. This information is not recoverable.\n\n#### Permanent user deletion rate limit\n\nYou can permanently delete 700 users every 10 minutes.\nThe rate limiting mechanism behaves as described in\n[Rates Limits](/api-reference/introduction/rate-limits/#monitoring-your-request-activity) in the API introduction.\nZendesk recommends that you obey the Retry-After header values.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage end users or team members\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/deleted_users/:deleted_user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"deleted_users",
																":deleted_user_id"
															],
															"variable": [
																{
																	"key": "deleted_user_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deleted_user\": {\n    \"id\": \"<integer>\",\n    \"url\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<null>\",\n    \"created_at\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"shared_phone_number\": \"<string>\",\n    \"photo\": {},\n    \"locale_id\": \"<integer>\",\n    \"locale\": \"<string>\",\n    \"organization_id\": \"<null>\",\n    \"role\": \"<string>\",\n    \"active\": \"<boolean>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "count",
									"item": [
										{
											"name": "Count Deleted Users",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/deleted_users/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"deleted_users",
														"count"
													]
												},
												"description": "Returns an approximate count of deleted users, including permanently deleted users. If the count exceeds 100,000, it is updated every 24 hours.\n\nThe response includes a `refreshed_at` property in a `count` object that contains a timestamp indicating when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/deleted_users/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"deleted_users",
																"count"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": {\n    \"refreshed_at\": \"<string>\",\n    \"value\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Deleted Users",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/deleted_users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"deleted_users"
											]
										},
										"description": "Returns deleted users, including permanently deleted users.\n\nIf the results contains permanently deleted users, the users' properties\nthat normally contain personal data, such as `email` and `phone`,\nare null. The `name` property is \"Permanently Deleted User\".\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/deleted_users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"deleted_users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deleted_users\": [\n    {\n      \"id\": \"<integer>\",\n      \"url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<null>\",\n      \"created_at\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"shared_phone_number\": \"<string>\",\n      \"photo\": {},\n      \"locale_id\": \"<integer>\",\n      \"locale\": \"<string>\",\n      \"organization_id\": \"<null>\",\n      \"role\": \"<string>\",\n      \"active\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"email\": \"<null>\",\n      \"created_at\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"shared_phone_number\": \"<string>\",\n      \"photo\": {},\n      \"locale_id\": \"<integer>\",\n      \"locale\": \"<string>\",\n      \"organization_id\": \"<null>\",\n      \"role\": \"<string>\",\n      \"active\": \"<boolean>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "dynamic_content",
							"item": [
								{
									"name": "items",
									"item": [
										{
											"name": "{dynamic_content_item_id}",
											"item": [
												{
													"name": "variants",
													"item": [
														{
															"name": "{dynammic_content_variant_id}",
															"item": [
																{
																	"name": "Show Variant",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants/:dynammic_content_variant_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"dynamic_content",
																				"items",
																				":dynamic_content_item_id",
																				"variants",
																				":dynammic_content_variant_id"
																			],
																			"variable": [
																				{
																					"key": "dynamic_content_item_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the dynamic content item"
																				},
																				{
																					"key": "dynammic_content_variant_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the variant"
																				}
																			]
																		},
																		"description": "#### Allowed For\n\n* Admins, Agents\n"
																	},
																	"response": [
																		{
																			"name": "Success response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants/:dynammic_content_variant_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"dynamic_content",
																						"items",
																						":dynamic_content_item_id",
																						"variants",
																						":dynammic_content_variant_id"
																					],
																					"variable": [
																						{
																							"key": "dynamic_content_item_id"
																						},
																						{
																							"key": "dynammic_content_variant_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"variant\": {\n    \"content\": \"<string>\",\n    \"locale_id\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"outdated\": \"<boolean>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
																		}
																	]
																},
																{
																	"name": "Update Variant",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants/:dynammic_content_variant_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"dynamic_content",
																				"items",
																				":dynamic_content_item_id",
																				"variants",
																				":dynammic_content_variant_id"
																			],
																			"variable": [
																				{
																					"key": "dynamic_content_item_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the dynamic content item"
																				},
																				{
																					"key": "dynammic_content_variant_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the variant"
																				}
																			]
																		},
																		"description": "Updates the specified variant. You don't need to include all the properties. If you just want to update content, for example, then include just that.\n\nYou can't switch the active state of the default variant of an item. Similarly, you can't switch the default to false if the variant is the default. You must make another variant default instead.\n\n#### Allowed For\n\n* Admins, Agents\n"
																	},
																	"response": [
																		{
																			"name": "Success response",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants/:dynammic_content_variant_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"dynamic_content",
																						"items",
																						":dynamic_content_item_id",
																						"variants",
																						":dynammic_content_variant_id"
																					],
																					"variable": [
																						{
																							"key": "dynamic_content_item_id"
																						},
																						{
																							"key": "dynammic_content_variant_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"variant\": {\n    \"content\": \"<string>\",\n    \"locale_id\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"outdated\": \"<boolean>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
																		}
																	]
																},
																{
																	"name": "Delete Variant",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants/:dynammic_content_variant_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"dynamic_content",
																				"items",
																				":dynamic_content_item_id",
																				"variants",
																				":dynammic_content_variant_id"
																			],
																			"variable": [
																				{
																					"key": "dynamic_content_item_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the dynamic content item"
																				},
																				{
																					"key": "dynammic_content_variant_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the variant"
																				}
																			]
																		},
																		"description": "#### Allowed For\n\n* Admins, Agents\n"
																	},
																	"response": [
																		{
																			"name": "No Content response",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants/:dynammic_content_variant_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"dynamic_content",
																						"items",
																						":dynamic_content_item_id",
																						"variants",
																						":dynammic_content_variant_id"
																					],
																					"variable": [
																						{
																							"key": "dynamic_content_item_id"
																						},
																						{
																							"key": "dynammic_content_variant_id"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": null
																		}
																	]
																}
															]
														},
														{
															"name": "create_many",
															"item": [
																{
																	"name": "Create Many Variants",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants/create_many",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"dynamic_content",
																				"items",
																				":dynamic_content_item_id",
																				"variants",
																				"create_many"
																			],
																			"variable": [
																				{
																					"key": "dynamic_content_item_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the dynamic content item"
																				}
																			]
																		},
																		"description": "#### Allowed For\n\n* Admins, Agents\n"
																	},
																	"response": [
																		{
																			"name": "Created response",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants/create_many",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"dynamic_content",
																						"items",
																						":dynamic_content_item_id",
																						"variants",
																						"create_many"
																					],
																					"variable": [
																						{
																							"key": "dynamic_content_item_id"
																						}
																					]
																				}
																			},
																			"status": "Created",
																			"code": 201,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"variants\": [\n    {\n      \"content\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"outdated\": \"<boolean>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"content\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"outdated\": \"<boolean>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "update_many",
															"item": [
																{
																	"name": "Update Many Variants",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants/update_many",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"dynamic_content",
																				"items",
																				":dynamic_content_item_id",
																				"variants",
																				"update_many"
																			],
																			"variable": [
																				{
																					"key": "dynamic_content_item_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the dynamic content item"
																				}
																			]
																		},
																		"description": "Updates one or more variants. See [Update Variant](/api-reference/ticketing/ticket-management/dynamic_content_item_variants/#update-variant).\n\nYou must specify the variants by id in the body. To get the variant ids, see [List Variants](/api-reference/ticketing/ticket-management/dynamic_content_item_variants/#list-variants).\n\n#### Allowed For\n\n* Admins, Agents\n"
																	},
																	"response": [
																		{
																			"name": "Success response",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants/update_many",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"dynamic_content",
																						"items",
																						":dynamic_content_item_id",
																						"variants",
																						"update_many"
																					],
																					"variable": [
																						{
																							"key": "dynamic_content_item_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"variants\": [\n    {\n      \"content\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"outdated\": \"<boolean>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"content\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"outdated\": \"<boolean>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "List Variants",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"dynamic_content",
																		"items",
																		":dynamic_content_item_id",
																		"variants"
																	],
																	"variable": [
																		{
																			"key": "dynamic_content_item_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the dynamic content item"
																		}
																	]
																},
																"description": "Returns all the variants of the specified dynamic content item.\n\n#### Allowed For\n\n* Admins\n* Agents who have permission to manage dynamic content\n\n#### Pagination\n\n* Cursor pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"dynamic_content",
																				"items",
																				":dynamic_content_item_id",
																				"variants"
																			],
																			"variable": [
																				{
																					"key": "dynamic_content_item_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"variants\": [\n    {\n      \"content\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"outdated\": \"<boolean>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"content\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"outdated\": \"<boolean>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Create Variant",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"dynamic_content",
																		"items",
																		":dynamic_content_item_id",
																		"variants"
																	],
																	"variable": [
																		{
																			"key": "dynamic_content_item_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the dynamic content item"
																		}
																	]
																},
																"description": "You can only create one variant for each locale id. If a locale variant already exists, the request is rejected.\n\n#### Allowed For\n\n* Admins, Agents\n"
															},
															"response": [
																{
																	"name": "Created response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id/variants",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"dynamic_content",
																				"items",
																				":dynamic_content_item_id",
																				"variants"
																			],
																			"variable": [
																				{
																					"key": "dynamic_content_item_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"variant\": {\n    \"content\": \"<string>\",\n    \"locale_id\": \"<integer>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"outdated\": \"<boolean>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "Show Item",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"dynamic_content",
																"items",
																":dynamic_content_item_id"
															],
															"variable": [
																{
																	"key": "dynamic_content_item_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the dynamic content item"
																}
															]
														},
														"description": "#### Allowed For\n\n* Admins, Agents\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"dynamic_content",
																		"items",
																		":dynamic_content_item_id"
																	],
																	"variable": [
																		{
																			"key": "dynamic_content_item_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"item\": {\n    \"name\": \"<string>\",\n    \"default_locale_id\": \"<integer>\",\n    \"variants\": [\n      {\n        \"content\": \"<string>\",\n        \"locale_id\": \"<integer>\",\n        \"active\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"id\": \"<integer>\",\n        \"outdated\": \"<boolean>\",\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"content\": \"<string>\",\n        \"locale_id\": \"<integer>\",\n        \"active\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"id\": \"<integer>\",\n        \"outdated\": \"<boolean>\",\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"outdated\": \"<boolean>\",\n    \"placeholder\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update Item",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"dynamic_content",
																"items",
																":dynamic_content_item_id"
															],
															"variable": [
																{
																	"key": "dynamic_content_item_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the dynamic content item"
																}
															]
														},
														"description": "The only attribute you can change is the name.\n\nTo add a variant to the item, or to update or delete the variants of the item, use the [Item Variants API](/api-reference/ticketing/ticket-management/dynamic_content_item_variants/#update-many-variants).\n\n#### Allowed For\n\n* Admins, Agents\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"dynamic_content",
																		"items",
																		":dynamic_content_item_id"
																	],
																	"variable": [
																		{
																			"key": "dynamic_content_item_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"item\": {\n    \"name\": \"<string>\",\n    \"default_locale_id\": \"<integer>\",\n    \"variants\": [\n      {\n        \"content\": \"<string>\",\n        \"locale_id\": \"<integer>\",\n        \"active\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"id\": \"<integer>\",\n        \"outdated\": \"<boolean>\",\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"content\": \"<string>\",\n        \"locale_id\": \"<integer>\",\n        \"active\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"id\": \"<integer>\",\n        \"outdated\": \"<boolean>\",\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"outdated\": \"<boolean>\",\n    \"placeholder\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Delete Item",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"dynamic_content",
																"items",
																":dynamic_content_item_id"
															],
															"variable": [
																{
																	"key": "dynamic_content_item_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the dynamic content item"
																}
															]
														},
														"description": "#### Allowed For\n\n* Admins, Agents\n"
													},
													"response": [
														{
															"name": "No Content response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/dynamic_content/items/:dynamic_content_item_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"dynamic_content",
																		"items",
																		":dynamic_content_item_id"
																	],
																	"variable": [
																		{
																			"key": "dynamic_content_item_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														}
													]
												}
											]
										},
										{
											"name": "show_many",
											"item": [
												{
													"name": "Show Many Items",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/dynamic_content/items/show_many?identifiers=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"dynamic_content",
																"items",
																"show_many"
															],
															"query": [
																{
																	"key": "identifiers",
																	"value": "<string>",
																	"description": "Identifiers for the dynamic contents"
																}
															]
														},
														"description": "#### Stability\n\n* Development\n\n#### Allowed For\n\n* Admins, Agents\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/dynamic_content/items/show_many?identifiers=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"dynamic_content",
																		"items",
																		"show_many"
																	],
																	"query": [
																		{
																			"key": "identifiers",
																			"value": "<string>",
																			"description": "Identifiers for the dynamic contents"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"name\": \"<string>\",\n      \"default_locale_id\": \"<integer>\",\n      \"variants\": [\n        {\n          \"content\": \"<string>\",\n          \"locale_id\": \"<integer>\",\n          \"active\": \"<boolean>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"outdated\": \"<boolean>\",\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"content\": \"<string>\",\n          \"locale_id\": \"<integer>\",\n          \"active\": \"<boolean>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"outdated\": \"<boolean>\",\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"outdated\": \"<boolean>\",\n      \"placeholder\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"default_locale_id\": \"<integer>\",\n      \"variants\": [\n        {\n          \"content\": \"<string>\",\n          \"locale_id\": \"<integer>\",\n          \"active\": \"<boolean>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"outdated\": \"<boolean>\",\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"content\": \"<string>\",\n          \"locale_id\": \"<integer>\",\n          \"active\": \"<boolean>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"outdated\": \"<boolean>\",\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"outdated\": \"<boolean>\",\n      \"placeholder\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "List Items",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic_content/items",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic_content",
														"items"
													]
												},
												"description": "Returns a list of all dynamic content items for your account if accessed as an admin or agents who have permission to manage dynamic content.\n\n#### Allowed For\n\n* Admins, Agents\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/dynamic_content/items",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"dynamic_content",
																"items"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"name\": \"<string>\",\n      \"default_locale_id\": \"<integer>\",\n      \"variants\": [\n        {\n          \"content\": \"<string>\",\n          \"locale_id\": \"<integer>\",\n          \"active\": \"<boolean>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"outdated\": \"<boolean>\",\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"content\": \"<string>\",\n          \"locale_id\": \"<integer>\",\n          \"active\": \"<boolean>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"outdated\": \"<boolean>\",\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"outdated\": \"<boolean>\",\n      \"placeholder\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"default_locale_id\": \"<integer>\",\n      \"variants\": [\n        {\n          \"content\": \"<string>\",\n          \"locale_id\": \"<integer>\",\n          \"active\": \"<boolean>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"outdated\": \"<boolean>\",\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"content\": \"<string>\",\n          \"locale_id\": \"<integer>\",\n          \"active\": \"<boolean>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"id\": \"<integer>\",\n          \"outdated\": \"<boolean>\",\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"outdated\": \"<boolean>\",\n      \"placeholder\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Create Item",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/dynamic_content/items",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"dynamic_content",
														"items"
													]
												},
												"description": "Create a new content item, with one or more variants in the item's `variants` array. See [Specifying item variants](#specifying-item-variants).\n\nThe `default_locale_id` and variant `locale_id` values must be one of the locales the account has active. You can get the list with the [List Locales](/api-reference/ticketing/account-configuration/locales/#list-locales) endpoint.\n\n#### Allowed For\n\n* Admins, Agents\n"
											},
											"response": [
												{
													"name": "Created response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/dynamic_content/items",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"dynamic_content",
																"items"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"item\": {\n    \"name\": \"<string>\",\n    \"default_locale_id\": \"<integer>\",\n    \"variants\": [\n      {\n        \"content\": \"<string>\",\n        \"locale_id\": \"<integer>\",\n        \"active\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"id\": \"<integer>\",\n        \"outdated\": \"<boolean>\",\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"content\": \"<string>\",\n        \"locale_id\": \"<integer>\",\n        \"active\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"id\": \"<integer>\",\n        \"outdated\": \"<boolean>\",\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"outdated\": \"<boolean>\",\n    \"placeholder\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "group_memberships",
							"item": [
								{
									"name": "{group_membership_id}",
									"item": [
										{
											"name": "Show Membership",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/group_memberships/:group_membership_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"group_memberships",
														":group_membership_id"
													],
													"variable": [
														{
															"key": "group_membership_id",
															"value": "<integer>",
															"description": "(Required) The ID of the group membership"
														},
														{
															"key": "user_id",
															"value": "<integer>",
															"description": "(Required) The id of the user"
														}
													]
												},
												"description": "The 'id' is the group membership id, not a group id.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/group_memberships/:group_membership_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"group_memberships",
																":group_membership_id"
															],
															"variable": [
																{
																	"key": "group_membership_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"group_membership\": {\n    \"user_id\": \"<integer>\",\n    \"group_id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Membership",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/group_memberships/:group_membership_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"group_memberships",
														":group_membership_id"
													],
													"variable": [
														{
															"key": "group_membership_id",
															"value": "<integer>",
															"description": "(Required) The ID of the group membership"
														},
														{
															"key": "user_id",
															"value": "<integer>",
															"description": "(Required) The id of the user"
														}
													]
												},
												"description": "Immediately removes a user from a group and schedules a job to unassign all working tickets that are assigned to the given user and group combination.\n\n#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage group memberships (Enterprise only)\n"
											},
											"response": [
												{
													"name": "No content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/group_memberships/:group_membership_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"group_memberships",
																":group_membership_id"
															],
															"variable": [
																{
																	"key": "group_membership_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "assignable",
									"item": [
										{
											"name": "List Assignable Memberships",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/group_memberships/assignable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"group_memberships",
														"assignable"
													]
												},
												"description": "Returns a maximum of 100 group memberships per page.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For:\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/group_memberships/assignable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"group_memberships",
																"assignable"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"group_memberships\": [\n    {\n      \"user_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"user_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "create_many",
									"item": [
										{
											"name": "Bulk Create Memberships",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/group_memberships/create_many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"group_memberships",
														"create_many"
													]
												},
												"description": "Assigns up to 100 agents to given groups.\n\n#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage group memberships (Enterprise only)\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion.\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/group_memberships/create_many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"group_memberships",
																"create_many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Bulk Delete Memberships",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/group_memberships/destroy_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"group_memberships",
														"destroy_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "Id of the group memberships to delete. Comma separated"
														}
													]
												},
												"description": "Immediately removes users from groups and schedules a job to unassign all working tickets that are assigned to the given user and group combinations.\n\n#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage group memberships (Enterprise only)\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/group_memberships/destroy_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"group_memberships",
																"destroy_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "Id of the group memberships to delete. Comma separated"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Memberships",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/group_memberships",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"group_memberships"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "(Required) The id of the user"
												},
												{
													"key": "group_id",
													"value": "<integer>",
													"description": "(Required) The ID of the group"
												}
											]
										},
										"description": "#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For:\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/group_memberships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"group_memberships"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"group_memberships\": [\n    {\n      \"user_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"user_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Membership",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/group_memberships",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"group_memberships"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "(Required) The id of the user"
												},
												{
													"key": "group_id",
													"value": "<integer>",
													"description": "(Required) The ID of the group"
												}
											]
										},
										"description": "Assigns an agent to a given group.\n\n#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage group memberships (Enterprise only)\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/group_memberships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"group_memberships"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"group_membership\": {\n    \"user_id\": \"<integer>\",\n    \"group_id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "group_slas",
							"item": [
								{
									"name": "policies",
									"item": [
										{
											"name": "{group_sla_policy_id}",
											"item": [
												{
													"name": "Show Group SLA Policy",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/group_slas/policies/:group_sla_policy_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"group_slas",
																"policies",
																":group_sla_policy_id"
															],
															"variable": [
																{
																	"key": "group_sla_policy_id",
																	"value": "<integer>",
																	"description": "(Required) The id of the Group SLA policy"
																}
															]
														},
														"description": "#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/group_slas/policies/:group_sla_policy_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"group_slas",
																		"policies",
																		":group_sla_policy_id"
																	],
																	"variable": [
																		{
																			"key": "group_sla_policy_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"group_sla_policy\": {\n    \"title\": \"<string>\",\n    \"filter\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<array>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<array>\"\n        }\n      ]\n    },\n    \"created_at\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"policy_metrics\": [\n      {\n        \"business_hours\": \"<boolean>\",\n        \"metric\": \"<string>\",\n        \"priority\": \"<string>\",\n        \"target\": \"<integer>\"\n      },\n      {\n        \"business_hours\": \"<boolean>\",\n        \"metric\": \"<string>\",\n        \"priority\": \"<string>\",\n        \"target\": \"<integer>\"\n      }\n    ],\n    \"position\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update Group SLA Policy",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/group_slas/policies/:group_sla_policy_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"group_slas",
																"policies",
																":group_sla_policy_id"
															],
															"variable": [
																{
																	"key": "group_sla_policy_id",
																	"value": "<integer>",
																	"description": "(Required) The id of the Group SLA policy"
																}
															]
														},
														"description": "Updates the specified policy.\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/group_slas/policies/:group_sla_policy_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"group_slas",
																		"policies",
																		":group_sla_policy_id"
																	],
																	"variable": [
																		{
																			"key": "group_sla_policy_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"group_sla_policy\": {\n    \"title\": \"<string>\",\n    \"filter\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<array>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<array>\"\n        }\n      ]\n    },\n    \"created_at\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"policy_metrics\": [\n      {\n        \"business_hours\": \"<boolean>\",\n        \"metric\": \"<string>\",\n        \"priority\": \"<string>\",\n        \"target\": \"<integer>\"\n      },\n      {\n        \"business_hours\": \"<boolean>\",\n        \"metric\": \"<string>\",\n        \"priority\": \"<string>\",\n        \"target\": \"<integer>\"\n      }\n    ],\n    \"position\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Delete Group SLA Policy",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/group_slas/policies/:group_sla_policy_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"group_slas",
																"policies",
																":group_sla_policy_id"
															],
															"variable": [
																{
																	"key": "group_sla_policy_id",
																	"value": "<integer>",
																	"description": "(Required) The id of the Group SLA policy"
																}
															]
														},
														"description": "#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "No Content response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/group_slas/policies/:group_sla_policy_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"group_slas",
																		"policies",
																		":group_sla_policy_id"
																	],
																	"variable": [
																		{
																			"key": "group_sla_policy_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														}
													]
												}
											]
										},
										{
											"name": "definitions",
											"item": [
												{
													"name": "Retrieve Supported Filter Definition Items",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/group_slas/policies/definitions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"group_slas",
																"policies",
																"definitions"
															]
														},
														"description": "#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/group_slas/policies/definitions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"group_slas",
																		"policies",
																		"definitions"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"definitions\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"all\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"group\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"operators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  },\n                  \"value\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  }\n                }\n              }\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"values\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"list\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"title\": {\n                        \"type\": \"string\",\n                        \"default\": \"<string>\"\n                      },\n                      \"value\": {\n                        \"type\": \"integer\",\n                        \"nullable\": true,\n                        \"default\": \"<integer>\"\n                      }\n                    }\n                  }\n                },\n                \"type\": {\n                  \"type\": \"string\",\n                  \"default\": \"<string>\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "reorder",
											"item": [
												{
													"name": "Reorder Group SLA Policies",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/group_slas/policies/reorder?group_sla_policy_ids=<string>&group_sla_policy_ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"group_slas",
																"policies",
																"reorder"
															],
															"query": [
																{
																	"key": "group_sla_policy_ids",
																	"value": "<string>",
																	"description": "The ids of the Group SLA policies to reorder"
																},
																{
																	"key": "group_sla_policy_ids",
																	"value": "<string>",
																	"description": "The ids of the Group SLA policies to reorder"
																}
															]
														},
														"description": "#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/group_slas/policies/reorder?group_sla_policy_ids=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"group_slas",
																		"policies",
																		"reorder"
																	],
																	"query": [
																		{
																			"key": "group_sla_policy_ids",
																			"value": "<string>",
																			"description": "The ids of the Group SLA policies to reorder"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "<string>"
														}
													]
												}
											]
										},
										{
											"name": "List Group SLA Policies",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/group_slas/policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"group_slas",
														"policies"
													]
												},
												"description": "#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/group_slas/policies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"group_slas",
																"policies"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"group_sla_policies\": [\n    {\n      \"title\": \"<string>\",\n      \"filter\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<array>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<array>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"policy_metrics\": [\n        {\n          \"business_hours\": \"<boolean>\",\n          \"metric\": \"<string>\",\n          \"priority\": \"<string>\",\n          \"target\": \"<integer>\"\n        },\n        {\n          \"business_hours\": \"<boolean>\",\n          \"metric\": \"<string>\",\n          \"priority\": \"<string>\",\n          \"target\": \"<integer>\"\n        }\n      ],\n      \"position\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"filter\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<array>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<array>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"id\": \"<string>\",\n      \"policy_metrics\": [\n        {\n          \"business_hours\": \"<boolean>\",\n          \"metric\": \"<string>\",\n          \"priority\": \"<string>\",\n          \"target\": \"<integer>\"\n        },\n        {\n          \"business_hours\": \"<boolean>\",\n          \"metric\": \"<string>\",\n          \"priority\": \"<string>\",\n          \"target\": \"<integer>\"\n        }\n      ],\n      \"position\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Create Group SLA Policy",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/group_slas/policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"group_slas",
														"policies"
													]
												},
												"description": "#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Created response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/group_slas/policies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"group_slas",
																"policies"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"group_sla_policy\": {\n    \"title\": \"<string>\",\n    \"filter\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<array>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<array>\"\n        }\n      ]\n    },\n    \"created_at\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<string>\",\n    \"policy_metrics\": [\n      {\n        \"business_hours\": \"<boolean>\",\n        \"metric\": \"<string>\",\n        \"priority\": \"<string>\",\n        \"target\": \"<integer>\"\n      },\n      {\n        \"business_hours\": \"<boolean>\",\n        \"metric\": \"<string>\",\n        \"priority\": \"<string>\",\n        \"target\": \"<integer>\"\n      }\n    ],\n    \"position\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "groups",
							"item": [
								{
									"name": "{group_id}",
									"item": [
										{
											"name": "Show Group",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/groups/:group_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"groups",
														":group_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<integer>",
															"description": "(Required) The ID of the group"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/groups/:group_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"groups",
																":group_id"
															],
															"variable": [
																{
																	"key": "group_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"group\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"deleted\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"is_public\": \"<boolean>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Group",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/groups/:group_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"groups",
														":group_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<integer>",
															"description": "(Required) The ID of the group"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/groups/:group_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"groups",
																":group_id"
															],
															"variable": [
																{
																	"key": "group_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"group\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"deleted\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"is_public\": \"<boolean>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Group",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/groups/:group_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"groups",
														":group_id"
													],
													"variable": [
														{
															"key": "group_id",
															"value": "<integer>",
															"description": "(Required) The ID of the group"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage groups (Enterprise only)\n"
											},
											"response": [
												{
													"name": "No content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/groups/:group_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"groups",
																":group_id"
															],
															"variable": [
																{
																	"key": "group_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "assignable",
									"item": [
										{
											"name": "List Assignable Groups",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/groups/assignable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"groups",
														"assignable"
													]
												},
												"description": "#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Admins\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/groups/assignable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"groups",
																"assignable"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"groups\": [\n    {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"deleted\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"deleted\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "count",
									"item": [
										{
											"name": "Count Groups",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/groups/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"groups",
														"count"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>",
															"description": "(Required) The id of the user"
														}
													]
												},
												"description": "Returns an approximate count of groups. If the count exceeds 100,000, it is updated every 24 hours.\n\nThe `refreshed_at` property of the `count` object is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `refreshed_at` may occasionally be null. This indicates that the count is being updated in the background, and the `value` property of the `count` object is limited to 100,000 until the update is complete.\n\n#### Allowed For\n\n* Admins\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/groups/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"groups",
																"count"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": {\n    \"refreshed_at\": \"<dateTime>\",\n    \"value\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Groups",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"groups"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "(Required) The id of the user"
												},
												{
													"key": "exclude_deleted",
													"value": "<boolean>",
													"description": "Whether to exclude deleted entities"
												}
											]
										},
										"description": "#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Admins\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"groups"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"groups\": [\n    {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"deleted\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"deleted\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Group",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"groups"
											]
										},
										"description": "#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage groups (Enterprise only)\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"groups"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"group\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"deleted\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"is_public\": \"<boolean>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "imports",
							"item": [
								{
									"name": "tickets",
									"item": [
										{
											"name": "create_many",
											"item": [
												{
													"name": "Ticket Bulk Import",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tickets\": [\n    {\n      \"assignee_id\": \"<integer>\",\n      \"comments\": [\n        {\n          \"value\": \"<string>\",\n          \"attachments\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            }\n          ],\n          \"audit_id\": \"<integer>\",\n          \"author_id\": \"<integer>\",\n          \"body\": \"<string>\",\n          \"created_at\": \"<dateTime>\",\n          \"html_body\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"metadata\": {\n            \"deserunt0\": -15746432\n          },\n          \"plain_body\": \"<string>\",\n          \"public\": \"<boolean>\",\n          \"type\": \"<string>\",\n          \"uploads\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"via\": {\n            \"channel\": \"<string>\",\n            \"source\": {\n              \"eu209\": -28342753.66487193,\n              \"animde\": \"D\"\n            }\n          }\n        },\n        {\n          \"value\": \"<string>\",\n          \"attachments\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            }\n          ],\n          \"audit_id\": \"<integer>\",\n          \"author_id\": \"<integer>\",\n          \"body\": \"<string>\",\n          \"created_at\": \"<dateTime>\",\n          \"html_body\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"metadata\": {\n            \"laboris_15\": \"adipisicing minim in quis\",\n            \"cupidatat79d\": 20721679,\n            \"ut_59e\": 45609722,\n            \"sed_23\": 1885806.3466126025\n          },\n          \"plain_body\": \"<string>\",\n          \"public\": \"<boolean>\",\n          \"type\": \"<string>\",\n          \"uploads\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"via\": {\n            \"channel\": \"<string>\",\n            \"source\": {\n              \"ea_841\": 97734305.17236122,\n              \"in_d3c\": \"esse nostrud deserunt tempor culpa\"\n            }\n          }\n        }\n      ],\n      \"description\": \"<string>\",\n      \"requester_id\": \"<integer>\",\n      \"subject\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"assignee_id\": \"<integer>\",\n      \"comments\": [\n        {\n          \"value\": \"<string>\",\n          \"attachments\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            }\n          ],\n          \"audit_id\": \"<integer>\",\n          \"author_id\": \"<integer>\",\n          \"body\": \"<string>\",\n          \"created_at\": \"<dateTime>\",\n          \"html_body\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"metadata\": {\n            \"ex_4\": true,\n            \"ipsum_9\": \"nulla Ut\",\n            \"ea4\": -1823937\n          },\n          \"plain_body\": \"<string>\",\n          \"public\": \"<boolean>\",\n          \"type\": \"<string>\",\n          \"uploads\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"via\": {\n            \"channel\": \"<string>\",\n            \"source\": {\n              \"enim6a5\": \"nisi elit\",\n              \"sint19c\": \"consectetur consequat in\",\n              \"deseruntb44\": true,\n              \"ipsume\": 49873874.53445846\n            }\n          }\n        },\n        {\n          \"value\": \"<string>\",\n          \"attachments\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            }\n          ],\n          \"audit_id\": \"<integer>\",\n          \"author_id\": \"<integer>\",\n          \"body\": \"<string>\",\n          \"created_at\": \"<dateTime>\",\n          \"html_body\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"metadata\": {\n            \"pariatur_83\": \"occaecat non proident sit\",\n            \"consequat_e\": -43360339.16346,\n            \"Ut_b86\": 3679925.1367082894\n          },\n          \"plain_body\": \"<string>\",\n          \"public\": \"<boolean>\",\n          \"type\": \"<string>\",\n          \"uploads\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"via\": {\n            \"channel\": \"<string>\",\n            \"source\": {\n              \"magna_a\": \"sunt\"\n            }\n          }\n        }\n      ],\n      \"description\": \"<string>\",\n      \"requester_id\": \"<integer>\",\n      \"subject\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/imports/tickets/create_many?archive_immediately=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"imports",
																"tickets",
																"create_many"
															],
															"query": [
																{
																	"key": "archive_immediately",
																	"value": "<boolean>",
																	"description": "If `true`, any ticket created with a `closed` status bypasses the normal ticket lifecycle and will be created directly in your ticket archive"
																}
															]
														},
														"description": "Accepts an array of up to 100 ticket objects.\n\n#### Allowed For\n\n* Admins"
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tickets\": [\n    {\n      \"assignee_id\": \"<integer>\",\n      \"comments\": [\n        {\n          \"value\": \"<string>\",\n          \"attachments\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            }\n          ],\n          \"audit_id\": \"<integer>\",\n          \"author_id\": \"<integer>\",\n          \"body\": \"<string>\",\n          \"created_at\": \"<dateTime>\",\n          \"html_body\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"metadata\": {\n            \"deserunt0\": -15746432\n          },\n          \"plain_body\": \"<string>\",\n          \"public\": \"<boolean>\",\n          \"type\": \"<string>\",\n          \"uploads\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"via\": {\n            \"channel\": \"<string>\",\n            \"source\": {\n              \"eu209\": -28342753.66487193,\n              \"animde\": \"D\"\n            }\n          }\n        },\n        {\n          \"value\": \"<string>\",\n          \"attachments\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            }\n          ],\n          \"audit_id\": \"<integer>\",\n          \"author_id\": \"<integer>\",\n          \"body\": \"<string>\",\n          \"created_at\": \"<dateTime>\",\n          \"html_body\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"metadata\": {\n            \"laboris_15\": \"adipisicing minim in quis\",\n            \"cupidatat79d\": 20721679,\n            \"ut_59e\": 45609722,\n            \"sed_23\": 1885806.3466126025\n          },\n          \"plain_body\": \"<string>\",\n          \"public\": \"<boolean>\",\n          \"type\": \"<string>\",\n          \"uploads\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"via\": {\n            \"channel\": \"<string>\",\n            \"source\": {\n              \"ea_841\": 97734305.17236122,\n              \"in_d3c\": \"esse nostrud deserunt tempor culpa\"\n            }\n          }\n        }\n      ],\n      \"description\": \"<string>\",\n      \"requester_id\": \"<integer>\",\n      \"subject\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"assignee_id\": \"<integer>\",\n      \"comments\": [\n        {\n          \"value\": \"<string>\",\n          \"attachments\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            }\n          ],\n          \"audit_id\": \"<integer>\",\n          \"author_id\": \"<integer>\",\n          \"body\": \"<string>\",\n          \"created_at\": \"<dateTime>\",\n          \"html_body\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"metadata\": {\n            \"ex_4\": true,\n            \"ipsum_9\": \"nulla Ut\",\n            \"ea4\": -1823937\n          },\n          \"plain_body\": \"<string>\",\n          \"public\": \"<boolean>\",\n          \"type\": \"<string>\",\n          \"uploads\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"via\": {\n            \"channel\": \"<string>\",\n            \"source\": {\n              \"enim6a5\": \"nisi elit\",\n              \"sint19c\": \"consectetur consequat in\",\n              \"deseruntb44\": true,\n              \"ipsume\": 49873874.53445846\n            }\n          }\n        },\n        {\n          \"value\": \"<string>\",\n          \"attachments\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\",\n              \"thumbnails\": [\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                },\n                {\n                  \"content_type\": \"<string>\",\n                  \"content_url\": \"<string>\",\n                  \"deleted\": \"<boolean>\",\n                  \"file_name\": \"<string>\",\n                  \"height\": \"<string>\",\n                  \"id\": \"<integer>\",\n                  \"inline\": \"<boolean>\",\n                  \"malware_access_override\": \"<boolean>\",\n                  \"malware_scan_result\": \"<string>\",\n                  \"mapped_content_url\": \"<string>\",\n                  \"size\": \"<integer>\",\n                  \"url\": \"<string>\",\n                  \"width\": \"<string>\"\n                }\n              ]\n            }\n          ],\n          \"audit_id\": \"<integer>\",\n          \"author_id\": \"<integer>\",\n          \"body\": \"<string>\",\n          \"created_at\": \"<dateTime>\",\n          \"html_body\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"metadata\": {\n            \"pariatur_83\": \"occaecat non proident sit\",\n            \"consequat_e\": -43360339.16346,\n            \"Ut_b86\": 3679925.1367082894\n          },\n          \"plain_body\": \"<string>\",\n          \"public\": \"<boolean>\",\n          \"type\": \"<string>\",\n          \"uploads\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"via\": {\n            \"channel\": \"<string>\",\n            \"source\": {\n              \"magna_a\": \"sunt\"\n            }\n          }\n        }\n      ],\n      \"description\": \"<string>\",\n      \"requester_id\": \"<integer>\",\n      \"subject\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/imports/tickets/create_many?archive_immediately=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"imports",
																		"tickets",
																		"create_many"
																	],
																	"query": [
																		{
																			"key": "archive_immediately",
																			"value": "<boolean>",
																			"description": "If `true`, any ticket created with a `closed` status bypasses the normal ticket lifecycle and will be created directly in your ticket archive"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Ticket Import",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ticket\": {\n    \"assignee_id\": \"<integer>\",\n    \"comments\": [\n      {\n        \"value\": \"<string>\",\n        \"attachments\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          }\n        ],\n        \"audit_id\": \"<integer>\",\n        \"author_id\": \"<integer>\",\n        \"body\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"html_body\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"metadata\": {\n          \"pariatur7\": true\n        },\n        \"plain_body\": \"<string>\",\n        \"public\": \"<boolean>\",\n        \"type\": \"<string>\",\n        \"uploads\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"via\": {\n          \"channel\": \"<string>\",\n          \"source\": {\n            \"in898\": 76810932.7939111,\n            \"mollit__\": \"officia reprehenderit\",\n            \"aute9\": true,\n            \"cupidatat_1ec\": \"sed dolore velit\"\n          }\n        }\n      },\n      {\n        \"value\": \"<string>\",\n        \"attachments\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          }\n        ],\n        \"audit_id\": \"<integer>\",\n        \"author_id\": \"<integer>\",\n        \"body\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"html_body\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"metadata\": {\n          \"non_d\": -67952300.78849092\n        },\n        \"plain_body\": \"<string>\",\n        \"public\": \"<boolean>\",\n        \"type\": \"<string>\",\n        \"uploads\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"via\": {\n          \"channel\": \"<string>\",\n          \"source\": {\n            \"mollit1\": 10831073\n          }\n        }\n      }\n    ],\n    \"description\": \"<string>\",\n    \"requester_id\": \"<integer>\",\n    \"subject\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/imports/tickets?archive_immediately=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"imports",
														"tickets"
													],
													"query": [
														{
															"key": "archive_immediately",
															"value": "<boolean>",
															"description": "If `true`, any ticket created with a `closed` status bypasses the normal ticket lifecycle and will be created directly in your ticket archive"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins"
											},
											"response": [
												{
													"name": "Successfully created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ticket\": {\n    \"assignee_id\": \"<integer>\",\n    \"comments\": [\n      {\n        \"value\": \"<string>\",\n        \"attachments\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          }\n        ],\n        \"audit_id\": \"<integer>\",\n        \"author_id\": \"<integer>\",\n        \"body\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"html_body\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"metadata\": {\n          \"pariatur7\": true\n        },\n        \"plain_body\": \"<string>\",\n        \"public\": \"<boolean>\",\n        \"type\": \"<string>\",\n        \"uploads\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"via\": {\n          \"channel\": \"<string>\",\n          \"source\": {\n            \"in898\": 76810932.7939111,\n            \"mollit__\": \"officia reprehenderit\",\n            \"aute9\": true,\n            \"cupidatat_1ec\": \"sed dolore velit\"\n          }\n        }\n      },\n      {\n        \"value\": \"<string>\",\n        \"attachments\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          }\n        ],\n        \"audit_id\": \"<integer>\",\n        \"author_id\": \"<integer>\",\n        \"body\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"html_body\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"metadata\": {\n          \"non_d\": -67952300.78849092\n        },\n        \"plain_body\": \"<string>\",\n        \"public\": \"<boolean>\",\n        \"type\": \"<string>\",\n        \"uploads\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"via\": {\n          \"channel\": \"<string>\",\n          \"source\": {\n            \"mollit1\": 10831073\n          }\n        }\n      }\n    ],\n    \"description\": \"<string>\",\n    \"requester_id\": \"<integer>\",\n    \"subject\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/imports/tickets?archive_immediately=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"imports",
																"tickets"
															],
															"query": [
																{
																	"key": "archive_immediately",
																	"value": "<boolean>",
																	"description": "If `true`, any ticket created with a `closed` status bypasses the normal ticket lifecycle and will be created directly in your ticket archive"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ticket\": {\n    \"requester_id\": \"<integer>\",\n    \"allow_attachments\": \"<boolean>\",\n    \"allow_channelback\": \"<boolean>\",\n    \"assignee_email\": \"<string>\",\n    \"assignee_id\": \"<integer>\",\n    \"attribute_value_ids\": \"<array>\",\n    \"brand_id\": \"<integer>\",\n    \"collaborator_ids\": \"<array>\",\n    \"collaborators\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"comment\": {},\n    \"created_at\": \"<dateTime>\",\n    \"custom_fields\": \"<array>\",\n    \"custom_status_id\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"due_at\": \"<dateTime>\",\n    \"email_cc_ids\": \"<array>\",\n    \"email_ccs\": {},\n    \"external_id\": \"<string>\",\n    \"follower_ids\": \"<array>\",\n    \"followers\": {},\n    \"followup_ids\": \"<array>\",\n    \"forum_topic_id\": \"<integer>\",\n    \"from_messaging_channel\": \"<boolean>\",\n    \"group_id\": \"<integer>\",\n    \"has_incidents\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"is_public\": \"<boolean>\",\n    \"macro_id\": \"<integer>\",\n    \"macro_ids\": \"<array>\",\n    \"metadata\": {},\n    \"organization_id\": \"<integer>\",\n    \"priority\": \"high\",\n    \"problem_id\": \"<integer>\",\n    \"raw_subject\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"requester\": {},\n    \"safe_update\": \"<boolean>\",\n    \"satisfaction_rating\": {\n      \"exercitation_c48\": false,\n      \"Ut4\": 54410130.125641406\n    },\n    \"sharing_agreement_ids\": \"<array>\",\n    \"status\": \"pending\",\n    \"subject\": \"<string>\",\n    \"submitter_id\": \"<integer>\",\n    \"tags\": \"<array>\",\n    \"ticket_form_id\": \"<integer>\",\n    \"type\": \"incident\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_stamp\": \"<string>\",\n    \"url\": \"<string>\",\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"voluptate_de\": -31344927.765781045,\n        \"dolore_e\": \"ea nisi magna do\",\n        \"est952\": false\n      }\n    },\n    \"via_followup_source_id\": \"<integer>\",\n    \"via_id\": \"<integer>\",\n    \"voice_comment\": {}\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "incremental",
							"item": [
								{
									"name": "{incremental_resource}",
									"item": [
										{
											"name": "sample",
											"item": [
												{
													"name": "Incremental Sample Export",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/incremental/:incremental_resource/sample?start_time=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"incremental",
																":incremental_resource",
																"sample"
															],
															"query": [
																{
																	"key": "start_time",
																	"value": "<integer>",
																	"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
																}
															],
															"variable": [
																{
																	"key": "incremental_resource",
																	"value": "<string>",
																	"description": "(Required) The resource requested for incremental sample export"
																}
															]
														},
														"description": "Use this endpoint to test the incremental export format. It's more strict in terms of rate limiting,\nat 10 requests per 20 minutes instead of 10 requests per minute. It also returns only up to 50\nresults per request. Otherwise, it's identical to the above APIs.\n\nUse the `incremental_resource` parameter to specify the resource. Possible values are \"tickets\", \"ticket_events\", \"users\", or \"organizations\".\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/incremental/:incremental_resource/sample?start_time=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"incremental",
																		":incremental_resource",
																		"sample"
																	],
																	"query": [
																		{
																			"key": "start_time",
																			"value": "<integer>",
																			"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
																		}
																	],
																	"variable": [
																		{
																			"key": "incremental_resource"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"count\": \"<integer>\",\n  \"end_of_stream\": \"<boolean>\",\n  \"end_time\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"tickets\": [\n    {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"urgent\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"ina0d\": -68965581,\n        \"tempor95\": 55843584\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"closed\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"incident\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"sintda\": true\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    },\n    {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"low\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"Ut9\": false\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"open\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"task\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"cillumd2\": -71510044.65313488\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    }\n  ]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "organizations",
									"item": [
										{
											"name": "Incremental Organization Export",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/incremental/organizations?start_time=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"incremental",
														"organizations"
													],
													"query": [
														{
															"key": "start_time",
															"value": "<integer>",
															"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
														}
													]
												},
												"description": "#### Allowed For\n\n * Admins\n\n#### Sideloading\n\nSee [Organizations sideloads](/documentation/ticketing/using-the-zendesk-api/side_loading/#supported-endpoints).\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/incremental/organizations?start_time=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"incremental",
																"organizations"
															],
															"query": [
																{
																	"key": "start_time",
																	"value": "<integer>",
																	"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"end_of_stream\": \"<boolean>\",\n  \"end_time\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"organizations\": [\n    {\n      \"created_at\": \"<string>\",\n      \"details\": \"<string>\",\n      \"domain_names\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"external_id\": \"<string>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"organization_fields\": {\n        \"auted6\": \"<string>\",\n        \"sunt_0\": \"<string>\",\n        \"et3\": \"<string>\"\n      },\n      \"shared_comments\": \"<boolean>\",\n      \"shared_tickets\": \"<boolean>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created_at\": \"<string>\",\n      \"details\": \"<string>\",\n      \"domain_names\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"external_id\": \"<string>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"organization_fields\": {\n        \"ullamco_2\": \"<string>\"\n      },\n      \"shared_comments\": \"<boolean>\",\n      \"shared_tickets\": \"<boolean>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "routing",
									"item": [
										{
											"name": "attribute_values",
											"item": [
												{
													"name": "Incremental Attributes Values Export",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/incremental/routing/attribute_values",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"incremental",
																"routing",
																"attribute_values"
															]
														},
														"description": "Returns a stream of changes that occurred on routing attribute values.\n\n#### Allowed For\n\n* Admins\n\n#### Parameters\n\nOptional\n\n| Name   | Type   | Comment\n| ------ | ------ | -------\n| cursor | string | The `cursor` parameter is a non-human-readable argument you can use to move forward or backward in time. The cursor is a read-only URL parameter that's only available in API responses. See [Pagination](#pagination).\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/incremental/routing/attribute_values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"incremental",
																		"routing",
																		"attribute_values"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"attribute_values\": [\n    {\n      \"attribute_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"attribute_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"end_time\": \"<integer>\",\n  \"instance_values\": [\n    {\n      \"attribute_value_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"instance_id\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"attribute_value_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"instance_id\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"next_page\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "attributes",
											"item": [
												{
													"name": "Incremental Attributes Export",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/incremental/routing/attributes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"incremental",
																"routing",
																"attributes"
															]
														},
														"description": "Returns a stream of changes that occurred on routing attributes.\n\n#### Allowed For\n\n* Admins\n\n#### Parameters\n\nOptional\n\n\n| Name   | Type   | Comment\n| ------ | ------ | -------\n| cursor | string | The `cursor` parameter is a non-human-readable argument you can use to move forward or backward in time. The cursor is a read-only URL parameter that's only available in API responses. See [Pagination](#pagination).\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/incremental/routing/attributes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"incremental",
																		"routing",
																		"attributes"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"attribute_values\": [\n    {\n      \"attribute_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"attribute_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"end_time\": \"<integer>\",\n  \"instance_values\": [\n    {\n      \"attribute_value_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"instance_id\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"attribute_value_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"instance_id\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"next_page\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "instance_values",
											"item": [
												{
													"name": "Incremental Instance Values Export",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/incremental/routing/instance_values",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"incremental",
																"routing",
																"instance_values"
															]
														},
														"description": "Returns a stream of changes that occurred on routing instance values. Changes are grouped by `attribute_value_id`,\nwith unassociate type events listed with associate type events by the associate event’s timestamp.\n\n#### Allowed For\n\n* Admins\n\n#### Parameters\n\nOptional\n\n| Name   | Type   | Comment\n| ------ | ------ | -------\n| cursor | string | The `cursor` parameter is a non-human-readable argument you can use to move forward or backward in time. The cursor is a read-only URL parameter that's only available in API responses. See [Pagination](#pagination).\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/incremental/routing/instance_values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"incremental",
																		"routing",
																		"instance_values"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"attribute_values\": [\n    {\n      \"attribute_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"attribute_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"end_time\": \"<integer>\",\n  \"instance_values\": [\n    {\n      \"attribute_value_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"instance_id\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"attribute_value_id\": \"<string>\",\n      \"id\": \"<string>\",\n      \"instance_id\": \"<string>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"next_page\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "ticket_events",
									"item": [
										{
											"name": "Incremental Ticket Event Export",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/incremental/ticket_events?start_time=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"incremental",
														"ticket_events"
													],
													"query": [
														{
															"key": "start_time",
															"value": "<integer>",
															"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
														}
													]
												},
												"description": "Returns a stream of changes that occurred on tickets. Each event is tied\nto an update on a ticket and contains all the fields that were updated in that\nchange. For more information, see:\n\n- [Exporting ticket events](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#exporting-ticket-events) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api)\n- [Time-based incremental exports](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#time-based-incremental-exports) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api)\n\nYou can include comments in the event stream by using the `comment_events`\nsideload. See Sideloading below. If you don't specify the sideload, any comment\npresent in the ticket update is described only by Boolean `comment_present`\nand `comment_public` object properties in the event's `child_events` array.\nThe comment itself is not included.\n\n#### Allowed For\n\n * Admins\n\n#### Sideloading\n\nThe endpoint supports the `comment_events` sideload. Any comment present in the ticket\nupdate is listed as an object in the event's `child_events` array. Example:\n\n```js\n\"child_events\": [\n  {\n    \"id\": 91048994488,\n    \"via\": {\n      \"channel\": \"api\",\n      \"source\": {\"from\":{},\"to\":{},\"rel\":null}},\n    \"via_reference_id\":null,\n    \"type\": \"Comment\",\n    \"author_id\": 5031726587,\n    \"body\": \"This is a comment\",\n    \"html_body\": \"&lt;div class=\"zd-comment\"&gt;&lt;p dir=\"auto\"&gt;This is a comment&lt;/p&gt;\",\n    \"public\": true,\n    \"attachments\": [],\n    \"audit_id\": 91048994468,\n    \"created_at\": \"2009-06-25T10:15:18Z\",\n    \"event_type\": \"Comment\"\n  },\n  ...\n],\n...\n```\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/incremental/ticket_events?start_time=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"incremental",
																"ticket_events"
															],
															"query": [
																{
																	"key": "start_time",
																	"value": "<integer>",
																	"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"end_of_stream\": \"<boolean>\",\n  \"end_time\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"ticket_events\": [\n    {\n      \"id\": \"<integer>\",\n      \"instance_id\": \"<integer>\",\n      \"metric\": \"periodic_update_time\",\n      \"ticket_id\": \"<integer>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"update_status\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"instance_id\": \"<integer>\",\n      \"metric\": \"resolution_time\",\n      \"ticket_id\": \"<integer>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"measure\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "ticket_metric_events",
									"item": [
										{
											"name": "List Ticket Metric Events",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/incremental/ticket_metric_events?start_time=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"incremental",
														"ticket_metric_events"
													],
													"query": [
														{
															"key": "start_time",
															"value": "<integer>",
															"description": "(Required) The Unix UTC epoch time of the oldest event you're interested in. Example: 1332034771."
														}
													]
												},
												"description": "Returns ticket metric events that occurred on or after the start time.\n\nCursor pagination returns a maximum of 100 records per page. Events are listed in chronological order.\n\nIf the results are not paginated, events will be returned as a time-based incremental export.\n\nSee [Time-based incremental exports](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#time-based-incremental-exports).\n\n#### Pagination\n* Cursor pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\n#### Allowed For\n\n* Admins"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/incremental/ticket_metric_events?start_time=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"incremental",
																"ticket_metric_events"
															],
															"query": [
																{
																	"key": "start_time",
																	"value": "<integer>",
																	"description": "(Required) The Unix UTC epoch time of the oldest event you're interested in. Example: 1332034771."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ticket_metric_events\": [\n    {\n      \"id\": \"<integer>\",\n      \"instance_id\": \"<integer>\",\n      \"metric\": \"requester_wait_time\",\n      \"ticket_id\": \"<integer>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"pause\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"instance_id\": \"<integer>\",\n      \"metric\": \"requester_wait_time\",\n      \"ticket_id\": \"<integer>\",\n      \"time\": \"<dateTime>\",\n      \"type\": \"fulfill\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"end_time\": \"<integer>\",\n  \"next_page\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "tickets",
									"item": [
										{
											"name": "cursor",
											"item": [
												{
													"name": "Incremental Ticket Export, Cursor Based",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/incremental/tickets/cursor?start_time=<integer>&cursor=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"incremental",
																"tickets",
																"cursor"
															],
															"query": [
																{
																	"key": "start_time",
																	"value": "<integer>",
																	"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
																},
																{
																	"key": "cursor",
																	"value": "<string>",
																	"description": "The cursor pointer to work with for all subsequent exports after the initial request"
																}
															]
														},
														"description": "Returns the tickets that changed since the start time. For more information,\nsee [Exporting tickets](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#exporting-tickets) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api).\n\nThis endpoint supports cursor-based incremental exports.\nCursor-based exports are highly encouraged because they provide more consistent performance and\nresponse body sizes. For more information, see [Cursor-based incremental exports](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#cursor-based-incremental-exports) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api).\n\n\n\n#### Allowed For\n\n * Admins\n\n#### Sideloading\n\nSee [Tickets sideloads](/documentation/ticketing/using-the-zendesk-api/side_loading/#supported-endpoints). For performance reasons,\n`last_audits` sideloads aren't supported.\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/incremental/tickets/cursor?start_time=<integer>&cursor=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"incremental",
																		"tickets",
																		"cursor"
																	],
																	"query": [
																		{
																			"key": "start_time",
																			"value": "<integer>",
																			"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "The cursor pointer to work with for all subsequent exports after the initial request"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"after_cursor\": \"<string>\",\n  \"after_url\": \"<string>\",\n  \"before_cursor\": \"<string>\",\n  \"before_url\": \"<string>\",\n  \"end_of_stream\": \"<boolean>\",\n  \"tickets\": [\n    {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"high\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"eu_22\": 29517586,\n        \"sit_85\": 4434788.133460283,\n        \"culpa80\": 51054710.88126716\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"open\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"question\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"mollit2\": -61202761,\n          \"commodo__3\": \"elit laboris\",\n          \"ea470\": 682884\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    },\n    {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"normal\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"ipsum_203\": \"Duis \",\n        \"consequat_81\": false,\n        \"pariatur_1\": -844288.3348776847\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"pending\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"incident\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"in_2\": 16823431.981691867\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Incremental Ticket Export, Time Based",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/incremental/tickets?start_time=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"incremental",
														"tickets"
													],
													"query": [
														{
															"key": "start_time",
															"value": "<integer>",
															"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
														}
													]
												},
												"description": "Returns the tickets that changed since the start time. For more information,\nsee [Exporting tickets](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#exporting-tickets) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api).\n\nThis endpoint supports time-based incremental exports.\nFor more information, see [Time-based incremental exports](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#time-based-incremental-exports) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api). You can also return tickets using cursor-based pagination. See [Incremental Ticket Export, Cursor Based](#incremental-ticket-export-cursor-based).\n\nThe results include tickets that were updated by the system. See\n[Excluding system-updated tickets](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#excluding-system-updated-tickets-time-based-exports) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api).\n\nThe endpoint can return tickets with an `updated_at` time that's earlier than the\n`start_time` time. The reason is that the API compares the `start_time` with the ticket's\n`generated_timestamp` value, not its `updated_at` value. The `updated_at` value is\nupdated only if the update generates a [ticket event](#incremental-ticket-event-export).\nThe `generated_timestamp` value is updated for all ticket updates, including system\nupdates. If a system update occurs after a ticket event, the unchanged\n`updated_at` time will become earlier relative to the updated `generated_timestamp`\ntime.\n\n#### Allowed For\n\n * Admins\n\n#### Sideloading\n\nSee [Tickets sideloads](/documentation/ticketing/using-the-zendesk-api/side_loading/#supported-endpoints). For performance reasons,\n`last_audits` sideloads aren't supported.\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/incremental/tickets?start_time=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"incremental",
																"tickets"
															],
															"query": [
																{
																	"key": "start_time",
																	"value": "<integer>",
																	"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"end_of_stream\": \"<boolean>\",\n  \"end_time\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"tickets\": [\n    {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"urgent\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"ina0d\": -68965581,\n        \"tempor95\": 55843584\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"closed\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"incident\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"sintda\": true\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    },\n    {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"low\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"Ut9\": false\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"open\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"task\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"cillumd2\": -71510044.65313488\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "users",
									"item": [
										{
											"name": "cursor",
											"item": [
												{
													"name": "Incremental User Export, Cursor Based",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/incremental/users/cursor?start_time=<integer>&cursor=<string>&per_page=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"incremental",
																"users",
																"cursor"
															],
															"query": [
																{
																	"key": "start_time",
																	"value": "<integer>",
																	"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
																},
																{
																	"key": "cursor",
																	"value": "<string>",
																	"description": "The cursor pointer to work with for all subsequent exports after the initial request"
																},
																{
																	"key": "per_page",
																	"value": "<integer>",
																	"description": "The number of records to return per page"
																}
															]
														},
														"description": "#### Allowed For\n\n * Admins\n\n#### Sideloading\n\nSee [Users sideloads](/documentation/ticketing/using-the-zendesk-api/side_loading/#supported-endpoints).\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/incremental/users/cursor?start_time=<integer>&cursor=<string>&per_page=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"incremental",
																		"users",
																		"cursor"
																	],
																	"query": [
																		{
																			"key": "start_time",
																			"value": "<integer>",
																			"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "The cursor pointer to work with for all subsequent exports after the initial request"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>",
																			"description": "The number of records to return per page"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"after_cursor\": \"<string>\",\n  \"after_url\": \"<string>\",\n  \"before_cursor\": \"<string>\",\n  \"before_url\": \"<string>\",\n  \"end_of_stream\": \"<boolean>\",\n  \"users\": [\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"laboris64\": 8703813\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"suntc\": \"incididunt fugiat dolore in non\",\n        \"esse16\": -26198920.53133844\n      },\n      \"verified\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"pariatur_\": false,\n        \"culpa_12a\": -67802939.77633086,\n        \"do_11\": \"elit\"\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"cupidatat_\": 11940537\n      },\n      \"verified\": \"<boolean>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Incremental User Export, Time Based",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/incremental/users?start_time=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"incremental",
														"users"
													],
													"query": [
														{
															"key": "start_time",
															"value": "<integer>",
															"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "The number of records to return per page"
														}
													]
												},
												"description": "#### Allowed For\n\n * Admins\n\n#### Sideloading\n\nSee [Users sideloads](/documentation/ticketing/using-the-zendesk-api/side_loading/#supported-endpoints).\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/incremental/users?start_time=<integer>&per_page=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"incremental",
																"users"
															],
															"query": [
																{
																	"key": "start_time",
																	"value": "<integer>",
																	"description": "(Required) The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
																},
																{
																	"key": "per_page",
																	"value": "<integer>",
																	"description": "The number of records to return per page"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"end_of_stream\": \"<boolean>\",\n  \"end_time\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"users\": [\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"nisi_4\": 12321331.78190668,\n        \"veniamc\": 50442604.574296325\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"magnae\": \"magna aute\"\n      },\n      \"verified\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"sint__30\": true,\n        \"est_cec\": \"Excepteur reprehenderit laborum incididunt\"\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"consequat_8\": 29816702.413299635\n      },\n      \"verified\": \"<boolean>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "job_statuses",
							"item": [
								{
									"name": "{job_status_id}",
									"item": [
										{
											"name": "Show Job Status",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/job_statuses/:job_status_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"job_statuses",
														":job_status_id"
													],
													"variable": [
														{
															"key": "job_status_id",
															"value": "<string>",
															"description": "(Required) the Id of the Job status"
														}
													]
												},
												"description": "Shows the status of a background job.\n\n#### Allowed For:\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/job_statuses/:job_status_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"job_statuses",
																":job_status_id"
															],
															"variable": [
																{
																	"key": "job_status_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "show_many",
									"item": [
										{
											"name": "Show Many Job Statuses",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/job_statuses/show_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"job_statuses",
														"show_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) Comma-separated list of job status ids."
														}
													]
												},
												"description": "Accepts a comma-separated list of job status ids.\n\n#### Allowed For:\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/job_statuses/show_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"job_statuses",
																"show_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) Comma-separated list of job status ids."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_statuses\": [\n    {\n      \"id\": \"<string>\",\n      \"message\": \"<string>\",\n      \"progress\": \"<integer>\",\n      \"results\": [\n        {\n          \"id\": \"<integer>\",\n          \"index\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"index\": \"<integer>\"\n        }\n      ],\n      \"status\": \"<string>\",\n      \"total\": \"<integer>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"message\": \"<string>\",\n      \"progress\": \"<integer>\",\n      \"results\": [\n        {\n          \"id\": \"<integer>\",\n          \"index\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"index\": \"<integer>\"\n        }\n      ],\n      \"status\": \"<string>\",\n      \"total\": \"<integer>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Job Statuses",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/job_statuses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"job_statuses"
											]
										},
										"description": "Shows the statuses for background jobs. Statuses are sorted first by completion date and then by creation date in descending order.\n\n#### Allowed For:\n\n* Agents\n\n#### Pagination\n\n* Cursor pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
									},
									"response": [
										{
											"name": "Success Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/job_statuses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"job_statuses"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"job_statuses\": [\n    {\n      \"id\": \"<string>\",\n      \"message\": \"<string>\",\n      \"progress\": \"<integer>\",\n      \"results\": [\n        {\n          \"id\": \"<integer>\",\n          \"index\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"index\": \"<integer>\"\n        }\n      ],\n      \"status\": \"<string>\",\n      \"total\": \"<integer>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"message\": \"<string>\",\n      \"progress\": \"<integer>\",\n      \"results\": [\n        {\n          \"id\": \"<integer>\",\n          \"index\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"index\": \"<integer>\"\n        }\n      ],\n      \"status\": \"<string>\",\n      \"total\": \"<integer>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "locales",
							"item": [
								{
									"name": "{locale_id}",
									"item": [
										{
											"name": "Show Locale",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locales/:locale_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locales",
														":locale_id"
													],
													"variable": [
														{
															"key": "locale_id",
															"value": "<string>",
															"description": "(Required) The ID or the [BCP-47 code](https://en.wikipedia.org/wiki/IETF_language_tag) of the locale. Examples: es-419, en-us, pr-br\n"
														}
													]
												},
												"description": "#### Allowed For\n\n* Anyone\n"
											},
											"response": [
												{
													"name": "Success Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/locales/:locale_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"locales",
																":locale_id"
															],
															"variable": [
																{
																	"key": "locale_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"locale\": {\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"locale\": \"<string>\",\n    \"name\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "agent",
									"item": [
										{
											"name": "List Locales for Agent",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locales/agent",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locales",
														"agent"
													]
												},
												"description": "Lists the translation locales that have been localized for agents on a specific account.\n\n#### Allowed For\n\n* Anyone\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/locales/agent",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"locales",
																"agent"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"locales\": [\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"locale\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"locale\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "current",
									"item": [
										{
											"name": "Show Current Locale",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locales/current",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locales",
														"current"
													]
												},
												"description": "This works like [Show Locale](#show-locale), but instead of taking a locale id as an argument, it renders the locale of the user performing the request.\n\n#### Allowed For\n\n* Anyone\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/locales/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"locales",
																"current"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"locale\": {\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"locale\": \"<string>\",\n    \"name\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "detect_best_locale",
									"item": [
										{
											"name": "Detect Best Language for User",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locales/detect_best_locale",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locales",
														"detect_best_locale"
													]
												},
												"description": "#### Allowed For\n\n* Anyone\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/locales/detect_best_locale",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"locales",
																"detect_best_locale"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"locale\": {\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"locale\": \"<string>\",\n    \"name\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "public",
									"item": [
										{
											"name": "List Available Public Locales",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locales/public",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locales",
														"public"
													]
												},
												"description": "Lists the translation locales that are available to all accounts.\n\n#### Allowed For\n\n* Anyone\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/locales/public",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"locales",
																"public"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"locales\": [\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"locale\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"locale\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Locales",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/locales",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"locales"
											]
										},
										"description": "Lists the translation locales available for the account.\n\n**Note**: You can alter the list by passing an updated `locale_ids` array to the [Update Account Settings](/api-reference/ticketing/account-configuration/account_settings/#update-account-settings) endpoint.\n\n#### Allowed For\n\n* Anyone\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/locales",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"locales"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"locales\": [\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"locale\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"locale\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "macros",
							"item": [
								{
									"name": "{macro_id}",
									"item": [
										{
											"name": "apply",
											"item": [
												{
													"name": "Show Changes to Ticket",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/:macro_id/apply",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																":macro_id",
																"apply"
															],
															"variable": [
																{
																	"key": "macro_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the macro"
																}
															]
														},
														"description": "Returns the changes the macro would make to a ticket. It doesn't actually\nchange a ticket. You can use the response data in a subsequent API call\nto the [Tickets](/api-reference/ticketing/tickets/tickets/) endpoint to update the ticket.\n\nThe response includes only the ticket fields that would be changed by the\nmacro. To get the full ticket object after the macro is applied,\nsee [Show Ticket After Changes](#show-ticket-after-changes).\n\n#### Allowed For\n* Agents\n"
													},
													"response": [
														{
															"name": "Success Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/macros/:macro_id/apply",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"macros",
																		":macro_id",
																		"apply"
																	],
																	"variable": [
																		{
																			"key": "macro_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"result\": {\n    \"ticket\": {\n      \"assignee_id\": \"<integer>\",\n      \"comment\": {\n        \"body\": \"<string>\",\n        \"public\": \"<boolean>\",\n        \"scoped_body\": [\n          [\n            \"<string>\",\n            \"<string>\"\n          ],\n          [\n            \"<string>\",\n            \"<string>\"\n          ]\n        ]\n      },\n      \"fields\": {\n        \"id\": \"<integer>\",\n        \"value\": \"<string>\"\n      },\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"url\": \"<string>\"\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "attachments",
											"item": [
												{
													"name": "List Macro Attachments",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/:macro_id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																":macro_id",
																"attachments"
															],
															"variable": [
																{
																	"key": "macro_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the macro"
																}
															]
														},
														"description": "Lists the attachments associated with a macro.\n\n#### Allowed For\n* Agents\n"
													},
													"response": [
														{
															"name": "Success Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/macros/:macro_id/attachments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"macros",
																		":macro_id",
																		"attachments"
																	],
																	"variable": [
																		{
																			"key": "macro_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"macro_attachments\": [\n    {\n      \"content_type\": \"<string>\",\n      \"content_url\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"filename\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"size\": \"<integer>\"\n    },\n    {\n      \"content_type\": \"<string>\",\n      \"content_url\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"filename\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"size\": \"<integer>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create Macro Attachment",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/:macro_id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																":macro_id",
																"attachments"
															],
															"variable": [
																{
																	"key": "macro_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the macro"
																}
															]
														},
														"description": "Allows an attachment to be uploaded and associated with a macro at the same time.\n\n**Note:** A macro can be associated with up to five attachments.\n\n#### Allowed For\n\n* Agents\n"
													},
													"response": [
														{
															"name": "Success Response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/macros/:macro_id/attachments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"macros",
																		":macro_id",
																		"attachments"
																	],
																	"variable": [
																		{
																			"key": "macro_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"macro_attachment\": {\n    \"content_type\": \"<string>\",\n    \"content_url\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"filename\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"size\": \"<integer>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Show Macro",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros/:macro_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros",
														":macro_id"
													],
													"variable": [
														{
															"key": "macro_id",
															"value": "<integer>",
															"description": "(Required) The ID of the macro"
														}
													]
												},
												"description": "#### Allowed For\n* Agents\n"
											},
											"response": [
												{
													"name": "Success Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/:macro_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																":macro_id"
															],
															"variable": [
																{
																	"key": "macro_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"macro\": {\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"restriction\": {\n      \"dolor_30\": true,\n      \"amet__\": true\n    },\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"app_installation\": \"<string>\",\n    \"categories\": \"<string>\",\n    \"permissions\": \"<string>\",\n    \"usage_1h\": \"<integer>\",\n    \"usage_7d\": \"<integer>\",\n    \"usage_24h\": \"<integer>\",\n    \"usage_30d\": \"<integer>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Macro",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"macro\": {\n    \"title\": \"<string>\",\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"active\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"restriction\": {\n      \"id\": \"<integer>\",\n      \"ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"type\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros/:macro_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros",
														":macro_id"
													],
													"variable": [
														{
															"key": "macro_id",
															"value": "<integer>",
															"description": "(Required) The ID of the macro"
														}
													]
												},
												"description": "#### Allowed For\n* Agents\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"macro\": {\n    \"title\": \"<string>\",\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"active\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"restriction\": {\n      \"id\": \"<integer>\",\n      \"ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"type\": \"<string>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/:macro_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																":macro_id"
															],
															"variable": [
																{
																	"key": "macro_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"macro\": {\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"restriction\": {\n      \"dolor_30\": true,\n      \"amet__\": true\n    },\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"app_installation\": \"<string>\",\n    \"categories\": \"<string>\",\n    \"permissions\": \"<string>\",\n    \"usage_1h\": \"<integer>\",\n    \"usage_7d\": \"<integer>\",\n    \"usage_24h\": \"<integer>\",\n    \"usage_30d\": \"<integer>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Macro",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros/:macro_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros",
														":macro_id"
													],
													"variable": [
														{
															"key": "macro_id",
															"value": "<integer>",
															"description": "(Required) The ID of the macro"
														}
													]
												},
												"description": "#### Allowed For\n* Agents, with restrictions applying on certain actions\n"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/:macro_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																":macro_id"
															],
															"variable": [
																{
																	"key": "macro_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "actions",
									"item": [
										{
											"name": "List Supported Actions for Macros",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros/actions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros",
														"actions"
													]
												},
												"description": "#### Allowed For\n* Agents\n"
											},
											"response": [
												{
													"name": "Success Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/actions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																"actions"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"actions\": [\n    {\n      \"adipisicingb3\": false,\n      \"commodo6\": \"sit labore consectetur nisi Duis\"\n    },\n    {\n      \"consectetur2\": -92528367.64499363\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "active",
									"item": [
										{
											"name": "List Active Macros",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros/active?include=<string>&access=<string>&category=<integer>&group_id=<integer>&sort_by=<string>&sort_order=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros",
														"active"
													],
													"query": [
														{
															"key": "include",
															"value": "<string>",
															"description": "A sideload to include in the response. See [Sideloads](#sideloads-2)"
														},
														{
															"key": "access",
															"value": "<string>",
															"description": "Filter macros by access. Possible values are \"personal\", \"agents\", \"shared\", or \"account\". The \"agents\" value returns all personal macros for the account's agents and is only available to admins."
														},
														{
															"key": "category",
															"value": "<integer>",
															"description": "Filter macros by category"
														},
														{
															"key": "group_id",
															"value": "<integer>",
															"description": "Filter macros by group"
														},
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "Possible values are alphabetical, \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", \"usage_7d\", or \"usage_30d\". Defaults to alphabetical"
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
														}
													]
												},
												"description": "Lists all active shared and personal macros available to the current user.\n\n#### Allowed For\n* Agents\n"
											},
											"response": [
												{
													"name": "Success Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/active?include=<string>&access=<string>&category=<integer>&group_id=<integer>&sort_by=<string>&sort_order=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																"active"
															],
															"query": [
																{
																	"key": "include",
																	"value": "<string>",
																	"description": "A sideload to include in the response. See [Sideloads](#sideloads-2)"
																},
																{
																	"key": "access",
																	"value": "<string>",
																	"description": "Filter macros by access. Possible values are \"personal\", \"agents\", \"shared\", or \"account\". The \"agents\" value returns all personal macros for the account's agents and is only available to admins."
																},
																{
																	"key": "category",
																	"value": "<integer>",
																	"description": "Filter macros by category"
																},
																{
																	"key": "group_id",
																	"value": "<integer>",
																	"description": "Filter macros by group"
																},
																{
																	"key": "sort_by",
																	"value": "<string>",
																	"description": "Possible values are alphabetical, \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", \"usage_7d\", or \"usage_30d\". Defaults to alphabetical"
																},
																{
																	"key": "sort_order",
																	"value": "<string>",
																	"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"macros\": [\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"amet_4\": false,\n        \"do8\": false\n      },\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"app_installation\": \"<string>\",\n      \"categories\": \"<string>\",\n      \"permissions\": \"<string>\",\n      \"usage_1h\": \"<integer>\",\n      \"usage_7d\": \"<integer>\",\n      \"usage_24h\": \"<integer>\",\n      \"usage_30d\": \"<integer>\"\n    },\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"in_2\": false,\n        \"Duis_8\": false,\n        \"mollit9\": \"labore\"\n      },\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"app_installation\": \"<string>\",\n      \"categories\": \"<string>\",\n      \"permissions\": \"<string>\",\n      \"usage_1h\": \"<integer>\",\n      \"usage_7d\": \"<integer>\",\n      \"usage_24h\": \"<integer>\",\n      \"usage_30d\": \"<integer>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "attachments",
									"item": [
										{
											"name": "{attachment_id}",
											"item": [
												{
													"name": "Show Macro Attachment",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/attachments/:attachment_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																"attachments",
																":attachment_id"
															],
															"variable": [
																{
																	"key": "attachment_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the attachment"
																}
															]
														},
														"description": "Shows the properties of the specified macro attachment.\n\n#### Allowed For\n* Agents\n"
													},
													"response": [
														{
															"name": "Success Response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/macros/attachments/:attachment_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"macros",
																		"attachments",
																		":attachment_id"
																	],
																	"variable": [
																		{
																			"key": "attachment_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"macro_attachment\": {\n    \"content_type\": \"<string>\",\n    \"content_url\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"filename\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"size\": \"<integer>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Create Unassociated Macro Attachment",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros",
														"attachments"
													]
												},
												"description": "Allows an attachment to be uploaded that can be associated with a macro at a later time.\n\n**Note:** To ensure an uploaded attachment is not lost, associate it with a macro as soon as possible. From time to time, old attachments that are not not associated with any macro are purged.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Created Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																"attachments"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"macro_attachment\": {\n    \"content_type\": \"<string>\",\n    \"content_url\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"filename\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"size\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "categories",
									"item": [
										{
											"name": "List Macro Categories",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros/categories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros",
														"categories"
													]
												},
												"description": "Lists all macro categories available to the current user.\n\n#### Allowed For\n* Agents\n"
											},
											"response": [
												{
													"name": "Success Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/categories",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																"categories"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"categories\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "definitions",
									"item": [
										{
											"name": "List Macro Action Definitions",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros/definitions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros",
														"definitions"
													]
												},
												"description": "Returns the definitions of the actions a macro can perform. For example,\none action can set the status of a ticket. The definition of the action\nincludes a title (\"Status\"), a type (\"list\"), and possible values. For a\nlist of support actions, see [Actions reference](/documentation/ticketing/reference-guides/actions-reference).\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/definitions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																"definitions"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"definitions\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"actions\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"additionalProperties\": true,\n          \"properties\": {}\n        }\n      }\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Bulk Delete Macros",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros/destroy_many?ids=<integer>&ids=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros",
														"destroy_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<integer>",
															"description": "(Required) The IDs of the macros to delete"
														},
														{
															"key": "ids",
															"value": "<integer>",
															"description": "(Required) The IDs of the macros to delete"
														}
													]
												},
												"description": "Deletes the macros corresponding to the provided comma-separated list of IDs.\n\n#### Allowed For\n* Agents\n"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/destroy_many?ids=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																"destroy_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<integer>",
																	"description": "(Required) The IDs of the macros to delete"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "new",
									"item": [
										{
											"name": "Show Macro Replica",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros/new?macro_id=<integer>&ticket_id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros",
														"new"
													],
													"query": [
														{
															"key": "macro_id",
															"value": "<integer>",
															"description": "(Required) The ID of the macro to replicate"
														},
														{
															"key": "ticket_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket from which to build a macro replica"
														}
													]
												},
												"description": "Returns an unpersisted macro representation derived from a ticket or macro.\n\nThe endpoint takes one of the following query parameters: `macro_id` or `ticket_id`. If you include both, `macro_id` is used.\n\n#### Allowed For\n* Agents\n"
											},
											"response": [
												{
													"name": "Success Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/new?macro_id=<integer>&ticket_id=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																"new"
															],
															"query": [
																{
																	"key": "macro_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the macro to replicate"
																},
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket from which to build a macro replica"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"macro\": {\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"restriction\": {\n      \"dolor_30\": true,\n      \"amet__\": true\n    },\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"app_installation\": \"<string>\",\n    \"categories\": \"<string>\",\n    \"permissions\": \"<string>\",\n    \"usage_1h\": \"<integer>\",\n    \"usage_7d\": \"<integer>\",\n    \"usage_24h\": \"<integer>\",\n    \"usage_30d\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "search",
									"item": [
										{
											"name": "Search Macros",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros/search?include=<string>&access=<string>&active=<boolean>&category=<integer>&group_id=<integer>&only_viewable=<boolean>&sort_by=<string>&sort_order=<string>&query=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros",
														"search"
													],
													"query": [
														{
															"key": "include",
															"value": "<string>",
															"description": "A sideload to include in the response. See [Sideloads](#sideloads-2)"
														},
														{
															"key": "access",
															"value": "<string>",
															"description": "Filter macros by access. Possible values are \"personal\", \"agents\", \"shared\", or \"account\". The \"agents\" value returns all personal macros for the account's agents and is only available to admins."
														},
														{
															"key": "active",
															"value": "<boolean>",
															"description": "Filter by active macros if true or inactive macros if false"
														},
														{
															"key": "category",
															"value": "<integer>",
															"description": "Filter macros by category"
														},
														{
															"key": "group_id",
															"value": "<integer>",
															"description": "Filter macros by group"
														},
														{
															"key": "only_viewable",
															"value": "<boolean>",
															"description": "If true, returns only macros that can be applied to tickets. If false, returns all macros the current user can manage. Default is false"
														},
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "Possible values are alphabetical, \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", \"usage_7d\", or \"usage_30d\". Defaults to alphabetical"
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
														},
														{
															"key": "query",
															"value": "<string>",
															"description": "(Required) Query string used to find macros with matching titles"
														}
													]
												},
												"description": "#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n* Agents\n"
											},
											"response": [
												{
													"name": "Success Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/search?include=<string>&access=<string>&active=<boolean>&category=<integer>&group_id=<integer>&only_viewable=<boolean>&sort_by=<string>&sort_order=<string>&query=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																"search"
															],
															"query": [
																{
																	"key": "include",
																	"value": "<string>",
																	"description": "A sideload to include in the response. See [Sideloads](#sideloads-2)"
																},
																{
																	"key": "access",
																	"value": "<string>",
																	"description": "Filter macros by access. Possible values are \"personal\", \"agents\", \"shared\", or \"account\". The \"agents\" value returns all personal macros for the account's agents and is only available to admins."
																},
																{
																	"key": "active",
																	"value": "<boolean>",
																	"description": "Filter by active macros if true or inactive macros if false"
																},
																{
																	"key": "category",
																	"value": "<integer>",
																	"description": "Filter macros by category"
																},
																{
																	"key": "group_id",
																	"value": "<integer>",
																	"description": "Filter macros by group"
																},
																{
																	"key": "only_viewable",
																	"value": "<boolean>",
																	"description": "If true, returns only macros that can be applied to tickets. If false, returns all macros the current user can manage. Default is false"
																},
																{
																	"key": "sort_by",
																	"value": "<string>",
																	"description": "Possible values are alphabetical, \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", \"usage_7d\", or \"usage_30d\". Defaults to alphabetical"
																},
																{
																	"key": "sort_order",
																	"value": "<string>",
																	"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
																},
																{
																	"key": "query",
																	"value": "<string>",
																	"description": "(Required) Query string used to find macros with matching titles"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"macros\": [\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"amet_4\": false,\n        \"do8\": false\n      },\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"app_installation\": \"<string>\",\n      \"categories\": \"<string>\",\n      \"permissions\": \"<string>\",\n      \"usage_1h\": \"<integer>\",\n      \"usage_7d\": \"<integer>\",\n      \"usage_24h\": \"<integer>\",\n      \"usage_30d\": \"<integer>\"\n    },\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"in_2\": false,\n        \"Duis_8\": false,\n        \"mollit9\": \"labore\"\n      },\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"app_installation\": \"<string>\",\n      \"categories\": \"<string>\",\n      \"permissions\": \"<string>\",\n      \"usage_1h\": \"<integer>\",\n      \"usage_7d\": \"<integer>\",\n      \"usage_24h\": \"<integer>\",\n      \"usage_30d\": \"<integer>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "update_many",
									"item": [
										{
											"name": "Update Many Macros",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"macros\": [\n    {\n      \"id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"position\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"position\": \"<integer>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros/update_many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros",
														"update_many"
													]
												},
												"description": "Updates the provided macros with the specified changes.\n\n#### Allowed For\n* Agents\n"
											},
											"response": [
												{
													"name": "Success Response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"macros\": [\n    {\n      \"id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"position\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"position\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/macros/update_many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"macros",
																"update_many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"macros\": [\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"amet_4\": false,\n        \"do8\": false\n      },\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"app_installation\": \"<string>\",\n      \"categories\": \"<string>\",\n      \"permissions\": \"<string>\",\n      \"usage_1h\": \"<integer>\",\n      \"usage_7d\": \"<integer>\",\n      \"usage_24h\": \"<integer>\",\n      \"usage_30d\": \"<integer>\"\n    },\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"in_2\": false,\n        \"Duis_8\": false,\n        \"mollit9\": \"labore\"\n      },\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"app_installation\": \"<string>\",\n      \"categories\": \"<string>\",\n      \"permissions\": \"<string>\",\n      \"usage_1h\": \"<integer>\",\n      \"usage_7d\": \"<integer>\",\n      \"usage_24h\": \"<integer>\",\n      \"usage_30d\": \"<integer>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Macros",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/macros?include=<string>&access=<string>&active=<boolean>&category=<integer>&group_id=<integer>&only_viewable=<boolean>&sort_by=<string>&sort_order=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"macros"
											],
											"query": [
												{
													"key": "include",
													"value": "<string>",
													"description": "A sideload to include in the response. See [Sideloads](#sideloads-2)"
												},
												{
													"key": "access",
													"value": "<string>",
													"description": "Filter macros by access. Possible values are \"personal\", \"agents\", \"shared\", or \"account\". The \"agents\" value returns all personal macros for the account's agents and is only available to admins."
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Filter by active macros if true or inactive macros if false"
												},
												{
													"key": "category",
													"value": "<integer>",
													"description": "Filter macros by category"
												},
												{
													"key": "group_id",
													"value": "<integer>",
													"description": "Filter macros by group"
												},
												{
													"key": "only_viewable",
													"value": "<boolean>",
													"description": "If true, returns only macros that can be applied to tickets. If false, returns all macros the current user can manage. Default is false"
												},
												{
													"key": "sort_by",
													"value": "<string>",
													"description": "Possible values are alphabetical, \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", \"usage_7d\", or \"usage_30d\". Defaults to alphabetical"
												},
												{
													"key": "sort_order",
													"value": "<string>",
													"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
												}
											]
										},
										"description": "Lists all shared and personal macros available to the current user. For admins, the API returns all macros for the account, including the personal macros of agents and other admins.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n* Agents\n"
									},
									"response": [
										{
											"name": "Success Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros?include=<string>&access=<string>&active=<boolean>&category=<integer>&group_id=<integer>&only_viewable=<boolean>&sort_by=<string>&sort_order=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros"
													],
													"query": [
														{
															"key": "include",
															"value": "<string>",
															"description": "A sideload to include in the response. See [Sideloads](#sideloads-2)"
														},
														{
															"key": "access",
															"value": "<string>",
															"description": "Filter macros by access. Possible values are \"personal\", \"agents\", \"shared\", or \"account\". The \"agents\" value returns all personal macros for the account's agents and is only available to admins."
														},
														{
															"key": "active",
															"value": "<boolean>",
															"description": "Filter by active macros if true or inactive macros if false"
														},
														{
															"key": "category",
															"value": "<integer>",
															"description": "Filter macros by category"
														},
														{
															"key": "group_id",
															"value": "<integer>",
															"description": "Filter macros by group"
														},
														{
															"key": "only_viewable",
															"value": "<boolean>",
															"description": "If true, returns only macros that can be applied to tickets. If false, returns all macros the current user can manage. Default is false"
														},
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "Possible values are alphabetical, \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", \"usage_7d\", or \"usage_30d\". Defaults to alphabetical"
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"macros\": [\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"amet_4\": false,\n        \"do8\": false\n      },\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"app_installation\": \"<string>\",\n      \"categories\": \"<string>\",\n      \"permissions\": \"<string>\",\n      \"usage_1h\": \"<integer>\",\n      \"usage_7d\": \"<integer>\",\n      \"usage_24h\": \"<integer>\",\n      \"usage_30d\": \"<integer>\"\n    },\n    {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"in_2\": false,\n        \"Duis_8\": false,\n        \"mollit9\": \"labore\"\n      },\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"app_installation\": \"<string>\",\n      \"categories\": \"<string>\",\n      \"permissions\": \"<string>\",\n      \"usage_1h\": \"<integer>\",\n      \"usage_7d\": \"<integer>\",\n      \"usage_24h\": \"<integer>\",\n      \"usage_30d\": \"<integer>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create Macro",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"macro\": {\n    \"title\": \"<string>\",\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"active\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"restriction\": {\n      \"id\": \"<integer>\",\n      \"ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"type\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/macros",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"macros"
											]
										},
										"description": "#### Allowed For\n* Agents\n"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"macro\": {\n    \"title\": \"<string>\",\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"active\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"restriction\": {\n      \"id\": \"<integer>\",\n      \"ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"type\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/macros",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"macros"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"macro\": {\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"restriction\": {\n      \"dolor_30\": true,\n      \"amet__\": true\n    },\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"app_installation\": \"<string>\",\n    \"categories\": \"<string>\",\n    \"permissions\": \"<string>\",\n    \"usage_1h\": \"<integer>\",\n    \"usage_7d\": \"<integer>\",\n    \"usage_24h\": \"<integer>\",\n    \"usage_30d\": \"<integer>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "organization_fields",
							"item": [
								{
									"name": "{organization_field_id}",
									"item": [
										{
											"name": "Show Organization Field",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_fields/:organization_field_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_fields",
														":organization_field_id"
													],
													"variable": [
														{
															"key": "organization_field_id",
															"value": "<integer>",
															"description": "(Required) The ID or key of the organization field"
														}
													]
												},
												"description": "#### Allowed for\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organization_fields/:organization_field_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organization_fields",
																":organization_field_id"
															],
															"variable": [
																{
																	"key": "organization_field_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"organization_field\": {\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"system\": \"<boolean>\",\n    \"tag\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Organization Field",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_fields/:organization_field_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_fields",
														":organization_field_id"
													],
													"variable": [
														{
															"key": "organization_field_id",
															"value": "<integer>",
															"description": "(Required) The ID or key of the organization field"
														}
													]
												},
												"description": "#### Updating a Drop-down (Tagger) Field\n\nDrop-down fields return an array of `custom_field_options` which specify the name, value, and order of drop-down options. When updating a drop-down field, note the following information:\n\n- All options must be passed on update. Options that are not passed will be removed. As a result, these values will be removed from any organizations\n- To create a new option, pass a null `id` along with the `name` and `value`\n- To update an existing option, pass its `id` along with the `name` and `value`\n- To reorder an option, reposition it in the `custom_field_options` array relative to the other options\n- To remove an option, omit it from the list of options upon update\n\n#### Example Request\n\n```bash\ncurl https://{subdomain}.zendesk.com/api/v2/organization_fields/{organization_field_id}.json \\\n  -H \"Content-Type: application/json\" -X PUT \\\n  -d '{\"organization_field\": {\"custom_field_options\": [{\"id\": 124, \"name\": \"Option 2\", \"value\": \"option_2\"}, {\"id\": 123, \"name\": \"Option 1\", \"value\": \"option_1\"}, {\"id\": 125, \"name\": \"Option 3\", \"value\": \"option_3\"}]}}' \\\n  -v -u {email_address}:{password}\n```\n#### Allowed for\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organization_fields/:organization_field_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organization_fields",
																":organization_field_id"
															],
															"variable": [
																{
																	"key": "organization_field_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"organization_field\": {\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"system\": \"<boolean>\",\n    \"tag\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Organization Field",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_fields/:organization_field_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_fields",
														":organization_field_id"
													],
													"variable": [
														{
															"key": "organization_field_id",
															"value": "<integer>",
															"description": "(Required) The ID or key of the organization field"
														}
													]
												},
												"description": "#### Allowed for\n\n* Admins\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organization_fields/:organization_field_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organization_fields",
																":organization_field_id"
															],
															"variable": [
																{
																	"key": "organization_field_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "reorder",
									"item": [
										{
											"name": "Reorder Organization Field",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_fields/reorder",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_fields",
														"reorder"
													]
												},
												"description": "#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organization_fields/reorder",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organization_fields",
																"reorder"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "<string>"
												}
											]
										}
									]
								},
								{
									"name": "List Organization Fields",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/organization_fields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"organization_fields"
											]
										},
										"description": "Returns a list of custom organization fields in your account. Fields are returned in the order that you specify in your organization fields configuration in Zendesk Support. Clients should cache this resource for the duration of their API usage and map the key for each organization field to the values returned under the `organization_fields` attribute on the [organization](/api-reference/ticketing/organizations/organizations/) resource.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_fields"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"organization_fields\": [\n    {\n      \"key\": \"<string>\",\n      \"type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"custom_field_options\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_description\": \"<string>\",\n      \"raw_title\": \"<string>\",\n      \"regexp_for_validation\": \"<string>\",\n      \"relationship_filter\": {},\n      \"relationship_target_type\": \"<string>\",\n      \"system\": \"<boolean>\",\n      \"tag\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"custom_field_options\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_description\": \"<string>\",\n      \"raw_title\": \"<string>\",\n      \"regexp_for_validation\": \"<string>\",\n      \"relationship_filter\": {},\n      \"relationship_target_type\": \"<string>\",\n      \"system\": \"<boolean>\",\n      \"tag\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"previous_page\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create Organization Field",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/organization_fields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"organization_fields"
											]
										},
										"description": "Creates any of the following custom field types:\n\n* text (default when no \"type\" is specified)\n* textarea\n* checkbox\n* date\n* integer\n* decimal\n* regexp\n* dropdown\n* lookup\n\nSee [About custom field types](https://support.zendesk.com/hc/en-us/articles/203661866) in Zendesk help.\n\n#### Allowed For\n\n* Admins\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_fields"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"organization_field\": {\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"system\": \"<boolean>\",\n    \"tag\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "organization_memberships",
							"item": [
								{
									"name": "{organization_membership_id}",
									"item": [
										{
											"name": "Show Membership",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_memberships/:organization_membership_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_memberships",
														":organization_membership_id"
													],
													"variable": [
														{
															"key": "organization_membership_id",
															"value": "<integer>",
															"description": "(Required) The ID of the organization membership"
														}
													]
												},
												"description": "#### Allowed for\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organization_memberships/:organization_membership_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organization_memberships",
																":organization_membership_id"
															],
															"variable": [
																{
																	"key": "organization_membership_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"organization_membership\": {\n    \"user_id\": \"<integer>\",\n    \"organization_id\": \"<integer>\",\n    \"default\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"organization_name\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"view_tickets\": \"<boolean>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Membership",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_memberships/:organization_membership_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_memberships",
														":organization_membership_id"
													],
													"variable": [
														{
															"key": "organization_membership_id",
															"value": "<integer>",
															"description": "(Required) The ID of the organization membership"
														}
													]
												},
												"description": "Immediately removes a user from an organization and schedules a job to unassign all working tickets currently assigned to the user and organization combination. The `organization_id` of the unassigned tickets is set to null.\n\n#### Allowed for\n\n* Admins\n* Agents when deleting an organization membership for an end user\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organization_memberships/:organization_membership_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organization_memberships",
																":organization_membership_id"
															],
															"variable": [
																{
																	"key": "organization_membership_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "create_many",
									"item": [
										{
											"name": "Create Many Memberships",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_memberships/create_many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_memberships",
														"create_many"
													]
												},
												"description": "This endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n* Admins\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organization_memberships/create_many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organization_memberships",
																"create_many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Bulk Delete Memberships",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_memberships/destroy_many?ids=<integer>&ids=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_memberships",
														"destroy_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<integer>",
															"description": "The IDs of the organization memberships to delete"
														},
														{
															"key": "ids",
															"value": "<integer>",
															"description": "The IDs of the organization memberships to delete"
														}
													]
												},
												"description": "Immediately removes a user from an organization and schedules a job to unassign all working tickets currently assigned to the user and organization combination. The `organization_id` of the unassigned tickets is set to null.\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organization_memberships/destroy_many?ids=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organization_memberships",
																"destroy_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<integer>",
																	"description": "The IDs of the organization memberships to delete"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Memberships",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/organization_memberships",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"organization_memberships"
											]
										},
										"description": "Returns a list of organization memberships for the account, user or organization in question.\n\n**Note**: When returning organization memberships for a user, organization memberships are sorted with the default organization first, and then by organization name.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n- Agents\n- End users\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_memberships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_memberships"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"organization_memberships\": [\n    {\n      \"user_id\": \"<integer>\",\n      \"organization_id\": \"<integer>\",\n      \"default\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"organization_name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"view_tickets\": \"<boolean>\"\n    },\n    {\n      \"user_id\": \"<integer>\",\n      \"organization_id\": \"<integer>\",\n      \"default\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"organization_name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"view_tickets\": \"<boolean>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Membership",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/organization_memberships",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"organization_memberships"
											]
										},
										"description": "Assigns a user to a given organization. Returns an error with status 422 if the user is already assigned to the organization.\n\n#### Allowed For\n\n* Admins\n* Agents when creating a new organization membership for an end user\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_memberships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_memberships"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"organization_membership\": {\n    \"user_id\": \"<integer>\",\n    \"organization_id\": \"<integer>\",\n    \"default\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"organization_name\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"view_tickets\": \"<boolean>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "organization_subscriptions",
							"item": [
								{
									"name": "{organization_subscription_id}",
									"item": [
										{
											"name": "Show Organization Subscription",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_subscriptions/:organization_subscription_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_subscriptions",
														":organization_subscription_id"
													],
													"variable": [
														{
															"key": "organization_subscription_id",
															"value": "<integer>",
															"description": "(Required) The ID of the organization subscription"
														}
													]
												},
												"description": "#### Allowed For:\n\n* Agents\n* End users\n\nFor end users, the response will only list the subscriptions created by the requesting end user."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organization_subscriptions/:organization_subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organization_subscriptions",
																":organization_subscription_id"
															],
															"variable": [
																{
																	"key": "organization_subscription_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"organization_subscription\": {\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"organization_id\": \"<integer>\",\n    \"user_id\": \"<integer>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Organization Subscription",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_subscriptions/:organization_subscription_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_subscriptions",
														":organization_subscription_id"
													],
													"variable": [
														{
															"key": "organization_subscription_id",
															"value": "<integer>",
															"description": "(Required) The ID of the organization subscription"
														}
													]
												},
												"description": "#### Allowed For:\n\n* Agents\n* End users"
											},
											"response": [
												{
													"name": "No content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organization_subscriptions/:organization_subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organization_subscriptions",
																":organization_subscription_id"
															],
															"variable": [
																{
																	"key": "organization_subscription_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "List Organization Subscriptions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/organization_subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"organization_subscriptions"
											]
										},
										"description": "#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For:\n\n* Agents\n* End users\n\nFor end users, the response will only list the subscriptions created by the requesting end user."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_subscriptions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"organization_subscriptions\": [\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"organization_id\": \"<integer>\",\n      \"user_id\": \"<integer>\"\n    },\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"organization_id\": \"<integer>\",\n      \"user_id\": \"<integer>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Organization Subscription",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"organization_subscription\": {\n    \"organization_id\": \"<integer>\",\n    \"user_id\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/organization_subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"organization_subscriptions"
											]
										},
										"description": "#### Allowed For:\n\n* Agents\n* End users\n\nEnd users can only subscribe to shared organizations in which they're members."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"organization_subscription\": {\n    \"organization_id\": \"<integer>\",\n    \"user_id\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/organization_subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organization_subscriptions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"organization_subscription\": {\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"organization_id\": \"<integer>\",\n    \"user_id\": \"<integer>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "organizations",
							"item": [
								{
									"name": "{organization_id}",
									"item": [
										{
											"name": "related",
											"item": [
												{
													"name": "Show Organization's Related Information",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/:organization_id/related",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																":organization_id",
																"related"
															],
															"variable": [
																{
																	"key": "organization_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of an organization"
																}
															]
														},
														"description": "#### Allowed For\n\n* Agents\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/organizations/:organization_id/related",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"organizations",
																		":organization_id",
																		"related"
																	],
																	"variable": [
																		{
																			"key": "organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"organization_related\": {\n    \"tickets_count\": \"<integer>\",\n    \"users_count\": \"<integer>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Show Organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations/:organization_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations",
														":organization_id"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "<integer>",
															"description": "(Required) The ID of an organization"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/:organization_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																":organization_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"organization\": {\n    \"created_at\": \"<string>\",\n    \"details\": \"<string>\",\n    \"domain_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"external_id\": \"<string>\",\n    \"group_id\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"organization_fields\": {\n      \"nostrud_d\": \"<string>\"\n    },\n    \"shared_comments\": \"<boolean>\",\n    \"shared_tickets\": \"<boolean>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Organization",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations/:organization_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations",
														":organization_id"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "<integer>",
															"description": "(Required) The ID of an organization"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins\n* Agents\n\nAgents with no permissions restrictions can only update \"notes\" on organizations.\n\n**Note:** Updating an organization's `domain_names` property overwrites all existing `domain_names` values. To prevent this, submit a complete list of `domain_names` for the organization in your request.\n\n#### Example Request\n\n```js\n{\n  \"organization\": {\n    \"notes\": \"Something interesting\"\n  }\n}\n```\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/:organization_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																":organization_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"organization\": {\n    \"created_at\": \"<string>\",\n    \"details\": \"<string>\",\n    \"domain_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"external_id\": \"<string>\",\n    \"group_id\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"organization_fields\": {\n      \"nostrud_d\": \"<string>\"\n    },\n    \"shared_comments\": \"<boolean>\",\n    \"shared_tickets\": \"<boolean>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/:organization_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																":organization_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete Organization",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations/:organization_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations",
														":organization_id"
													],
													"variable": [
														{
															"key": "organization_id",
															"value": "<integer>",
															"description": "(Required) The ID of an organization"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage organizations (Enterprise only)\n"
											},
											"response": [
												{
													"name": "No Content Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/:organization_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																":organization_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "autocomplete",
									"item": [
										{
											"name": "Autocomplete Organizations",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations/autocomplete?name=<string>&field_id=<string>&source=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations",
														"autocomplete"
													],
													"query": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) A substring of an organization to search for"
														},
														{
															"key": "field_id",
															"value": "<string>",
															"description": "The id of a lookup relationship field.  The type of field is determined\nby the `source` param\n"
														},
														{
															"key": "source",
															"value": "<string>",
															"description": "If a `field_id` is provided, this specifies the type of the field.\nFor example, if the field is on a \"zen:user\", it references a field on a user\n"
														}
													]
												},
												"description": "Returns an array of organizations whose name starts with the\nvalue specified in the `name` parameter.\n\n#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/autocomplete?name=<string>&field_id=<string>&source=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																"autocomplete"
															],
															"query": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) A substring of an organization to search for"
																},
																{
																	"key": "field_id",
																	"value": "<string>",
																	"description": "The id of a lookup relationship field.  The type of field is determined\nby the `source` param\n"
																},
																{
																	"key": "source",
																	"value": "<string>",
																	"description": "If a `field_id` is provided, this specifies the type of the field.\nFor example, if the field is on a \"zen:user\", it references a field on a user\n"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"organizations\": [\n    {\n      \"created_at\": \"<string>\",\n      \"details\": \"<string>\",\n      \"domain_names\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"external_id\": \"<string>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"organization_fields\": {\n        \"Excepteur_5\": \"<string>\"\n      },\n      \"shared_comments\": \"<boolean>\",\n      \"shared_tickets\": \"<boolean>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created_at\": \"<string>\",\n      \"details\": \"<string>\",\n      \"domain_names\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"external_id\": \"<string>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"organization_fields\": {\n        \"velitadf\": \"<string>\",\n        \"Ut_07\": \"<string>\",\n        \"id_b\": \"<string>\"\n      },\n      \"shared_comments\": \"<boolean>\",\n      \"shared_tickets\": \"<boolean>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"previous_page\": \"<string>\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/autocomplete?name=<string>&field_id=<string>&source=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																"autocomplete"
															],
															"query": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) A substring of an organization to search for"
																},
																{
																	"key": "field_id",
																	"value": "<string>",
																	"description": "The id of a lookup relationship field.  The type of field is determined\nby the `source` param\n"
																},
																{
																	"key": "source",
																	"value": "<string>",
																	"description": "If a `field_id` is provided, this specifies the type of the field.\nFor example, if the field is on a \"zen:user\", it references a field on a user\n"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/autocomplete?name=<string>&field_id=<string>&source=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																"autocomplete"
															],
															"query": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) A substring of an organization to search for"
																},
																{
																	"key": "field_id",
																	"value": "<string>",
																	"description": "The id of a lookup relationship field.  The type of field is determined\nby the `source` param\n"
																},
																{
																	"key": "source",
																	"value": "<string>",
																	"description": "If a `field_id` is provided, this specifies the type of the field.\nFor example, if the field is on a \"zen:user\", it references a field on a user\n"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/autocomplete?name=<string>&field_id=<string>&source=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																"autocomplete"
															],
															"query": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) A substring of an organization to search for"
																},
																{
																	"key": "field_id",
																	"value": "<string>",
																	"description": "The id of a lookup relationship field.  The type of field is determined\nby the `source` param\n"
																},
																{
																	"key": "source",
																	"value": "<string>",
																	"description": "If a `field_id` is provided, this specifies the type of the field.\nFor example, if the field is on a \"zen:user\", it references a field on a user\n"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "count",
									"item": [
										{
											"name": "Count Organizations",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations",
														"count"
													]
												},
												"description": "Returns an approximate count of organizations. If the count exceeds\n100,000, it is updated every 24 hours.\n\nThe `refreshed_at` property of the `count` object is a timestamp that indicates\nwhen the count was last updated.\n\nWhen the count exceeds 100,000, the `refreshed_at` property may\noccasionally be null. This indicates that the count is being\nupdated in the background and the `value` property of the `count` object is limited to\n100,000 until the update is complete.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																"count"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": {\n    \"refreshed_at\": \"<string>\",\n    \"value\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "create_many",
									"item": [
										{
											"name": "Create Many Organizations",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations/create_many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations",
														"create_many"
													]
												},
												"description": "Accepts an array of up to 100 organization objects.\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Agents, with restrictions applying on certain actions\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/create_many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																"create_many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "create_or_update",
									"item": [
										{
											"name": "Create Or Update Organization",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations/create_or_update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations",
														"create_or_update"
													]
												},
												"description": "Creates an organization if it doesn't already exist, or updates\nan existing organization. Using this method means one less call\nto check if an organization exists before creating it. You need\nto specify the id or external id when updating\nan organization to avoid a duplicate error response. Name is\nnot available as a matching criteria.\n\n#### Allowed For\n\n* Agents, with restrictions on certain actions\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/create_or_update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																"create_or_update"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"organization\": {\n    \"created_at\": \"<string>\",\n    \"details\": \"<string>\",\n    \"domain_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"external_id\": \"<string>\",\n    \"group_id\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"organization_fields\": {\n      \"nostrud_d\": \"<string>\"\n    },\n    \"shared_comments\": \"<boolean>\",\n    \"shared_tickets\": \"<boolean>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Created response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/create_or_update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																"create_or_update"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"organization\": {\n    \"created_at\": \"<string>\",\n    \"details\": \"<string>\",\n    \"domain_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"external_id\": \"<string>\",\n    \"group_id\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"organization_fields\": {\n      \"nostrud_d\": \"<string>\"\n    },\n    \"shared_comments\": \"<boolean>\",\n    \"shared_tickets\": \"<boolean>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Bulk Delete Organizations",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations/destroy_many?ids=<string>&external_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations",
														"destroy_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "A list of organization ids"
														},
														{
															"key": "external_ids",
															"value": "<string>",
															"description": "A list of external ids"
														}
													]
												},
												"description": "Accepts a comma-separated list of up to 100 organization ids or external ids.\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage organizations (Enterprise only)\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/destroy_many?ids=<string>&external_ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																"destroy_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "A list of organization ids"
																},
																{
																	"key": "external_ids",
																	"value": "<string>",
																	"description": "A list of external ids"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "search",
									"item": [
										{
											"name": "Search Organizations by External ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations/search?external_id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations",
														"search"
													],
													"query": [
														{
															"key": "external_id",
															"value": "<integer>",
															"description": "(Required) The external id of an organization"
														}
													]
												},
												"description": "If you set the `external_id` value of an organization to associate it to an external record, you can use the external id to search for the organization.\n\n#### Allowed For:\n\n* Admins\n* Agents assigned to a custom role with permissions to add or modify organizations (Enterprise only)\n\nSee [Creating custom agent roles](https://support.zendesk.com/hc/en-us/articles/203662026#topic_cxn_hig_bd) in the Support Help Center.\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/search?external_id=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																"search"
															],
															"query": [
																{
																	"key": "external_id",
																	"value": "<integer>",
																	"description": "(Required) The external id of an organization"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"organizations\": [\n    {\n      \"created_at\": \"<string>\",\n      \"details\": \"<string>\",\n      \"domain_names\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"external_id\": \"<string>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"organization_fields\": {\n        \"Excepteur_5\": \"<string>\"\n      },\n      \"shared_comments\": \"<boolean>\",\n      \"shared_tickets\": \"<boolean>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created_at\": \"<string>\",\n      \"details\": \"<string>\",\n      \"domain_names\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"external_id\": \"<string>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"organization_fields\": {\n        \"velitadf\": \"<string>\",\n        \"Ut_07\": \"<string>\",\n        \"id_b\": \"<string>\"\n      },\n      \"shared_comments\": \"<boolean>\",\n      \"shared_tickets\": \"<boolean>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"previous_page\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "show_many",
									"item": [
										{
											"name": "Show Many Organizations",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations/show_many?ids=<string>&external_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations",
														"show_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "A list of organization ids"
														},
														{
															"key": "external_ids",
															"value": "<string>",
															"description": "A list of external ids"
														}
													]
												},
												"description": "Accepts a comma-separated list of up to 100 organization ids or external ids.\n\n#### Allowed For\n\n* Admins\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/show_many?ids=<string>&external_ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																"show_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "A list of organization ids"
																},
																{
																	"key": "external_ids",
																	"value": "<string>",
																	"description": "A list of external ids"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"organizations\": [\n    {\n      \"created_at\": \"<string>\",\n      \"details\": \"<string>\",\n      \"domain_names\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"external_id\": \"<string>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"organization_fields\": {\n        \"Excepteur_5\": \"<string>\"\n      },\n      \"shared_comments\": \"<boolean>\",\n      \"shared_tickets\": \"<boolean>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created_at\": \"<string>\",\n      \"details\": \"<string>\",\n      \"domain_names\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"external_id\": \"<string>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"organization_fields\": {\n        \"velitadf\": \"<string>\",\n        \"Ut_07\": \"<string>\",\n        \"id_b\": \"<string>\"\n      },\n      \"shared_comments\": \"<boolean>\",\n      \"shared_tickets\": \"<boolean>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"previous_page\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "update_many",
									"item": [
										{
											"name": "Update Many Organizations",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations/update_many?ids=<string>&external_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations",
														"update_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "A list of organization ids"
														},
														{
															"key": "external_ids",
															"value": "<string>",
															"description": "A list of external ids"
														}
													]
												},
												"description": "Bulk or batch updates up to 100 organizations.\n\n#### Bulk update\n\nTo make the same change to multiple organizations, use the following endpoint and data format:\n\n`https://{subdomain}.zendesk.com/api/v2/organizations/update_many.json?ids=1,2,3`\n\n```js\n{\n  \"organization\": {\n    \"notes\": \"Priority\"\n  }\n}\n```\n\n#### Batch update\n\nTo make different changes to multiple organizations, use the following endpoint and data format:\n\n`https://{subdomain}.zendesk.com/api/v2/organizations/update_many.json`\n\n```js\n{\n  \"organizations\": [\n    { \"id\": 1, \"notes\": \"Priority\" },\n    { \"id\": 2, \"notes\": \"Normal\" }\n  ]\n}\n```\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Admins\n* Agents\n\nAgents with no permissions restrictions can only update \"notes\" on organizations.\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/organizations/update_many?ids=<string>&external_ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"organizations",
																"update_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "A list of organization ids"
																},
																{
																	"key": "external_ids",
																	"value": "<string>",
																	"description": "A list of external ids"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Organizations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/organizations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"organizations"
											]
										},
										"description": "#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents, with certain restrictions\n\nIf the agent has a custom agent role that restricts their access to only users in their own organization, a 403 Forbidden error is returned. See [Creating custom agent roles](https://support.zendesk.com/hc/en-us/articles/203662026-Creating-custom-roles-and-assigning-agents#topic_cxn_hig_bd) in Zendesk help.\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"organizations\": [\n    {\n      \"created_at\": \"<string>\",\n      \"details\": \"<string>\",\n      \"domain_names\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"external_id\": \"<string>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"organization_fields\": {\n        \"Excepteur_5\": \"<string>\"\n      },\n      \"shared_comments\": \"<boolean>\",\n      \"shared_tickets\": \"<boolean>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created_at\": \"<string>\",\n      \"details\": \"<string>\",\n      \"domain_names\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"external_id\": \"<string>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"organization_fields\": {\n        \"velitadf\": \"<string>\",\n        \"Ut_07\": \"<string>\",\n        \"id_b\": \"<string>\"\n      },\n      \"shared_comments\": \"<boolean>\",\n      \"shared_tickets\": \"<boolean>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"previous_page\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create Organization",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/organizations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"organizations"
											]
										},
										"description": "You must provide a unique `name` for each organization. Normally\nthe system doesn't allow records to be created with identical names.\nHowever, a race condition can occur if you make two or more identical\nPOSTs very close to each other, causing the records to have identical\norganization names.\n\n#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage organizations (Enterprise only)\n"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/organizations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"organizations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"organization\": {\n    \"created_at\": \"<string>\",\n    \"details\": \"<string>\",\n    \"domain_names\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"external_id\": \"<string>\",\n    \"group_id\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"organization_fields\": {\n      \"nostrud_d\": \"<string>\"\n    },\n    \"shared_comments\": \"<boolean>\",\n    \"shared_tickets\": \"<boolean>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "problems",
							"item": [
								{
									"name": "autocomplete",
									"item": [
										{
											"name": "Autocomplete Problems",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"text\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/problems/autocomplete?text=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"problems",
														"autocomplete"
													],
													"query": [
														{
															"key": "text",
															"value": "<string>",
															"description": "The text to search for"
														}
													]
												},
												"description": "Returns tickets whose type is \"problem\" and whose subject contains the string specified in the `text` parameter.\n\nYou can specify the `text` parameter in the request body rather than the query string. Example:\n\n`{\"text\": \"fire\"}`\n\n#### Allowed For\n\n* Agents"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"text\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/problems/autocomplete?text=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"problems",
																"autocomplete"
															],
															"query": [
																{
																	"key": "text",
																	"value": "<string>",
																	"description": "The text to search for"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"dolore_8a\": true,\n  \"veniam_583\": 12896263,\n  \"veniam30\": \"sit exercitation non\",\n  \"do__18\": 33453616,\n  \"voluptate_b7e\": \"mollit in\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Ticket Problems",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/problems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"problems"
											]
										},
										"description": "The response is always ordered by `updated_at` in descending order\n\n#### Allowed For\n\n* Agents\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/)."
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/problems",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"problems"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"dolore_8a\": true,\n  \"veniam_583\": 12896263,\n  \"veniam30\": \"sit exercitation non\",\n  \"do__18\": 33453616,\n  \"voluptate_b7e\": \"mollit in\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "push_notification_devices",
							"item": [
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Bulk Unregister Push Notification Devices",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/push_notification_devices/destroy_many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"push_notification_devices",
														"destroy_many"
													]
												},
												"description": "Unregisters the mobile devices that are receiving push notifications. Specify the devices as an array of mobile device tokens.\n\n#### Allowed for\n\n* Admins"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/push_notification_devices/destroy_many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"push_notification_devices",
																"destroy_many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "<string>"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "recipient_addresses",
							"item": [
								{
									"name": "{support_address_id}",
									"item": [
										{
											"name": "verify",
											"item": [
												{
													"name": "Verify Support Address Forwarding",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/recipient_addresses/:support_address_id/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"recipient_addresses",
																":support_address_id",
																"verify"
															],
															"variable": [
																{
																	"key": "support_address_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the support address"
																}
															]
														},
														"description": "Sends a test email to the specified support address to verify that email forwarding for the address works. An external support address won't work in Zendesk Support until it's verified.\n\n**Note**: You don't need to verify Zendesk support addresses.\n\nThe endpoint takes the following body parameter: `{\"type\": \"forwarding\"}`.\n\nUse this endpoint after [adding](#create-support-address) an external support address to Zendesk Support and setting up forwarding on your email server. See [Forwarding incoming email to Zendesk Support](https://support.zendesk.com/hc/en-us/articles/203663266).\n\nThe endpoint doesn't return the results of the test. Instead, use the [Show Support Address](#show-support-address) endpoint to check that the `forwarding_status` property is \"verified\".\n\n#### Allowed For\n\n* Admins\n* Agents with permission to manage channels and extensions. See the system permissions in [Creating custom roles and assigning agents (Enterprise)](https://support.zendesk.com/hc/en-us/articles/203662026-Creating-custom-roles-and-assigning-agents-Enterprise-#topic_cxn_hig_bd) in the Support Help Center\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/recipient_addresses/:support_address_id/verify",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"recipient_addresses",
																		":support_address_id",
																		"verify"
																	],
																	"variable": [
																		{
																			"key": "support_address_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "<string>"
														}
													]
												}
											]
										},
										{
											"name": "Show Support Address",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/recipient_addresses/:support_address_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"recipient_addresses",
														":support_address_id"
													],
													"variable": [
														{
															"key": "support_address_id",
															"value": "<integer>",
															"description": "(Required) The ID of the support address"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/recipient_addresses/:support_address_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"recipient_addresses",
																":support_address_id"
															],
															"variable": [
																{
																	"key": "support_address_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"recipient_address\": {\n    \"email\": \"<string>\",\n    \"brand_id\": \"<integer>\",\n    \"cname_status\": \"verified\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"dns_results\": \"failed\",\n    \"domain_verification_code\": \"<string>\",\n    \"domain_verification_status\": \"failed\",\n    \"forwarding_status\": \"waiting\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"spf_status\": \"failed\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Support Address",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/recipient_addresses/:support_address_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"recipient_addresses",
														":support_address_id"
													],
													"variable": [
														{
															"key": "support_address_id",
															"value": "<integer>",
															"description": "(Required) The ID of the support address"
														}
													]
												},
												"description": "Updates an existing support address for your account.\n\nYou can't use this endpoint to update a support address's `email` property.\nInstead, you can create a new address using the [Create Support\nAddress](#create-support-address) endpoint.\n\n#### Allowed For\n\n* Admins\n* Agents with permission to manage channels and extensions. See the system permissions in [Creating custom roles and assigning agents (Enterprise)](https://support.zendesk.com/hc/en-us/articles/203662026-Creating-custom-roles-and-assigning-agents-Enterprise-#topic_cxn_hig_bd) in the Support Help Center\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/recipient_addresses/:support_address_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"recipient_addresses",
																":support_address_id"
															],
															"variable": [
																{
																	"key": "support_address_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"recipient_address\": {\n    \"email\": \"<string>\",\n    \"brand_id\": \"<integer>\",\n    \"cname_status\": \"verified\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"dns_results\": \"failed\",\n    \"domain_verification_code\": \"<string>\",\n    \"domain_verification_status\": \"failed\",\n    \"forwarding_status\": \"waiting\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"spf_status\": \"failed\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Support Address",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/recipient_addresses/:support_address_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"recipient_addresses",
														":support_address_id"
													],
													"variable": [
														{
															"key": "support_address_id",
															"value": "<integer>",
															"description": "(Required) The ID of the support address"
														}
													]
												},
												"description": "Deletes a support address.\n\n#### Allowed For\n\n* Admins\n* Agents with permission to manage channels and extensions. See the system permissions in [Creating custom roles and assigning agents (Enterprise)](https://support.zendesk.com/hc/en-us/articles/203662026-Creating-custom-roles-and-assigning-agents-Enterprise-#topic_cxn_hig_bd) in the Support Help Center\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/recipient_addresses/:support_address_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"recipient_addresses",
																":support_address_id"
															],
															"variable": [
																{
																	"key": "support_address_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "List Support Addresses",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/recipient_addresses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"recipient_addresses"
											]
										},
										"description": "Lists all the support addresses for the account.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Admins\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/recipient_addresses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"recipient_addresses"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"recipient_addresses\": [\n    {\n      \"email\": \"<string>\",\n      \"brand_id\": \"<integer>\",\n      \"cname_status\": \"verified\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"dns_results\": \"failed\",\n      \"domain_verification_code\": \"<string>\",\n      \"domain_verification_status\": \"unknown\",\n      \"forwarding_status\": \"failed\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"spf_status\": \"verified\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"brand_id\": \"<integer>\",\n      \"cname_status\": \"unknown\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"dns_results\": \"verified\",\n      \"domain_verification_code\": \"<string>\",\n      \"domain_verification_status\": \"verified\",\n      \"forwarding_status\": \"verified\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"spf_status\": \"unknown\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Support Address",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/recipient_addresses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"recipient_addresses"
											]
										},
										"description": "Adds a Zendesk or external support address to your account.\n\nTo add a Zendesk address, use the following syntax: `{local-part}@{accountname}.zendesk.com`.\nExample: 'sales-team@example.zendesk.com'. The [local-part](https://en.wikipedia.org/wiki/Email_address#Local-part) can be anything you like.\n\nTo add an external email address such as help@omniwearshop.com, the email must already exist and you must set up forwarding on your email server. The exact steps depend on your mail server. See [Forwarding incoming email to Zendesk Support](https://support.zendesk.com/hc/en-us/articles/203663266). After setting up forwarding, run the [Verify Support Address Forwarding](#verify-support-address-forwarding) endpoint. The address won't work in Zendesk Support until it's been verified.\n\n#### Allowed For\n\n* Admins\n* Agents with permission to manage channels and extensions. See the system permissions in [Creating custom roles and assigning agents (Enterprise)](https://support.zendesk.com/hc/en-us/articles/203662026-Creating-custom-roles-and-assigning-agents-Enterprise-#topic_cxn_hig_bd) in the Support Help Center\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/recipient_addresses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"recipient_addresses"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"recipient_address\": {\n    \"email\": \"<string>\",\n    \"brand_id\": \"<integer>\",\n    \"cname_status\": \"verified\",\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"dns_results\": \"failed\",\n    \"domain_verification_code\": \"<string>\",\n    \"domain_verification_status\": \"failed\",\n    \"forwarding_status\": \"waiting\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"spf_status\": \"failed\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "relationships",
							"item": [
								{
									"name": "definitions",
									"item": [
										{
											"name": "{target_type}",
											"item": [
												{
													"name": "Filter Definitions",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/relationships/definitions/:target_type",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"relationships",
																"definitions",
																":target_type"
															],
															"variable": [
																{
																	"key": "target_type",
																	"value": "<string>",
																	"description": "(Required) The target type for which you would like to see filter definitions.\nThe options are \"zen:user\", \"zen:ticket\", \"zen:organization\", and \"zen:custom_object:CUSTOM_OBJECT_KEY\"\n"
																}
															]
														},
														"description": "Returns filter definitions based on the given target type.  Target types\ninclude users (zen:user), tickets (zen:ticket), organizations (zen:organization), or custom objects (zen:custom_object:CUSTOM_OBJECT_KEY).\nThe returned filter definitions are the options that you can use to build a custom field or ticket field's\n`relationship_filter`.\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/relationships/definitions/:target_type",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"relationships",
																		"definitions",
																		":target_type"
																	],
																	"variable": [
																		{
																			"key": "target_type"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"definitions\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"conditions_all\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"group\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"nullable\": {\n              \"type\": \"boolean\",\n              \"default\": \"<boolean>\"\n            },\n            \"operators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"terminal\": {\n                    \"type\": \"boolean\",\n                    \"default\": \"<boolean>\"\n                  },\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  },\n                  \"value\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  }\n                }\n              }\n            },\n            \"repeatable\": {\n              \"type\": \"boolean\",\n              \"default\": \"<boolean>\"\n            },\n            \"subject\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"values\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"enabled\": {\n                    \"type\": \"boolean\",\n                    \"default\": \"<boolean>\"\n                  },\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  },\n                  \"value\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"conditions_any\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"group\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"nullable\": {\n              \"type\": \"boolean\",\n              \"default\": \"<boolean>\"\n            },\n            \"operators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"terminal\": {\n                    \"type\": \"boolean\",\n                    \"default\": \"<boolean>\"\n                  },\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  },\n                  \"value\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  }\n                }\n              }\n            },\n            \"repeatable\": {\n              \"type\": \"boolean\",\n              \"default\": \"<boolean>\"\n            },\n            \"subject\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "requests",
							"item": [
								{
									"name": "{request_id}",
									"item": [
										{
											"name": "comments",
											"item": [
												{
													"name": "{ticket_comment_id}",
													"item": [
														{
															"name": "Getting Comments",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/requests/:request_id/comments/:ticket_comment_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"requests",
																		":request_id",
																		"comments",
																		":ticket_comment_id"
																	],
																	"variable": [
																		{
																			"key": "request_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the request"
																		},
																		{
																			"key": "ticket_comment_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the ticket comment"
																		}
																	]
																},
																"description": "#### Allowed For\n\n* End Users\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/requests/:request_id/comments/:ticket_comment_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"requests",
																				":request_id",
																				"comments",
																				":ticket_comment_id"
																			],
																			"variable": [
																				{
																					"key": "request_id"
																				},
																				{
																					"key": "ticket_comment_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"comment\": {\n    \"attachments\": [\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\",\n        \"thumbnails\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\",\n        \"thumbnails\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"audit_id\": \"<integer>\",\n    \"author_id\": \"<integer>\",\n    \"body\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"html_body\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"metadata\": {\n      \"Duis620\": -98653633,\n      \"esse90e\": \"aliquip enim laboris\"\n    },\n    \"plain_body\": \"<string>\",\n    \"public\": \"<boolean>\",\n    \"type\": \"<string>\",\n    \"uploads\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"velitac\": false,\n        \"minima\": \"dolore commodo Excepte\"\n      }\n    }\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "Listing Comments",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/requests/:request_id/comments?since=<string>&role=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"requests",
																":request_id",
																"comments"
															],
															"query": [
																{
																	"key": "since",
																	"value": "<string>",
																	"description": "Filters the comments from the given datetime"
																},
																{
																	"key": "role",
																	"value": "<string>",
																	"description": "One of \"agent\", \"end_user\". If not specified it does not filter"
																}
															],
															"variable": [
																{
																	"key": "request_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the request"
																}
															]
														},
														"description": "#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\n#### Sorting\n\nBy default, comments are sorted by creation date in ascending order.\n\nWhen using cursor pagination, use the following parameter to change the sort order:\n\n| Name   | Type   | Required | Comments\n| ------ | ------ | -------- | --------\n| `sort` | string | no       | Possible values are \"created_at\" (ascending order) or \"-created_at\" (descending order)\n\nWhen using offset pagination, use the following parameters to change the sort order:\n\n| Name         | Type   | Required | Comments\n| ------------ | ------ | -------- | --------\n| `sort_by`    | string | no       | One of `created_at`, `updated_at`\n| `sort_order` | string | no       | One of `asc`, `desc`\n\n#### Allowed For\n\n* End Users\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/requests/:request_id/comments?since=<string>&role=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"requests",
																		":request_id",
																		"comments"
																	],
																	"query": [
																		{
																			"key": "since",
																			"value": "<string>",
																			"description": "Filters the comments from the given datetime"
																		},
																		{
																			"key": "role",
																			"value": "<string>",
																			"description": "One of \"agent\", \"end_user\". If not specified it does not filter"
																		}
																	],
																	"variable": [
																		{
																			"key": "request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"comments\": [\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"audit_id\": \"<integer>\",\n      \"author_id\": \"<integer>\",\n      \"body\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"html_body\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"animefc\": \"laborum occaecat incididunt\"\n      },\n      \"plain_body\": \"<string>\",\n      \"public\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"uploads\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"Lorem972\": -90498843\n        }\n      }\n    },\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"audit_id\": \"<integer>\",\n      \"author_id\": \"<integer>\",\n      \"body\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"html_body\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"velit_62\": 2175201,\n        \"adipisicing2\": -5163042\n      },\n      \"plain_body\": \"<string>\",\n      \"public\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"uploads\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"esse_640\": 11526006,\n          \"ex36\": \"sint consequat est\",\n          \"elita9\": \"aliquip sint ea\"\n        }\n      }\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Show Request",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/requests/:request_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"requests",
														":request_id"
													],
													"variable": [
														{
															"key": "request_id",
															"value": "<integer>",
															"description": "(Required) The ID of the request"
														}
													]
												},
												"description": "#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| users            | The email ccs for a request by side-loading users\n\n#### Allowed For\n\n* End Users\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/requests/:request_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"requests",
																":request_id"
															],
															"variable": [
																{
																	"key": "request_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request\": {\n    \"subject\": \"<string>\",\n    \"assignee_id\": \"<integer>\",\n    \"can_be_solved_by_me\": \"<boolean>\",\n    \"collaborator_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"created_at\": \"<dateTime>\",\n    \"custom_fields\": [\n      {\n        \"id\": \"<integer>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"custom_status_id\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"due_at\": \"<dateTime>\",\n    \"email_cc_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"followup_source_id\": \"<integer>\",\n    \"group_id\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"is_public\": \"<boolean>\",\n    \"organization_id\": \"<integer>\",\n    \"priority\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"requester_id\": \"<integer>\",\n    \"solved\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"ticket_form_id\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"magnae\": \"eiusmod ad\",\n        \"incididunt27\": 6281403.713632822,\n        \"aliquad3c\": -20946331\n      }\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "Update Request",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/requests/:request_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"requests",
														":request_id"
													],
													"variable": [
														{
															"key": "request_id",
															"value": "<integer>",
															"description": "(Required) The ID of the request"
														}
													]
												},
												"description": "Updates a request with a comment or collaborators (cc's). The end user who created the request can also use it to mark the request as solved. The endpoint can't be used to update other request attributes.\n\n#### Writable properties\nThis endpoint can only update the following properties in the request.\n\n| Name                     | Type    | Required | Description                                          |\n| ------------------------ | ------- | -------- | ---------------------------------------------------- |\n| comment                  | object  | no       | Adds a comment to the request. See [Request comments](#request-comments) |\n| solved                   | boolean | no       | Marks the request as solved. Example: `{\"request\": {\"solved\": \"true\"}}` |\n| additional_collaborators | array   | no       | Adds collaborators to the request. An email notification is sent to them when the ticket is updated. See [Adding collaborators](/documentation/ticketing/managing-tickets/creating-and-managing-requests#adding-collaborators) |\n\n#### Allowed For\n\n* End users\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/requests/:request_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"requests",
																":request_id"
															],
															"variable": [
																{
																	"key": "request_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"request\": {\n    \"subject\": \"<string>\",\n    \"assignee_id\": \"<integer>\",\n    \"can_be_solved_by_me\": \"<boolean>\",\n    \"collaborator_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"created_at\": \"<dateTime>\",\n    \"custom_fields\": [\n      {\n        \"id\": \"<integer>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"custom_status_id\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"due_at\": \"<dateTime>\",\n    \"email_cc_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"followup_source_id\": \"<integer>\",\n    \"group_id\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"is_public\": \"<boolean>\",\n    \"organization_id\": \"<integer>\",\n    \"priority\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"requester_id\": \"<integer>\",\n    \"solved\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"ticket_form_id\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"magnae\": \"eiusmod ad\",\n        \"incididunt27\": 6281403.713632822,\n        \"aliquad3c\": -20946331\n      }\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "search",
									"item": [
										{
											"name": "Search Requests",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/requests/search",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"requests",
														"search"
													],
													"variable": [
														{
															"key": "query",
															"value": "<string>",
															"description": "The syntax and matching logic for the string is detailed in the [Zendesk Support search reference](https://support.zendesk.com/hc/en-us/articles/203663226). See also [Query basics](/api-reference/ticketing/ticket-management/search/#query-basics) in the Tickets API doc."
														}
													]
												},
												"description": "Examples:\n\n* `GET /api/v2/requests/search.json?query=printer`\n* `GET /api/v2/requests/search.json?query=printer&organization_id=1`\n* `GET /api/v2/requests/search.json?query=printer&cc_id=true`\n* `GET /api/v2/requests/search.json?query=printer&status=hold,open`\n\n#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Results limit\n\nThe Search Requests endpoint returns up to 1,000 results per query, with a maximum of 100 results per page. See [Pagination](/api-reference/ticketing/introduction/#pagination). If you request a page past the limit (`page=11` at 100 results per page), a 422 Insufficient Resource Error is returned.\n\n#### Allowed For\n\n* End Users\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/requests/search",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"requests",
																"search"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"requests\": [\n    {\n      \"subject\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"can_be_solved_by_me\": \"<boolean>\",\n      \"collaborator_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": [\n        {\n          \"id\": \"<integer>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"followup_source_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester_id\": \"<integer>\",\n      \"solved\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"sit_30\": true,\n          \"id60\": -58668177.91277215,\n          \"anim_a\": \"sed est nulla in\"\n        }\n      }\n    },\n    {\n      \"subject\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"can_be_solved_by_me\": \"<boolean>\",\n      \"collaborator_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": [\n        {\n          \"id\": \"<integer>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"followup_source_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester_id\": \"<integer>\",\n      \"solved\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"nisi1b6\": -11008841.508747384,\n          \"Excepteurd\": false,\n          \"in_05\": 16424619,\n          \"est_6\": -75685034.61741143\n        }\n      }\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Requests",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/requests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"requests"
											],
											"variable": [
												{
													"key": "sort_by",
													"value": "<string>",
													"description": "Possible values are \"updated_at\", \"created_at\""
												},
												{
													"key": "sort_order",
													"value": "<string>",
													"description": "One of \"asc\", \"desc\". Defaults to \"asc\""
												}
											]
										},
										"description": "#### Allowed for\n\n* End Users\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"requests"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"requests\": [\n    {\n      \"subject\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"can_be_solved_by_me\": \"<boolean>\",\n      \"collaborator_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": [\n        {\n          \"id\": \"<integer>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"followup_source_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester_id\": \"<integer>\",\n      \"solved\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"sit_30\": true,\n          \"id60\": -58668177.91277215,\n          \"anim_a\": \"sed est nulla in\"\n        }\n      }\n    },\n    {\n      \"subject\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"can_be_solved_by_me\": \"<boolean>\",\n      \"collaborator_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": [\n        {\n          \"id\": \"<integer>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"followup_source_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester_id\": \"<integer>\",\n      \"solved\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"nisi1b6\": -11008841.508747384,\n          \"Excepteurd\": false,\n          \"in_05\": 16424619,\n          \"est_6\": -75685034.61741143\n        }\n      }\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Request",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/requests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"requests"
											]
										},
										"description": "Accepts a `request` object that sets one or more properties.\n\n#### Allowed for\n\n* End users\n* Anonymous users (rate limit of 5 requests per hour for [trial accounts](/documentation/developer-tools/getting-started/getting-a-trial-or-sponsored-account-for-development/))\n\n#### Additional properties\n\nIn addition to the writable request properties in the [JSON Format table](#json-format) above, you can set the following properties when creating a request.\n\n| Name                | Type   | Mandatory | Comment\n| ----------------    | -------| --------- | -------\n| comment             | object | yes       | Describes the problem, incident, question, or task. See [Request comments](#request-comments)\n| collaborators       | array  | no        | Adds collaborators (cc's) to the request. An email notification is sent to them when the ticket is created. See [Setting collaborators](/documentation/ticketing/managing-tickets/creating-and-managing-requests#setting-collaborators)\n| requester           | object | yes*      | \\*Required for anonymous requests. Specifies the requester of the anonymous request. See [Creating anonymous requests](/documentation/ticketing/managing-tickets/creating-and-managing-requests#creating-anonymous-requests)\n\n#### Creating follow-up requests\n\nOnce a ticket is closed (as distinct from solved), it can't be reopened. However, you can create a new request that references the closed ticket. To create the follow-up request, include a `via_followup_source_id` property in the `request` object that specifies the closed ticket. The parameter only works with closed tickets. It has no effect with other tickets.\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"requests"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"request\": {\n    \"subject\": \"<string>\",\n    \"assignee_id\": \"<integer>\",\n    \"can_be_solved_by_me\": \"<boolean>\",\n    \"collaborator_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"created_at\": \"<dateTime>\",\n    \"custom_fields\": [\n      {\n        \"id\": \"<integer>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"custom_status_id\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"due_at\": \"<dateTime>\",\n    \"email_cc_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"followup_source_id\": \"<integer>\",\n    \"group_id\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"is_public\": \"<boolean>\",\n    \"organization_id\": \"<integer>\",\n    \"priority\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"requester_id\": \"<integer>\",\n    \"solved\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"ticket_form_id\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"magnae\": \"eiusmod ad\",\n        \"incididunt27\": 6281403.713632822,\n        \"aliquad3c\": -20946331\n      }\n    }\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "resource_collections",
							"item": [
								{
									"name": "{resource_collection_id}",
									"item": [
										{
											"name": "Show Resource Collection",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/resource_collections/:resource_collection_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"resource_collections",
														":resource_collection_id"
													],
													"variable": [
														{
															"key": "resource_collection_id",
															"value": "<integer>",
															"description": "(Required) The id of the resource collection"
														}
													]
												},
												"description": "Retrieves details for a specified resource collection.\n\n#### Allowed for\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/resource_collections/:resource_collection_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"resource_collections",
																":resource_collection_id"
															],
															"variable": [
																{
																	"key": "resource_collection_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"resource_collection\": {\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"resources\": \"<array>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Resource Collection",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/resource_collections/:resource_collection_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"resource_collections",
														":resource_collection_id"
													],
													"variable": [
														{
															"key": "resource_collection_id",
															"value": "<integer>",
															"description": "(Required) The id of the resource collection"
														}
													]
												},
												"description": "Updates a resource collection using a provided `payload` object. The `payload` object  is specified the same way as the content of a requirements.json file in a Zendesk app. See [Specifying Apps Requirements](/documentation/apps/app-developer-guide/apps_requirements/) in the Zendesk Apps framework docs.\n\nThe response includes a [job\nstatus](/api-reference/ticketing/ticket-management/job_statuses/) for the resource updates.\n\n#### Allowed for\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/resource_collections/:resource_collection_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"resource_collections",
																":resource_collection_id"
															],
															"variable": [
																{
																	"key": "resource_collection_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Resource Collection",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/resource_collections/:resource_collection_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"resource_collections",
														":resource_collection_id"
													],
													"variable": [
														{
															"key": "resource_collection_id",
															"value": "<integer>",
															"description": "(Required) The id of the resource collection"
														}
													]
												},
												"description": "Deletes a specified resource collection.\n\nThe response includes a [job\nstatus](/api-reference/ticketing/ticket-management/job_statuses/) for deletion of the collection's resources.\n\n#### Allowed for\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/resource_collections/:resource_collection_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"resource_collections",
																":resource_collection_id"
															],
															"variable": [
																{
																	"key": "resource_collection_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Resource Collections",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/resource_collections",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"resource_collections"
											]
										},
										"description": "Lists resource collections for the account.\n\n#### Allowed for\n\n* Admins\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/resource_collections",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"resource_collections"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"resource_collections\": [\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"resources\": \"<array>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"resources\": \"<array>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Resource Collection",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/resource_collections",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"resource_collections"
											]
										},
										"description": "Creates a resource collection from a provided `payload` object. The `payload` object is specified the same way as the content of a requirements.json file in a Zendesk app. See [Specifying Apps Requirements](/documentation/apps/app-developer-guide/apps_requirements/) in the Zendesk Apps framework docs.\n\nThe response includes a [job\nstatus](/api-reference/ticketing/ticket-management/job_statuses/) for creation of the specified resources.\n\n#### Allowed for\n\n* Admins\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/resource_collections",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"resource_collections"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "routing",
							"item": [
								{
									"name": "agents",
									"item": [
										{
											"name": "{user_id}",
											"item": [
												{
													"name": "instance_values",
													"item": [
														{
															"name": "List Agent Attribute Values",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/routing/agents/:user_id/instance_values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"routing",
																		"agents",
																		":user_id",
																		"instance_values"
																	],
																	"variable": [
																		{
																			"key": "user_id",
																			"value": "<integer>",
																			"description": "(Required) The id of the user"
																		}
																	]
																},
																"description": "Returns an attribute value.\n\n#### Allowed For\n\n* Agents and admins\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/routing/agents/:user_id/instance_values",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"routing",
																				"agents",
																				":user_id",
																				"instance_values"
																			],
																			"variable": [
																				{
																					"key": "user_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"attribute_values\": [\n    {\n      \"attribute_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"attribute_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Set Agent Attribute Values",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/routing/agents/:user_id/instance_values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"routing",
																		"agents",
																		":user_id",
																		"instance_values"
																	],
																	"variable": [
																		{
																			"key": "user_id",
																			"value": "<integer>",
																			"description": "(Required) The id of the user"
																		}
																	]
																},
																"description": "Adds the specified attributes if no attributes exists, or replaces all existing attributes with the specified attributes.\n\n#### Allowed For\n\n* Admins\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/routing/agents/:user_id/instance_values",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"routing",
																				"agents",
																				":user_id",
																				"instance_values"
																			],
																			"variable": [
																				{
																					"key": "user_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"attribute_values\": [\n    {\n      \"attribute_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"attribute_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "attributes",
									"item": [
										{
											"name": "{attribute_id}",
											"item": [
												{
													"name": "values",
													"item": [
														{
															"name": "{attribute_value_id}",
															"item": [
																{
																	"name": "Show Attribute Value",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id/values/:attribute_value_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"routing",
																				"attributes",
																				":attribute_id",
																				"values",
																				":attribute_value_id"
																			],
																			"variable": [
																				{
																					"key": "attribute_id",
																					"value": "<string>",
																					"description": "(Required) The ID of the skill-based routing attribute"
																				},
																				{
																					"key": "attribute_value_id",
																					"value": "<string>",
																					"description": "(Required) The ID of the skill-based routing attribute value"
																				}
																			]
																		},
																		"description": "Returns an attribute value.\n\n#### Allowed For\n\n* Admins\n"
																	},
																	"response": [
																		{
																			"name": "Success response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id/values/:attribute_value_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"routing",
																						"attributes",
																						":attribute_id",
																						"values",
																						":attribute_value_id"
																					],
																					"variable": [
																						{
																							"key": "attribute_id"
																						},
																						{
																							"key": "attribute_value_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"attribute_value\": {\n    \"attribute_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
																		}
																	]
																},
																{
																	"name": "Update Attribute Value",
																	"request": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id/values/:attribute_value_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"routing",
																				"attributes",
																				":attribute_id",
																				"values",
																				":attribute_value_id"
																			],
																			"variable": [
																				{
																					"key": "attribute_id",
																					"value": "<string>",
																					"description": "(Required) The ID of the skill-based routing attribute"
																				},
																				{
																					"key": "attribute_value_id",
																					"value": "<string>",
																					"description": "(Required) The ID of the skill-based routing attribute value"
																				}
																			]
																		},
																		"description": "Updates an attribute value.\n\n#### Allowed For\n\n* Admins\n"
																	},
																	"response": [
																		{
																			"name": "Success response",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id/values/:attribute_value_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"routing",
																						"attributes",
																						":attribute_id",
																						"values",
																						":attribute_value_id"
																					],
																					"variable": [
																						{
																							"key": "attribute_id"
																						},
																						{
																							"key": "attribute_value_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"attribute_value\": {\n    \"attribute_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
																		}
																	]
																},
																{
																	"name": "Delete Attribute Value",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id/values/:attribute_value_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"routing",
																				"attributes",
																				":attribute_id",
																				"values",
																				":attribute_value_id"
																			],
																			"variable": [
																				{
																					"key": "attribute_id",
																					"value": "<string>",
																					"description": "(Required) The ID of the skill-based routing attribute"
																				},
																				{
																					"key": "attribute_value_id",
																					"value": "<string>",
																					"description": "(Required) The ID of the skill-based routing attribute value"
																				}
																			]
																		},
																		"description": "Deletes an attribute value.\n\n#### Allowed For\n\n* Agents\n"
																	},
																	"response": [
																		{
																			"name": "No Content response",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id/values/:attribute_value_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"routing",
																						"attributes",
																						":attribute_id",
																						"values",
																						":attribute_value_id"
																					],
																					"variable": [
																						{
																							"key": "attribute_id"
																						},
																						{
																							"key": "attribute_value_id"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": null
																		}
																	]
																}
															]
														},
														{
															"name": "List Attribute Values for an Attribute",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id/values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"routing",
																		"attributes",
																		":attribute_id",
																		"values"
																	],
																	"variable": [
																		{
																			"key": "attribute_id",
																			"value": "<string>",
																			"description": "(Required) The ID of the skill-based routing attribute"
																		}
																	]
																},
																"description": "Returns a list of attribute values for a provided attribute.\n\n#### Allowed For\n\n* Admins\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id/values",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"routing",
																				"attributes",
																				":attribute_id",
																				"values"
																			],
																			"variable": [
																				{
																					"key": "attribute_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"attribute_values\": [\n    {\n      \"attribute_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"attribute_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Create Attribute Value",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id/values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"routing",
																		"attributes",
																		":attribute_id",
																		"values"
																	],
																	"variable": [
																		{
																			"key": "attribute_id",
																			"value": "<string>",
																			"description": "(Required) The ID of the skill-based routing attribute"
																		}
																	]
																},
																"description": "Creates an attribute value.\n\n#### Allowed For\n\n* Admins\n"
															},
															"response": [
																{
																	"name": "Created response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id/values",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"routing",
																				"attributes",
																				":attribute_id",
																				"values"
																			],
																			"variable": [
																				{
																					"key": "attribute_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"attribute_value\": {\n    \"attribute_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "Show Attribute",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"routing",
																"attributes",
																":attribute_id"
															],
															"variable": [
																{
																	"key": "attribute_id",
																	"value": "<string>",
																	"description": "(Required) The ID of the skill-based routing attribute"
																}
															]
														},
														"description": "Returns an attribute.\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"routing",
																		"attributes",
																		":attribute_id"
																	],
																	"variable": [
																		{
																			"key": "attribute_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"attribute\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update Attribute",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"routing",
																"attributes",
																":attribute_id"
															],
															"variable": [
																{
																	"key": "attribute_id",
																	"value": "<string>",
																	"description": "(Required) The ID of the skill-based routing attribute"
																}
															]
														},
														"description": "Updates an attribute.\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"routing",
																		"attributes",
																		":attribute_id"
																	],
																	"variable": [
																		{
																			"key": "attribute_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"attribute\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Delete Attribute",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"routing",
																"attributes",
																":attribute_id"
															],
															"variable": [
																{
																	"key": "attribute_id",
																	"value": "<string>",
																	"description": "(Required) The ID of the skill-based routing attribute"
																}
															]
														},
														"description": "Deletes an attribute.\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "No Content response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/routing/attributes/:attribute_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"routing",
																		"attributes",
																		":attribute_id"
																	],
																	"variable": [
																		{
																			"key": "attribute_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														}
													]
												}
											]
										},
										{
											"name": "definitions",
											"item": [
												{
													"name": "List Routing Attribute Definitions",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/routing/attributes/definitions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"routing",
																"attributes",
																"definitions"
															]
														},
														"description": "Returns the condition definitions that can be configured to apply attributes to a ticket.\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/routing/attributes/definitions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"routing",
																		"attributes",
																		"definitions"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"definitions\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"conditions_all\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"subject\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            }\n          }\n        }\n      },\n      \"conditions_any\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"subject\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "List Account Attributes",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/routing/attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"routing",
														"attributes"
													]
												},
												"description": "Returns a list of attributes for the account.\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| attribute_values | The attribute values available on the account\n\n#### Allowed For\n\n* Agents and admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/routing/attributes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"routing",
																"attributes"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"attributes\": [\n    {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Create Attribute",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/routing/attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"routing",
														"attributes"
													]
												},
												"description": "Creates an attribute.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Created response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/routing/attributes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"routing",
																"attributes"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"attribute\": {\n    \"name\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "requirements",
									"item": [
										{
											"name": "fulfilled",
											"item": [
												{
													"name": "List Tickets Fulfilled by a User",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/routing/requirements/fulfilled",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"routing",
																"requirements",
																"fulfilled"
															],
															"variable": [
																{
																	"key": "ticket_ids",
																	"value": "<integer>",
																	"description": "(Required) The IDs of the relevant tickets to check for matching attributes"
																}
															]
														},
														"description": "Returns a list of ticket ids that contain attributes matching the current user's attributes. Accepts a `ticket_ids` parameter for relevant tickets to check for matching attributes.\n\n#### Allowed For\n\n* Agents and admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/routing/requirements/fulfilled",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"routing",
																		"requirements",
																		"fulfilled"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"fulfilled_ticket_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "tickets",
									"item": [
										{
											"name": "{ticket_id}",
											"item": [
												{
													"name": "instance_values",
													"item": [
														{
															"name": "List Ticket Attribute Values",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/routing/tickets/:ticket_id/instance_values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"routing",
																		"tickets",
																		":ticket_id",
																		"instance_values"
																	],
																	"variable": [
																		{
																			"key": "ticket_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the ticket"
																		}
																	]
																},
																"description": "Returns a list of attributes values for the ticket.\n\n#### Allowed For\n\n* Agents and admins\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/routing/tickets/:ticket_id/instance_values",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"routing",
																				"tickets",
																				":ticket_id",
																				"instance_values"
																			],
																			"variable": [
																				{
																					"key": "ticket_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"attribute_values\": [\n    {\n      \"attribute_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"attribute_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Set Ticket Attribute Values",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/routing/tickets/:ticket_id/instance_values",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"routing",
																		"tickets",
																		":ticket_id",
																		"instance_values"
																	],
																	"variable": [
																		{
																			"key": "ticket_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the ticket"
																		}
																	]
																},
																"description": "Adds the specified attributes if no attributes exists, or replaces all existing attributes with the specified attributes.\n\nInvalid or deleted attributes are ignored.\n\n#### Allowed For\n\n* Admins\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/routing/tickets/:ticket_id/instance_values",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"routing",
																				"tickets",
																				":ticket_id",
																				"instance_values"
																			],
																			"variable": [
																				{
																					"key": "ticket_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"attribute_values\": [\n    {\n      \"attribute_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"attribute_id\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "satisfaction_ratings",
							"item": [
								{
									"name": "{satisfaction_rating_id}",
									"item": [
										{
											"name": "Show Satisfaction Rating",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/satisfaction_ratings/:satisfaction_rating_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"satisfaction_ratings",
														":satisfaction_rating_id"
													],
													"variable": [
														{
															"key": "satisfaction_rating_id",
															"value": "<integer>",
															"description": "(Required) The id of the satisfaction rating to retrieve"
														}
													]
												},
												"description": "Returns a specific satisfaction rating. You can get the id from\nthe [List Satisfaction Ratings](#list-satisfaction-ratings) endpoint.\n\n#### Allowed For\n\n * Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/satisfaction_ratings/:satisfaction_rating_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"satisfaction_ratings",
																":satisfaction_rating_id"
															],
															"variable": [
																{
																	"key": "satisfaction_rating_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"satisfaction_rating\": [\n    {\n      \"assignee_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"requester_id\": \"<integer>\",\n      \"ticket_id\": \"<integer>\",\n      \"score\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"reason\": \"<string>\",\n      \"reason_code\": \"<integer>\",\n      \"reason_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"assignee_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"requester_id\": \"<integer>\",\n      \"ticket_id\": \"<integer>\",\n      \"score\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"reason\": \"<string>\",\n      \"reason_code\": \"<integer>\",\n      \"reason_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "count",
									"item": [
										{
											"name": "Count Satisfaction Ratings",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/satisfaction_ratings/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"satisfaction_ratings",
														"count"
													]
												},
												"description": "Returns an approximate count of satisfaction ratings in the account. If the count exceeds 100,000, the count will return a cached result. This cached result will update every 24 hours.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n* Agents"
											},
											"response": [
												{
													"name": "Count of satisfaction ratings",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/satisfaction_ratings/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"satisfaction_ratings",
																"count"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": {\n    \"refreshed_at\": \"<dateTime>\",\n    \"value\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Satisfaction Ratings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/satisfaction_ratings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"satisfaction_ratings"
											]
										},
										"description": "#### Allowed For\n* Agents\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\n#### Filters\n\n| Parameter  | Value\n| ---------- | -----\n| score      | offered, unoffered, received, received\\_with\\_comment, received\\_without\\_comment,<br/>good, good\\_with\\_comment, good\\_without\\_comment,<br/>bad, bad\\_with\\_comment, bad\\_without\\_comment\n| start_time | Time of the oldest satisfaction rating, as a [Unix epoch time](https://www.epochconverter.com/)\n| end_time   | Time of the most recent satisfaction rating, as a [Unix epoch time](https://www.epochconverter.com/)\n\nIf you specify an unqualified score such as `good`, the results include all the records with and without comments.\n\nExamples:\n\n* `/api/v2/satisfaction_ratings.json?score=bad`\n* `/api/v2/satisfaction_ratings.json?score=bad&start_time=1498151194`\n* `/api/v2/satisfaction_ratings.json?start_time=1340384793&end_time=1371920793`\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/satisfaction_ratings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"satisfaction_ratings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"satisfaction_ratings\": [\n    {\n      \"assignee_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"requester_id\": \"<integer>\",\n      \"ticket_id\": \"<integer>\",\n      \"score\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"reason\": \"<string>\",\n      \"reason_code\": \"<integer>\",\n      \"reason_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"assignee_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"requester_id\": \"<integer>\",\n      \"ticket_id\": \"<integer>\",\n      \"score\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"reason\": \"<string>\",\n      \"reason_code\": \"<integer>\",\n      \"reason_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "satisfaction_reasons",
							"item": [
								{
									"name": "{satisfaction_reason_id}",
									"item": [
										{
											"name": "Show Reason for Satisfaction Rating",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/satisfaction_reasons/:satisfaction_reason_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"satisfaction_reasons",
														":satisfaction_reason_id"
													],
													"variable": [
														{
															"key": "satisfaction_reason_id",
															"value": "<integer>",
															"description": "(Required) The id of the satisfaction rating reason"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/satisfaction_reasons/:satisfaction_reason_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"satisfaction_reasons",
																":satisfaction_reason_id"
															],
															"variable": [
																{
																	"key": "satisfaction_reason_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"reason\": [\n    {\n      \"value\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"raw_value\": \"<string>\",\n      \"reason_code\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"raw_value\": \"<string>\",\n      \"reason_code\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Reasons for Satisfaction Rating",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/satisfaction_reasons",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"satisfaction_reasons"
											]
										},
										"description": "List all reasons for an account\n\n#### Allowed For\n\n* Admins\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/satisfaction_reasons",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"satisfaction_reasons"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"reasons\": [\n    {\n      \"value\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"raw_value\": \"<string>\",\n      \"reason_code\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"deleted_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"raw_value\": \"<string>\",\n      \"reason_code\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "search",
							"item": [
								{
									"name": "count",
									"item": [
										{
											"name": "Show Results Count",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search/count?query=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search",
														"count"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>",
															"description": "(Required) The search query"
														}
													]
												},
												"description": "Returns the number of items matching the query rather than the items. The search string works the same as a regular search.\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search/count?query=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search",
																"count"
															],
															"query": [
																{
																	"key": "query",
																	"value": "<string>",
																	"description": "(Required) The search query"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "export",
									"item": [
										{
											"name": "Export Search Results",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search/export?query=<string>&page[size]=<integer>&filter[type]=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search",
														"export"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>",
															"description": "(Required) The search query. See [Query basics](#query-basics) above. For details on the query syntax, see the [Zendesk Support search reference](https://support.zendesk.com/hc/en-us/articles/203663226)"
														},
														{
															"key": "page[size]",
															"value": "<integer>",
															"description": "The number of results shown in a page."
														},
														{
															"key": "filter[type]",
															"value": "<string>",
															"description": "The object type returned by the export query. Can be `ticket`, `organization`, `user`, or `group`."
														}
													]
												},
												"description": "Exports a set of results. See [Query basics](#query-basics) for the syntax of the `query` parameter.\n\nThis endpoint is for search queries that will return more than 1000 results. The result set is ordered only by the `created_at` attribute.\n\nThe search only returns results of a single object type. The following object types are supported: ticket, organization, user, or group.\n\nYou must specify the type in the `filter[type]` parameter. Searches with type in the query string will result in an error.\n\n#### Allowed For\n\n- Agents\n\n#### Pagination\n\n- Cursor pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 1000 records per page. The number of results shown in a page is determined by the `page[size]` parameter.\n\n**Note**: You may experience a speed reduction or a timeout if you request 1000 results per page and you have many archived tickets in the results. Try reducing the number of results per page. We recommend 100 results per page.\n\nThe cursor specified by the `after_cursor` property in a response expires after one hour.\n\nFor more information on cursor-based pagination, see the following articles:\n\n- [Comparing cursor pagination and offset pagination](/documentation/developer-tools/pagination/comparing-cursor-pagination-and-offset-pagination)\n- [Paginating through lists using cursor pagination](/documentation/developer-tools/pagination/paginating-through-lists-using-cursor-pagination)\n\n#### Limits\n\nThis API endpoint is rate-limited to 100 requests per minute per account. The limit also counts towards the global API rate limit.\n\n#### Response Format\n\n| Name                  | Type                 | Comment\n| --------------------- | ---------------------| --------------------\n| links[next]           | string               | URL to the next page of results\n| meta[has_more]        | string               | Boolean indicating if there are more results\n| meta[after_cursor]    | string               | Cursor object returned from the Search Service\n| results               | array                | May consist of tickets, users, groups, or organizations, as specified by the `filter_type` parameter\n\nThe response is similar to the response of `GET /api/v2/search.json?`, with a few changes:\n\n* `links` - Has the following nested properties: `prev` and `next`. These replace the `next_page` and `prev_page` links. The `prev` property is always null because backward pagination is not supported. The `next` property may include an auto-generated link to the next page of results.\n* `meta` - Has the following nested properties: `has_more` and `after_cursor`. The `has_more` property indicates whether the next page has more results. The `after_cursor` property is the cursor used to paginate to the next page. It expires after one hour.\n\nThere's no `count` property.\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/search/export?query=<string>&page[size]=<integer>&filter[type]=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"search",
																"export"
															],
															"query": [
																{
																	"key": "query",
																	"value": "<string>",
																	"description": "(Required) The search query. See [Query basics](#query-basics) above. For details on the query syntax, see the [Zendesk Support search reference](https://support.zendesk.com/hc/en-us/articles/203663226)"
																},
																{
																	"key": "page[size]",
																	"value": "<integer>",
																	"description": "The number of results shown in a page."
																},
																{
																	"key": "filter[type]",
																	"value": "<string>",
																	"description": "The object type returned by the export query. Can be `ticket`, `organization`, `user`, or `group`."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"facets\": \"<string>\",\n  \"links\": {\n    \"next\": \"<string>\",\n    \"prev\": \"<string>\"\n  },\n  \"meta\": {\n    \"after_cursor\": \"<string>\",\n    \"before_cursor\": \"<string>\",\n    \"has_more\": \"<boolean>\"\n  },\n  \"results\": [\n    {\n      \"created_at\": \"<string>\",\n      \"default\": \"<boolean>\",\n      \"deleted\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"result_type\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created_at\": \"<string>\",\n      \"default\": \"<boolean>\",\n      \"deleted\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"result_type\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Search Results",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/search?query=<string>&sort_by=<string>&sort_order=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>",
													"description": "(Required) The search query. See [Query basics](#query-basics) above. For details on the query syntax, see the [Zendesk Support search reference](https://support.zendesk.com/hc/en-us/articles/203663226)"
												},
												{
													"key": "sort_by",
													"value": "<string>",
													"description": "One of `updated_at`, `created_at`, `priority`, `status`, or `ticket_type`. Defaults to sorting by relevance"
												},
												{
													"key": "sort_order",
													"value": "<string>",
													"description": "One of `asc` or `desc`.  Defaults to `desc`"
												}
											]
										},
										"description": "Use the ampersand character (&) to append the `sort_by` or `sort_order` parameters to the URL.\n\nFor examples, see [Searching with Zendesk API](/documentation/ticketing/using-the-zendesk-api/searching-with-the-zendesk-api).\n\n#### Pagination\n\n* Offset pagination only\n\nOffset pagination may result in duplicate results when paging. You can also use the \n[Export Search Results](/api-reference/ticketing/ticket-management/search/#export-search-results) endpoint, which \nuses cursor-based pagination and doesn't return duplicate results. See \n[Pagination](/api-reference/introduction/pagination/) for more information.\n\n#### Allowed For\n\n* Admins, Agents and Light Agents\n\n\n#### Errors JSON Format\n\nErrors are represented as JSON objects which have the following keys:\n\n| Name                  | Type                 | Comment\n| --------------------- | ---------------------| --------------------\n| error                 | string               | The type of error. Examples: \"unavailable\", \"invalid\"\n| description           | string               |\n\n##### Example Error\n```js\n{\n  \"error\": \"unavailable\",\n  \"description\": \"Sorry, we could not complete your search query. Please try again in a moment.\"\n}\n```\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/search?query=<string>&sort_by=<string>&sort_order=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"search"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>",
															"description": "(Required) The search query. See [Query basics](#query-basics) above. For details on the query syntax, see the [Zendesk Support search reference](https://support.zendesk.com/hc/en-us/articles/203663226)"
														},
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "One of `updated_at`, `created_at`, `priority`, `status`, or `ticket_type`. Defaults to sorting by relevance"
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "One of `asc` or `desc`.  Defaults to `desc`"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"facets\": \"<string>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"results\": [\n    {\n      \"created_at\": \"<string>\",\n      \"default\": \"<boolean>\",\n      \"deleted\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"result_type\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created_at\": \"<string>\",\n      \"default\": \"<boolean>\",\n      \"deleted\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"result_type\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "sessions",
							"item": [
								{
									"name": "List Sessions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"sessions"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<integer>",
													"description": "(Required) The id of the user"
												}
											]
										},
										"description": "If authenticated as an admin, returns all the account's sessions. If authenticated as an agent or end user, returns only the sessions of the user making the request.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\n#### Allowed For\n\n* Admins, Agents, End users\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"sessions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"sessions\": [\n    {\n      \"id\": \"<integer>\",\n      \"authenticated_at\": \"<string>\",\n      \"last_seen_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"authenticated_at\": \"<string>\",\n      \"last_seen_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_id\": \"<integer>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "sharing_agreements",
							"item": [
								{
									"name": "{sharing_agreement_id}",
									"item": [
										{
											"name": "Show a Sharing Agreement",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/sharing_agreements/:sharing_agreement_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"sharing_agreements",
														":sharing_agreement_id"
													],
													"variable": [
														{
															"key": "sharing_agreement_id",
															"value": "<integer>",
															"description": "(Required) The ID of the sharing agreement"
														}
													]
												},
												"description": "Returns a sharing agreement for your account.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/sharing_agreements/:sharing_agreement_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"sharing_agreements",
																":sharing_agreement_id"
															],
															"variable": [
																{
																	"key": "sharing_agreement_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"sharing_agreement\": {\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"partner_name\": \"<string>\",\n    \"remote_subdomain\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update a Sharing Agreement",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/sharing_agreements/:sharing_agreement_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"sharing_agreements",
														":sharing_agreement_id"
													],
													"variable": [
														{
															"key": "sharing_agreement_id",
															"value": "<integer>",
															"description": "(Required) The ID of the sharing agreement"
														}
													]
												},
												"description": "Returns an updated sharing agreement. Only `status` is allowed to be updated.\n\n#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/sharing_agreements/:sharing_agreement_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"sharing_agreements",
																":sharing_agreement_id"
															],
															"variable": [
																{
																	"key": "sharing_agreement_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"sharing_agreement\": {\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"partner_name\": \"<string>\",\n    \"remote_subdomain\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete a Sharing Agreement",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/sharing_agreements/:sharing_agreement_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"sharing_agreements",
														":sharing_agreement_id"
													],
													"variable": [
														{
															"key": "sharing_agreement_id",
															"value": "<integer>",
															"description": "(Required) The ID of the sharing agreement"
														}
													]
												},
												"description": "Deletes a sharing agreement.\n\n#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/sharing_agreements/:sharing_agreement_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"sharing_agreements",
																":sharing_agreement_id"
															],
															"variable": [
																{
																	"key": "sharing_agreement_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "List Sharing Agreements",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/sharing_agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"sharing_agreements"
											]
										},
										"description": "#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/sharing_agreements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"sharing_agreements"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"sharing_agreements\": [\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"partner_name\": \"<string>\",\n      \"remote_subdomain\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"partner_name\": \"<string>\",\n      \"remote_subdomain\": \"<string>\",\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Sharing Agreement",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/sharing_agreements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"sharing_agreements"
											]
										},
										"description": "#### Allowed For\n\n* Admins\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/sharing_agreements",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"sharing_agreements"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"sharing_agreement\": {\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"partner_name\": \"<string>\",\n    \"remote_subdomain\": \"<string>\",\n    \"status\": \"<string>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "skips",
							"item": [
								{
									"name": "Record a new skip for the current user",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/skips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"skips"
											]
										},
										"description": "Record a new ticket skip for the current user.\n\n#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/skips",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"skips"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"skip\": {\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"reason\": \"<string>\",\n    \"ticket\": {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"urgent\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"occaecat_9\": -39550186.054849945,\n        \"nisi4\": 96738540,\n        \"sunt_\": 19656537.862529293\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"pending\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"incident\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"elit1\": 37957691\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    },\n    \"ticket_id\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"user_id\": \"<integer>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "slas",
							"item": [
								{
									"name": "policies",
									"item": [
										{
											"name": "{sla_policy_id}",
											"item": [
												{
													"name": "Show SLA Policy",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/slas/policies/:sla_policy_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"slas",
																"policies",
																":sla_policy_id"
															],
															"variable": [
																{
																	"key": "sla_policy_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the SLA Policy"
																}
															]
														},
														"description": "#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/slas/policies/:sla_policy_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"slas",
																		"policies",
																		":sla_policy_id"
																	],
																	"variable": [
																		{
																			"key": "sla_policy_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"sla_policy\": {\n    \"title\": \"<string>\",\n    \"filter\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"created_at\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"policy_metrics\": [\n      {\n        \"business_hours\": \"<boolean>\",\n        \"metric\": \"<string>\",\n        \"priority\": \"<string>\",\n        \"target\": \"<integer>\"\n      },\n      {\n        \"business_hours\": \"<boolean>\",\n        \"metric\": \"<string>\",\n        \"priority\": \"<string>\",\n        \"target\": \"<integer>\"\n      }\n    ],\n    \"position\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update SLA Policy",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/slas/policies/:sla_policy_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"slas",
																"policies",
																":sla_policy_id"
															],
															"variable": [
																{
																	"key": "sla_policy_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the SLA Policy"
																}
															]
														},
														"description": "Updates the specified policy.\n\n#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/slas/policies/:sla_policy_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"slas",
																		"policies",
																		":sla_policy_id"
																	],
																	"variable": [
																		{
																			"key": "sla_policy_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"sla_policy\": {\n    \"title\": \"<string>\",\n    \"filter\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"created_at\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"policy_metrics\": [\n      {\n        \"business_hours\": \"<boolean>\",\n        \"metric\": \"<string>\",\n        \"priority\": \"<string>\",\n        \"target\": \"<integer>\"\n      },\n      {\n        \"business_hours\": \"<boolean>\",\n        \"metric\": \"<string>\",\n        \"priority\": \"<string>\",\n        \"target\": \"<integer>\"\n      }\n    ],\n    \"position\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Delete SLA Policy",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/slas/policies/:sla_policy_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"slas",
																"policies",
																":sla_policy_id"
															],
															"variable": [
																{
																	"key": "sla_policy_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the SLA Policy"
																}
															]
														},
														"description": "#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "No Content response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/slas/policies/:sla_policy_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"slas",
																		"policies",
																		":sla_policy_id"
																	],
																	"variable": [
																		{
																			"key": "sla_policy_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														}
													]
												}
											]
										},
										{
											"name": "definitions",
											"item": [
												{
													"name": "Retrieve Supported Filter Definition Items",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/slas/policies/definitions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"slas",
																"policies",
																"definitions"
															]
														},
														"description": "#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/slas/policies/definitions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"slas",
																		"policies",
																		"definitions"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"definitions\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"all\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"group\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"operators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  },\n                  \"value\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  }\n                }\n              }\n            },\n            \"target\": {\n              \"type\": \"string\",\n              \"nullable\": true,\n              \"default\": \"<string>\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"values\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"list\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"title\": {\n                        \"type\": \"string\",\n                        \"default\": \"<string>\"\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"default\": \"<string>\"\n                      }\n                    }\n                  }\n                },\n                \"type\": {\n                  \"type\": \"string\",\n                  \"default\": \"<string>\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"any\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"group\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"operators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  },\n                  \"value\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  }\n                }\n              }\n            },\n            \"target\": {\n              \"type\": \"string\",\n              \"nullable\": true,\n              \"default\": \"<string>\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"values\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"list\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"title\": {\n                        \"type\": \"string\",\n                        \"default\": \"<string>\"\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"default\": \"<string>\"\n                      }\n                    }\n                  }\n                },\n                \"type\": {\n                  \"type\": \"string\",\n                  \"default\": \"<string>\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "reorder",
											"item": [
												{
													"name": "Reorder SLA Policies",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/slas/policies/reorder?sla_policy_ids=<integer>&sla_policy_ids=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"slas",
																"policies",
																"reorder"
															],
															"query": [
																{
																	"key": "sla_policy_ids",
																	"value": "<integer>",
																	"description": "The IDs of the SLA Policies to reorder"
																},
																{
																	"key": "sla_policy_ids",
																	"value": "<integer>",
																	"description": "The IDs of the SLA Policies to reorder"
																}
															]
														},
														"description": "#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/slas/policies/reorder?sla_policy_ids=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"slas",
																		"policies",
																		"reorder"
																	],
																	"query": [
																		{
																			"key": "sla_policy_ids",
																			"value": "<integer>",
																			"description": "The IDs of the SLA Policies to reorder"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "<string>"
														}
													]
												}
											]
										},
										{
											"name": "List SLA Policies",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/slas/policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"slas",
														"policies"
													]
												},
												"description": "#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/slas/policies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"slas",
																"policies"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"sla_policies\": [\n    {\n      \"title\": \"<string>\",\n      \"filter\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"policy_metrics\": [\n        {\n          \"business_hours\": \"<boolean>\",\n          \"metric\": \"<string>\",\n          \"priority\": \"<string>\",\n          \"target\": \"<integer>\"\n        },\n        {\n          \"business_hours\": \"<boolean>\",\n          \"metric\": \"<string>\",\n          \"priority\": \"<string>\",\n          \"target\": \"<integer>\"\n        }\n      ],\n      \"position\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"title\": \"<string>\",\n      \"filter\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"policy_metrics\": [\n        {\n          \"business_hours\": \"<boolean>\",\n          \"metric\": \"<string>\",\n          \"priority\": \"<string>\",\n          \"target\": \"<integer>\"\n        },\n        {\n          \"business_hours\": \"<boolean>\",\n          \"metric\": \"<string>\",\n          \"priority\": \"<string>\",\n          \"target\": \"<integer>\"\n        }\n      ],\n      \"position\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Create SLA Policy",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/slas/policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"slas",
														"policies"
													]
												},
												"description": "#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Created response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/slas/policies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"slas",
																"policies"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"sla_policy\": {\n    \"title\": \"<string>\",\n    \"filter\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"created_at\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"policy_metrics\": [\n      {\n        \"business_hours\": \"<boolean>\",\n        \"metric\": \"<string>\",\n        \"priority\": \"<string>\",\n        \"target\": \"<integer>\"\n      },\n      {\n        \"business_hours\": \"<boolean>\",\n        \"metric\": \"<string>\",\n        \"priority\": \"<string>\",\n        \"target\": \"<integer>\"\n      }\n    ],\n    \"position\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "suspended_tickets",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "recover",
											"item": [
												{
													"name": "Recover Suspended Ticket",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/suspended_tickets/:id/recover",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"suspended_tickets",
																":id",
																"recover"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<number>",
																	"description": "(Required) id of the suspended ticket"
																}
															]
														},
														"description": "**Note**: During recovery, the API sets the requester to the authenticated agent who called the API, not the original requester. This prevents the ticket from being re-suspended after recovery. To preserve the original requester, use the [Recover Multiple Suspended Tickets](#recover-multiple-suspended-tickets) endpoint with the single ticket.\n\nThis endpoint does not queue an asynchronous job that can be tracked from [Job Statuses](/api-reference/ticketing/ticket-management/job_statuses/). Instead, it processes the request with a synchronous response.\n   - If all recoveries are successful, it returns a 200 with a `tickets` array in the response.\n   - If all recoveries fail, it returns a 422 with a `suspended_tickets` array in the response.\n   - If there is a mixture of successes and failures in a single call, it returns a 422 with a `suspended_tickets` array of the failures in the response.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n* Unrestricted agents on all other plans\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/suspended_tickets/:id/recover",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"suspended_tickets",
																		":id",
																		"recover"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ticket\": [\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"author\": {\n        \"email\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"brand_id\": \"<integer>\",\n      \"cause\": \"<string>\",\n      \"cause_id\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"message_id\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"do_8ef\": -11609274\n        }\n      }\n    },\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"author\": {\n        \"email\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"brand_id\": \"<integer>\",\n      \"cause\": \"<string>\",\n      \"cause_id\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"message_id\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"nostrud_8\": true\n        }\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Recovery failed response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/suspended_tickets/:id/recover",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"suspended_tickets",
																		":id",
																		"recover"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ticket\": [\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"author\": {\n        \"email\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"brand_id\": \"<integer>\",\n      \"cause\": \"<string>\",\n      \"cause_id\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"message_id\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"do_8ef\": -11609274\n        }\n      }\n    },\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"author\": {\n        \"email\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"brand_id\": \"<integer>\",\n      \"cause\": \"<string>\",\n      \"cause_id\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"message_id\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"nostrud_8\": true\n        }\n      }\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Show Suspended Ticket",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/suspended_tickets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"suspended_tickets",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<number>",
															"description": "(Required) id of the suspended ticket"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n* Unrestricted agents on all other plans\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/suspended_tickets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"suspended_tickets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"suspended_tickets\": [\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"author\": {\n        \"email\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"brand_id\": \"<integer>\",\n      \"cause\": \"<string>\",\n      \"cause_id\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"message_id\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        }\n      }\n    },\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"author\": {\n        \"email\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"brand_id\": \"<integer>\",\n      \"cause\": \"<string>\",\n      \"cause_id\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"message_id\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        }\n      }\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete Suspended Ticket",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/suspended_tickets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"suspended_tickets",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<number>",
															"description": "(Required) id of the suspended ticket"
														}
													]
												},
												"description": "#### Allowed For\n\n* Unrestricted agents\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/suspended_tickets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"suspended_tickets",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "attachments",
									"item": [
										{
											"name": "Suspended Ticket Attachments",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/suspended_tickets/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"suspended_tickets",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "<number>",
															"description": "(Required) id of the suspended ticket"
														}
													]
												},
												"description": "Makes copies of any attachments on a suspended ticket and returns them as [attachment tokens](/api-reference/ticketing/tickets/ticket-attachments/). If the  ticket is manually recovered, you can include the attachment tokens on the new ticket.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n* Unrestricted agents on all other plans\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/suspended_tickets/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"suspended_tickets",
																"attachments"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"upload\": {\n    \"attachments\": [\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\",\n        \"thumbnails\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\",\n        \"thumbnails\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"token\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Delete Multiple Suspended Tickets",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/suspended_tickets/destroy_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"suspended_tickets",
														"destroy_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) A comma separated list of ids of suspended tickets to delete."
														}
													]
												},
												"description": "Accepts up to 100 ids (the auto-generated id, not the ticket id.)\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n* Unrestricted agents on all other plans\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/suspended_tickets/destroy_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"suspended_tickets",
																"destroy_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) A comma separated list of ids of suspended tickets to delete."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "export",
									"item": [
										{
											"name": "Export Suspended Tickets",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/suspended_tickets/export",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"suspended_tickets",
														"export"
													]
												},
												"description": "Exports a list of suspended tickets for the Zendesk Support instance. To export the list, the endpoint enqueues a job to create a CSV file with the data. When done, Zendesk sends the requester an email containing a link to the CSV file. In the CSV, tickets are sorted by the update timestamp in ascending order.\n\n #### Allowed For\n\n * Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n * Unrestricted agents on all other plans\n\n #### Rate limits\n\n Limited to one request per minute and up to one million records in return. The rate-limiting mechanism behaves identically to the one described in [Usage limits](/api-reference/ticketing/account-configuration/usage_limits/#monitoring-your-request-activity).\n We recommend using the `Retry-After` header value as described in [Catching errors caused by rate limiting](/documentation/ticketing/using-the-zendesk-api/best-practices-for-avoiding-rate-limiting#catch).\n"
											},
											"response": [
												{
													"name": "Ok",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/suspended_tickets/export",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"suspended_tickets",
																"export"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"export\": {\n    \"status\": \"<string>\",\n    \"view_id\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "recover_many",
									"item": [
										{
											"name": "Recover Multiple Suspended Tickets",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/suspended_tickets/recover_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"suspended_tickets",
														"recover_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) A comma separated list of ids of suspended tickets to recover."
														}
													]
												},
												"description": "Accepts up to 100 ids (the auto-generated id, not the ticket id.) Note that suspended tickets that fail to be recovered are still included in the response.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n* Unrestricted agents on all other plans\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/suspended_tickets/recover_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"suspended_tickets",
																"recover_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) A comma separated list of ids of suspended tickets to recover."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tickets\": [\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"author\": {\n        \"email\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"brand_id\": \"<integer>\",\n      \"cause\": \"<string>\",\n      \"cause_id\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"message_id\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        }\n      }\n    },\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"author\": {\n        \"email\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"brand_id\": \"<integer>\",\n      \"cause\": \"<string>\",\n      \"cause_id\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"message_id\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"minimbc\": -75285058.78645308,\n          \"temporc07\": false,\n          \"ea_a9\": -45167159.47547594,\n          \"velit_5ce\": \"in labore\"\n        }\n      }\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Suspended Tickets",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/suspended_tickets?sort_by=<string>&sort_order=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"suspended_tickets"
											],
											"query": [
												{
													"key": "sort_by",
													"value": "<string>",
													"description": "The field to sort the ticket by, being one of `author_email`, `cause`, `created_at`, or `subject`."
												},
												{
													"key": "sort_order",
													"value": "<string>",
													"description": "The order in which to sort the suspended tickets.  This can take value `asc` or `desc`."
												}
											]
										},
										"description": "#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n* Unrestricted agents on all other plans\n\n#### Sorting\n\nYou can sort the tickets with the `sort_by` and `sort_order` query string parameters.\n\n#### Pagination\n\n* Cursor pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/suspended_tickets?sort_by=<string>&sort_order=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"suspended_tickets"
													],
													"query": [
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "The field to sort the ticket by, being one of `author_email`, `cause`, `created_at`, or `subject`."
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "The order in which to sort the suspended tickets.  This can take value `asc` or `desc`."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"suspended_tickets\": [\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"author\": {\n        \"email\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"brand_id\": \"<integer>\",\n      \"cause\": \"<string>\",\n      \"cause_id\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"message_id\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        }\n      }\n    },\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"author\": {\n        \"email\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"brand_id\": \"<integer>\",\n      \"cause\": \"<string>\",\n      \"cause_id\": \"<integer>\",\n      \"content\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"message_id\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        }\n      }\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "tags",
							"item": [
								{
									"name": "count",
									"item": [
										{
											"name": "Count Tags",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tags/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tags",
														"count"
													]
												},
												"description": "Returns an approximate count of tags. If the count exceeds 100,000, it\nis updated every 24 hours.\n\nThe `refreshed_at` property of the `count` object is a timestamp that indicates when\nthe count was last updated.\n\n**Note**: When the count exceeds 100,000, the `refreshed_at` property in the `count` object may\noccasionally be null. This indicates that the count is being\nupdated in the background and the `value` property in the `count` object is limited to\n100,000 until the update is complete.\n\n#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tags/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tags",
																"count"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": {\n    \"refreshed_at\": \"<string>\",\n    \"value\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Tags",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tags"
											]
										},
										"description": "Lists up to the 20,000 most popular tags in the last 60 days, in decreasing popularity.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tags"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"tags\": [\n    {\n      \"count\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"count\": \"<integer>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "target_failures",
							"item": [
								{
									"name": "{target_failure_id}",
									"item": [
										{
											"name": "Show Target Failure",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/target_failures/:target_failure_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"target_failures",
														":target_failure_id"
													],
													"variable": [
														{
															"key": "target_failure_id",
															"value": "<integer>",
															"description": "(Required) The ID of the target failure"
														}
													]
												},
												"description": "#### Stability\n\n* Development\n\n#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/target_failures/:target_failure_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"target_failures",
																":target_failure_id"
															],
															"variable": [
																{
																	"key": "target_failure_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"target_failure\": {\n    \"consecutive_failure_count\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"raw_request\": \"<string>\",\n    \"raw_response\": \"<string>\",\n    \"status_code\": \"<integer>\",\n    \"target_name\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Target Failures",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/target_failures",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"target_failures"
											]
										},
										"description": "Returns the 25 most recent target failures, per target.\n\n#### Stability\n\n* Development\n\n#### Allowed For\n\n* Admins\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/target_failures",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"target_failures"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"target_failures\": [\n    {\n      \"consecutive_failure_count\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"raw_request\": \"<string>\",\n      \"raw_response\": \"<string>\",\n      \"status_code\": \"<integer>\",\n      \"target_name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"consecutive_failure_count\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"raw_request\": \"<string>\",\n      \"raw_response\": \"<string>\",\n      \"status_code\": \"<integer>\",\n      \"target_name\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "targets",
							"item": [
								{
									"name": "{target_id}",
									"item": [
										{
											"name": "Show Target",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/targets/:target_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"targets",
														":target_id"
													],
													"variable": [
														{
															"key": "target_id",
															"value": "<integer>",
															"description": "(Required) The ID of the target"
														}
													]
												},
												"description": "#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/targets/:target_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"targets",
																":target_id"
															],
															"variable": [
																{
																	"key": "target_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"target\": {\n    \"project_id\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"target_url\": \"<string>\",\n    \"title\": \"<string>\",\n    \"token\": \"<string>\",\n    \"type\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"message_id\": \"<string>\",\n    \"password\": \"<string>\",\n    \"todo_list_id\": \"<string>\",\n    \"username\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Target",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/targets/:target_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"targets",
														":target_id"
													],
													"variable": [
														{
															"key": "target_id",
															"value": "<integer>",
															"description": "(Required) The ID of the target"
														}
													]
												},
												"description": "#### Allowed For\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/targets/:target_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"targets",
																":target_id"
															],
															"variable": [
																{
																	"key": "target_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"target\": {\n    \"project_id\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"target_url\": \"<string>\",\n    \"title\": \"<string>\",\n    \"token\": \"<string>\",\n    \"type\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"message_id\": \"<string>\",\n    \"password\": \"<string>\",\n    \"todo_list_id\": \"<string>\",\n    \"username\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Target",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/targets/:target_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"targets",
														":target_id"
													],
													"variable": [
														{
															"key": "target_id",
															"value": "<integer>",
															"description": "(Required) The ID of the target"
														}
													]
												},
												"description": "#### Allowed For\n* Admins\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/targets/:target_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"targets",
																":target_id"
															],
															"variable": [
																{
																	"key": "target_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "List Targets",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/targets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"targets"
											]
										},
										"description": "#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/targets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"targets"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"targets\": [\n    {\n      \"project_id\": \"<string>\",\n      \"resource\": \"<string>\",\n      \"target_url\": \"<string>\",\n      \"title\": \"<string>\",\n      \"token\": \"<string>\",\n      \"type\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"message_id\": \"<string>\",\n      \"password\": \"<string>\",\n      \"todo_list_id\": \"<string>\",\n      \"username\": \"<string>\"\n    },\n    {\n      \"project_id\": \"<string>\",\n      \"resource\": \"<string>\",\n      \"target_url\": \"<string>\",\n      \"title\": \"<string>\",\n      \"token\": \"<string>\",\n      \"type\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"message_id\": \"<string>\",\n      \"password\": \"<string>\",\n      \"todo_list_id\": \"<string>\",\n      \"username\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Target",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/targets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"targets"
											]
										},
										"description": "#### Allowed For\n\n* Admins\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/targets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"targets"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"target\": {\n    \"project_id\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"target_url\": \"<string>\",\n    \"title\": \"<string>\",\n    \"token\": \"<string>\",\n    \"type\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"message_id\": \"<string>\",\n    \"password\": \"<string>\",\n    \"todo_list_id\": \"<string>\",\n    \"username\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "ticket_audits",
							"item": [
								{
									"name": "List All Ticket Audits",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/ticket_audits?limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"ticket_audits"
											],
											"query": [
												{
													"key": "limit",
													"value": "<integer>",
													"description": "Maximum number of results returned"
												}
											]
										},
										"description": "Returns ticket audits. Archived tickets are not included in the response. Use the [List Audits for a Ticket](#list-audits-for-a-ticket) endpoint to \nretrieve audit records for an archived ticket. To learn more about archived tickets, see [About archived tickets](https://support.zendesk.com/hc/en-us/articles/203657756).\n\nThis endpoint should not be used for capturing change data. When continually chasing the tail of a cursor, some records will be skipped. For this use case, use the [Incremental Ticket Event Export API](/api-reference/ticketing/ticket-management/incremental_exports/#incremental-ticket-event-export).\n\n#### Pagination\n\n- Cursor pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Admins\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_audits?limit=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_audits"
													],
													"query": [
														{
															"key": "limit",
															"value": "<integer>",
															"description": "Maximum number of results returned"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"after_cursor\": \"<string>\",\n  \"after_url\": \"<string>\",\n  \"audits\": [\n    {\n      \"author_id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"events\": [\n        {\n          \"sed_4\": 44325059,\n          \"non_909\": -9118347.307142824,\n          \"non_2b\": \"dolore ea\"\n        },\n        {\n          \"in_c2\": -96872701.64074554,\n          \"deserunt3\": -28249548\n        }\n      ],\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"dolore_46\": -89101541.98568523,\n        \"ipsum_35\": \"Ut Lorem\"\n      },\n      \"ticket_id\": \"<integer>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"occaecat_1f8\": -26837289.07520342\n        }\n      }\n    },\n    {\n      \"author_id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"events\": [\n        {\n          \"voluptate371\": true\n        },\n        {\n          \"quis_f\": -26989867\n        }\n      ],\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"ut_13c\": 71089735.25602779\n      },\n      \"ticket_id\": \"<integer>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"laboris_d\": true,\n          \"adipisicing11\": true,\n          \"minim_e\": \"incididunt voluptate dolore\",\n          \"fugiat_0\": \"dolore exercitation Lorem adipisicing\"\n        }\n      }\n    }\n  ],\n  \"before_cursor\": \"<string>\",\n  \"before_url\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "ticket_fields",
							"item": [
								{
									"name": "{ticket_field_id}",
									"item": [
										{
											"name": "options",
											"item": [
												{
													"name": "{ticket_field_option_id}",
													"item": [
														{
															"name": "Show Ticket Field Option",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id/options/:ticket_field_option_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"ticket_fields",
																		":ticket_field_id",
																		"options",
																		":ticket_field_option_id"
																	],
																	"variable": [
																		{
																			"key": "ticket_field_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the ticket field"
																		},
																		{
																			"key": "ticket_field_option_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the ticket field option"
																		}
																	]
																},
																"description": "#### Allowed for\n* Agents\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id/options/:ticket_field_option_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"ticket_fields",
																				":ticket_field_id",
																				"options",
																				":ticket_field_option_id"
																			],
																			"variable": [
																				{
																					"key": "ticket_field_id"
																				},
																				{
																					"key": "ticket_field_option_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"custom_field_option\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_name\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
																}
															]
														},
														{
															"name": "Delete Ticket Field Option",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id/options/:ticket_field_option_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"ticket_fields",
																		":ticket_field_id",
																		"options",
																		":ticket_field_option_id"
																	],
																	"variable": [
																		{
																			"key": "ticket_field_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the ticket field"
																		},
																		{
																			"key": "ticket_field_option_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the ticket field option"
																		}
																	]
																},
																"description": "#### Allowed for\n* Admins\n"
															},
															"response": [
																{
																	"name": "No Content response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id/options/:ticket_field_option_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"ticket_fields",
																				":ticket_field_id",
																				"options",
																				":ticket_field_option_id"
																			],
																			"variable": [
																				{
																					"key": "ticket_field_id"
																				},
																				{
																					"key": "ticket_field_option_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": null
																}
															]
														}
													]
												},
												{
													"name": "List Ticket Field Options",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id/options",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_fields",
																":ticket_field_id",
																"options"
															],
															"variable": [
																{
																	"key": "ticket_field_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket field"
																}
															]
														},
														"description": "Returns a list of custom ticket field options for the given drop-down ticket field.\n\n#### Allowed For\n\n* Agents\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id/options",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"ticket_fields",
																		":ticket_field_id",
																		"options"
																	],
																	"variable": [
																		{
																			"key": "ticket_field_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"count\": \"<integer>\",\n  \"custom_field_options\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_name\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Create or Update Ticket Field Option",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id/options",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_fields",
																":ticket_field_id",
																"options"
															],
															"variable": [
																{
																	"key": "ticket_field_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket field"
																}
															]
														},
														"description": "Creates or updates an option for the given drop-down ticket field.\n\nTo update an option, include the id of the option in the `custom_field_option` object. Example:\n\n`{\"custom_field_option\": {\"id\": 10002, \"name\": \"Pineapples\", ... }`\n\nIf an option exists for the given ID, the option will be updated. Otherwise, a new option will be created.\n\n#### Response\n\nReturns one of the following status codes:\n\n- 200 with `Location: /api/v2/ticket_fields/{ticket_field_id}/options.json` if the ticket field option already exists in the database\n- 201 with `Location: /api/v2/ticket_fields/{ticket_field_id}/options.json` if the ticket field option is new\n\n#### Allowed For\n\n* Admins\n\n#### Rate Limit\nYou can make 100 requests every 1 minute using this endpoint.\nThe rate limiting mechanism behaves as described in\n[Monitoring your request activity](/api-reference/ticketing/account-configuration/usage_limits/#monitoring-your-request-activity) in the API introduction.\n\n#### Field Option Limits\n\n* 2000 options per ticket field\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id/options",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"ticket_fields",
																		":ticket_field_id",
																		"options"
																	],
																	"variable": [
																		{
																			"key": "ticket_field_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"custom_field_option\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_name\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
														},
														{
															"name": "Created response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id/options",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"ticket_fields",
																		":ticket_field_id",
																		"options"
																	],
																	"variable": [
																		{
																			"key": "ticket_field_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"custom_field_option\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_name\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Show Ticket Field",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id?creator=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_fields",
														":ticket_field_id"
													],
													"query": [
														{
															"key": "creator",
															"value": "<boolean>",
															"description": "If true, displays the `creator_user_id` and `creator_app_name` properties. If the ticket field is created\n by an app, `creator_app_name` is the name of the app and `creator_user_id` is `-1`. If the ticket field\n is not created by an app, then `creator_app_name` is null\n"
														}
													],
													"variable": [
														{
															"key": "ticket_field_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket field"
														}
													]
												},
												"description": "#### Allowed for\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| users            | The user or users that created the ticket field\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id?creator=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_fields",
																":ticket_field_id"
															],
															"query": [
																{
																	"key": "creator",
																	"value": "<boolean>",
																	"description": "If true, displays the `creator_user_id` and `creator_app_name` properties. If the ticket field is created\n by an app, `creator_app_name` is the name of the app and `creator_user_id` is `-1`. If the ticket field\n is not created by an app, then `creator_app_name` is null\n"
																}
															],
															"variable": [
																{
																	"key": "ticket_field_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ticket_field\": {\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"agent_description\": \"<string>\",\n    \"collapsed_for_agents\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"creator_app_name\": \"<string>\",\n    \"creator_user_id\": \"<integer>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"custom_statuses\": [\n      {\n        \"active\": \"<boolean>\",\n        \"agent_label\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"end_user_description\": \"<string>\",\n        \"end_user_label\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"status_category\": \"hold\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      {\n        \"active\": \"<boolean>\",\n        \"agent_label\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"end_user_description\": \"<string>\",\n        \"end_user_label\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"status_category\": \"open\",\n        \"updated_at\": \"<dateTime>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"editable_in_portal\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"raw_title_in_portal\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"removable\": \"<boolean>\",\n    \"required\": \"<boolean>\",\n    \"required_in_portal\": \"<boolean>\",\n    \"sub_type_id\": \"<integer>\",\n    \"system_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"tag\": \"<string>\",\n    \"title_in_portal\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"visible_in_portal\": \"<boolean>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Ticket Field",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id?creator=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_fields",
														":ticket_field_id"
													],
													"query": [
														{
															"key": "creator",
															"value": "<boolean>",
															"description": "If true, displays the `creator_user_id` and `creator_app_name` properties. If the ticket field is created\n by an app, `creator_app_name` is the name of the app and `creator_user_id` is `-1`. If the ticket field\n is not created by an app, then `creator_app_name` is null\n"
														}
													],
													"variable": [
														{
															"key": "ticket_field_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket field"
														}
													]
												},
												"description": "#### Updating drop-down field options\n\nYou can also use the update endpoint to add, update, or remove options in a drop-down custom field. Updating field options for multi-select fields works exactly the same as drop-down field options.\n\n**Important**: Unless you want to remove some options, you must specify all existing options in any update request. Omitting an option removes it from the drop-down field, which removes its values from any tickets or macros.\n\nUse the `custom_field_options` attribute to update the options. The attribute consists of an array of option objects, with each object consisting of a `name` and `value` property. The properties correspond to the \"Title\" and \"Tag\" text boxes in the admin interface. Example request body:\n\n```json\n{\"ticket_field\": {\n    \"custom_field_options\": [\n      {\"name\": \"Apple Pie\", \"value\": \"apple\"},\n      {\"name\": \"Pecan Pie\", \"value\": \"pecan\"}\n    ]\n  }\n}\n```\n\n#### Example Request\n\n```bash\ncurl https://{subdomain}.zendesk.com/api/v2/ticket_fields/{id}.json \\\n  -d '{\"ticket_field\": {\"custom_field_options\": [{\"name\": \"Apple Pie\", \"value\": \"apple\"}, {\"name\": \"Pecan Pie\", \"value\": \"pecan\"}]}}' \\\n  -H \"Content-Type: application/json\" -X PUT \\\n  -v -u {email_address}:{password}\n```\n\n#### Example Response\n\n```http\nStatus: 200 OK\n\n{\n  \"ticket_field\": {\n    \"id\":21938362,\n    \"type\":\"tagger\",\n    \"title\":\"Pies\",\n    ...\n    \"custom_field_options\": [\n      {\n        \"id\":21029772,\n        \"name\":\"Apple Pie\",\n        \"raw_name\":\"Apple Pie\",\n        \"value\":\"apple\",\n        \"default\":false\n      },\n      ...\n    ]\n  }\n}\n```\n\n#### Allowed for\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id?creator=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_fields",
																":ticket_field_id"
															],
															"query": [
																{
																	"key": "creator",
																	"value": "<boolean>",
																	"description": "If true, displays the `creator_user_id` and `creator_app_name` properties. If the ticket field is created\n by an app, `creator_app_name` is the name of the app and `creator_user_id` is `-1`. If the ticket field\n is not created by an app, then `creator_app_name` is null\n"
																}
															],
															"variable": [
																{
																	"key": "ticket_field_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ticket_field\": {\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"agent_description\": \"<string>\",\n    \"collapsed_for_agents\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"creator_app_name\": \"<string>\",\n    \"creator_user_id\": \"<integer>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"custom_statuses\": [\n      {\n        \"active\": \"<boolean>\",\n        \"agent_label\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"end_user_description\": \"<string>\",\n        \"end_user_label\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"status_category\": \"hold\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      {\n        \"active\": \"<boolean>\",\n        \"agent_label\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"end_user_description\": \"<string>\",\n        \"end_user_label\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"status_category\": \"open\",\n        \"updated_at\": \"<dateTime>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"editable_in_portal\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"raw_title_in_portal\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"removable\": \"<boolean>\",\n    \"required\": \"<boolean>\",\n    \"required_in_portal\": \"<boolean>\",\n    \"sub_type_id\": \"<integer>\",\n    \"system_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"tag\": \"<string>\",\n    \"title_in_portal\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"visible_in_portal\": \"<boolean>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Ticket Field",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id?creator=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_fields",
														":ticket_field_id"
													],
													"query": [
														{
															"key": "creator",
															"value": "<boolean>",
															"description": "If true, displays the `creator_user_id` and `creator_app_name` properties. If the ticket field is created\n by an app, `creator_app_name` is the name of the app and `creator_user_id` is `-1`. If the ticket field\n is not created by an app, then `creator_app_name` is null\n"
														}
													],
													"variable": [
														{
															"key": "ticket_field_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket field"
														}
													]
												},
												"description": "#### Allowed for\n\n* Admins\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_fields/:ticket_field_id?creator=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_fields",
																":ticket_field_id"
															],
															"query": [
																{
																	"key": "creator",
																	"value": "<boolean>",
																	"description": "If true, displays the `creator_user_id` and `creator_app_name` properties. If the ticket field is created\n by an app, `creator_app_name` is the name of the app and `creator_user_id` is `-1`. If the ticket field\n is not created by an app, then `creator_app_name` is null\n"
																}
															],
															"variable": [
																{
																	"key": "ticket_field_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "count",
									"item": [
										{
											"name": "Count Ticket Fields",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_fields/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_fields",
														"count"
													]
												},
												"description": "Returns an approximate count of system and custom ticket fields in the account. If the count exceeds 100,000, the count will return a cached result.  This cached result will update every 24 hours.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n* Agents"
											},
											"response": [
												{
													"name": "Count of ticket fields",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_fields/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_fields",
																"count"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": {\n    \"refreshed_at\": \"<dateTime>\",\n    \"value\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Ticket Fields",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/ticket_fields?locale=<string>&creator=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"ticket_fields"
											],
											"query": [
												{
													"key": "locale",
													"value": "<string>",
													"description": "Forces the `title_in_portal` property to return a dynamic content variant for the specified locale.\n Only accepts [active locale ids](/api-reference/ticketing/account-configuration/locales/#list-locales).\nExample: `locale=\"de\"`.\n"
												},
												{
													"key": "creator",
													"value": "<boolean>",
													"description": "Displays the `creator_user_id` and `creator_app_name` properties. If the ticket field is created\n by an app, `creator_app_name` is the name of the app and `creator_user_id` is `-1`. If the ticket field\n is not created by an app, `creator_app_name` is null\n"
												}
											]
										},
										"description": "Returns a list of all system and custom ticket fields in your account.\n\nCursor pagination returns a maximum of 100 records per page and fields are returned in the order specified by their id.\n\nIf the results are not paginated every field is returned in the response and fields are returned in the order specified by the position and id.\n\nFor accounts without access to multiple ticket forms, positions can be changed using the [Update Ticket Field](/api-reference/ticketing/tickets/ticket_fields/#update-ticket-field) endpoint or the Ticket Forms page in Zendesk Support (**Admin** > **Manage** > **Ticket Forms**). The Ticket Forms page shows the fields for the account. The order of the fields is used in the different products to show the field values in the tickets.\n\nFor accounts with access to multiple ticket forms, positions can only be changed using the [Update Ticket Field](/api-reference/ticketing/tickets/ticket_fields/#update-ticket-field) endpoint because products use the order defined on each form to show the field values instead of the general position of the ticket field in the account.\n\nConsider caching this resource to use with the [Tickets](/api-reference/ticketing/tickets/tickets/#json-format) API.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- No pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| users            | The user or users that created the ticket field\n\n#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_fields?locale=<string>&creator=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_fields"
													],
													"query": [
														{
															"key": "locale",
															"value": "<string>",
															"description": "Forces the `title_in_portal` property to return a dynamic content variant for the specified locale.\n Only accepts [active locale ids](/api-reference/ticketing/account-configuration/locales/#list-locales).\nExample: `locale=\"de\"`.\n"
														},
														{
															"key": "creator",
															"value": "<boolean>",
															"description": "Displays the `creator_user_id` and `creator_app_name` properties. If the ticket field is created\n by an app, `creator_app_name` is the name of the app and `creator_user_id` is `-1`. If the ticket field\n is not created by an app, `creator_app_name` is null\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"ticket_fields\": [\n    {\n      \"type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"agent_description\": \"<string>\",\n      \"collapsed_for_agents\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"creator_app_name\": \"<string>\",\n      \"creator_user_id\": \"<integer>\",\n      \"custom_field_options\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"custom_statuses\": [\n        {\n          \"active\": \"<boolean>\",\n          \"agent_label\": \"<string>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"description\": \"<string>\",\n          \"end_user_description\": \"<string>\",\n          \"end_user_label\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"status_category\": \"hold\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        {\n          \"active\": \"<boolean>\",\n          \"agent_label\": \"<string>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"description\": \"<string>\",\n          \"end_user_description\": \"<string>\",\n          \"end_user_label\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"status_category\": \"pending\",\n          \"updated_at\": \"<dateTime>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"editable_in_portal\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_description\": \"<string>\",\n      \"raw_title\": \"<string>\",\n      \"raw_title_in_portal\": \"<string>\",\n      \"regexp_for_validation\": \"<string>\",\n      \"relationship_filter\": {},\n      \"relationship_target_type\": \"<string>\",\n      \"removable\": \"<boolean>\",\n      \"required\": \"<boolean>\",\n      \"required_in_portal\": \"<boolean>\",\n      \"sub_type_id\": \"<integer>\",\n      \"system_field_options\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"tag\": \"<string>\",\n      \"title_in_portal\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"visible_in_portal\": \"<boolean>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"agent_description\": \"<string>\",\n      \"collapsed_for_agents\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"creator_app_name\": \"<string>\",\n      \"creator_user_id\": \"<integer>\",\n      \"custom_field_options\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"custom_statuses\": [\n        {\n          \"active\": \"<boolean>\",\n          \"agent_label\": \"<string>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"description\": \"<string>\",\n          \"end_user_description\": \"<string>\",\n          \"end_user_label\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"status_category\": \"new\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        {\n          \"active\": \"<boolean>\",\n          \"agent_label\": \"<string>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"description\": \"<string>\",\n          \"end_user_description\": \"<string>\",\n          \"end_user_label\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"status_category\": \"pending\",\n          \"updated_at\": \"<dateTime>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"editable_in_portal\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_description\": \"<string>\",\n      \"raw_title\": \"<string>\",\n      \"raw_title_in_portal\": \"<string>\",\n      \"regexp_for_validation\": \"<string>\",\n      \"relationship_filter\": {},\n      \"relationship_target_type\": \"<string>\",\n      \"removable\": \"<boolean>\",\n      \"required\": \"<boolean>\",\n      \"required_in_portal\": \"<boolean>\",\n      \"sub_type_id\": \"<integer>\",\n      \"system_field_options\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"tag\": \"<string>\",\n      \"title_in_portal\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"visible_in_portal\": \"<boolean>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Ticket Field",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/ticket_fields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"ticket_fields"
											]
										},
										"description": "Creates any of the following custom field types:\n\n| Custom field type | Description                                                                                                                                                     |\n|-------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| text              | Default custom field type when `type` is not specified                                                                                                          |\n| textarea          | For multi-line text                                                                                                                                             |\n| checkbox          | To capture a boolean value. Allowed values are true or false                                                                                                    |\n| date              | Example: 2021-04-16                                                                                                                                   |\n| integer           | String composed of numbers. May contain an optional decimal point                                                                                               |\n| decimal           | For numbers containing decimals                                                                                                                                 |\n| regexp            | Matches the Regex pattern found in the custom field settings                                                                                                    |\n| partialcreditcard | A credit card number. Only the last 4 digits are retained                                                                                                                                      |\n| multiselect       | Enables users to choose multiple options from a dropdown menu                                                                                                |\n| tagger            | Single-select dropdown menu. It contains one or more tag values belonging to the field's options. Example: ( {\"id\": 21938362, \"value\": [\"hd_3000\", \"hd_5555\"]}) |\n| lookup            | A field to create a relationship (see [lookup relationships](/api-reference/ticketing/lookup_relationships/lookup_relationships/)) to another object such as a user, ticket, or organization |\n\nSee [About custom field types](https://support.zendesk.com/hc/en-us/articles/203661866) in the Zendesk Help Center.\n\n#### Allowed For\n\n* Admins\n\n#### Field limits\n\nWe recommend the following best practices for ticket fields limits. Creating more than these amounts can affect performance.\n\n* 400 ticket fields per account if your account doesn't have ticket forms\n* 400 ticket fields per ticket form if your account has ticket forms\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_fields"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"ticket_field\": {\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"agent_description\": \"<string>\",\n    \"collapsed_for_agents\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"creator_app_name\": \"<string>\",\n    \"creator_user_id\": \"<integer>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"custom_statuses\": [\n      {\n        \"active\": \"<boolean>\",\n        \"agent_label\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"end_user_description\": \"<string>\",\n        \"end_user_label\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"status_category\": \"hold\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      {\n        \"active\": \"<boolean>\",\n        \"agent_label\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"end_user_description\": \"<string>\",\n        \"end_user_label\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"status_category\": \"open\",\n        \"updated_at\": \"<dateTime>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"editable_in_portal\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"raw_title_in_portal\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"removable\": \"<boolean>\",\n    \"required\": \"<boolean>\",\n    \"required_in_portal\": \"<boolean>\",\n    \"sub_type_id\": \"<integer>\",\n    \"system_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"tag\": \"<string>\",\n    \"title_in_portal\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"visible_in_portal\": \"<boolean>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "ticket_forms",
							"item": [
								{
									"name": "{ticket_form_id}",
									"item": [
										{
											"name": "clone",
											"item": [
												{
													"name": "Clone an already existing ticket form",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_forms/:ticket_form_id/clone",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_forms",
																":ticket_form_id",
																"clone"
															],
															"variable": [
																{
																	"key": "ticket_form_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket form"
																}
															]
														},
														"description": "#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/ticket_forms/:ticket_form_id/clone",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"ticket_forms",
																		":ticket_form_id",
																		"clone"
																	],
																	"variable": [
																		{
																			"key": "ticket_form_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ticket_form\": {\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"agent_conditions\": [\n      {\n        \"doloreb9\": false,\n        \"proident_0\": -96485.78992278874,\n        \"aliquadf\": true\n      },\n      {\n        \"Excepteur_d23\": \"reprehenderit aute amet\",\n        \"nulla_0\": false\n      }\n    ],\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"end_user_conditions\": [\n      {\n        \"mollit_12\": 60996220,\n        \"exercitationc62\": -90045763.47263078,\n        \"magna9c0\": true,\n        \"enimc10\": true\n      },\n      {\n        \"commodo40\": -73702117.82859237\n      }\n    ],\n    \"end_user_visible\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"in_all_brands\": \"<boolean>\",\n    \"position\": \"<integer>\",\n    \"raw_display_name\": \"<string>\",\n    \"raw_name\": \"<string>\",\n    \"restricted_brand_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"ticket_field_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Show Ticket Form",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_forms/:ticket_form_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_forms",
														":ticket_form_id"
													],
													"variable": [
														{
															"key": "ticket_form_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket form"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins, Agents, and End Users\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_forms/:ticket_form_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_forms",
																":ticket_form_id"
															],
															"variable": [
																{
																	"key": "ticket_form_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ticket_form\": {\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"agent_conditions\": [\n      {\n        \"doloreb9\": false,\n        \"proident_0\": -96485.78992278874,\n        \"aliquadf\": true\n      },\n      {\n        \"Excepteur_d23\": \"reprehenderit aute amet\",\n        \"nulla_0\": false\n      }\n    ],\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"end_user_conditions\": [\n      {\n        \"mollit_12\": 60996220,\n        \"exercitationc62\": -90045763.47263078,\n        \"magna9c0\": true,\n        \"enimc10\": true\n      },\n      {\n        \"commodo40\": -73702117.82859237\n      }\n    ],\n    \"end_user_visible\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"in_all_brands\": \"<boolean>\",\n    \"position\": \"<integer>\",\n    \"raw_display_name\": \"<string>\",\n    \"raw_name\": \"<string>\",\n    \"restricted_brand_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"ticket_field_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Ticket Form",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_forms/:ticket_form_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_forms",
														":ticket_form_id"
													],
													"variable": [
														{
															"key": "ticket_form_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket form"
														}
													]
												},
												"description": "#### Allowed For\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_forms/:ticket_form_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_forms",
																":ticket_form_id"
															],
															"variable": [
																{
																	"key": "ticket_form_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ticket_form\": {\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"agent_conditions\": [\n      {\n        \"doloreb9\": false,\n        \"proident_0\": -96485.78992278874,\n        \"aliquadf\": true\n      },\n      {\n        \"Excepteur_d23\": \"reprehenderit aute amet\",\n        \"nulla_0\": false\n      }\n    ],\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"end_user_conditions\": [\n      {\n        \"mollit_12\": 60996220,\n        \"exercitationc62\": -90045763.47263078,\n        \"magna9c0\": true,\n        \"enimc10\": true\n      },\n      {\n        \"commodo40\": -73702117.82859237\n      }\n    ],\n    \"end_user_visible\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"in_all_brands\": \"<boolean>\",\n    \"position\": \"<integer>\",\n    \"raw_display_name\": \"<string>\",\n    \"raw_name\": \"<string>\",\n    \"restricted_brand_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"ticket_field_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Ticket Form",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_forms/:ticket_form_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_forms",
														":ticket_form_id"
													],
													"variable": [
														{
															"key": "ticket_form_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket form"
														}
													]
												},
												"description": "#### Allowed For\n* Admins\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_forms/:ticket_form_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_forms",
																":ticket_form_id"
															],
															"variable": [
																{
																	"key": "ticket_form_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "reorder",
									"item": [
										{
											"name": "Reorder Ticket Forms",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_forms/reorder",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_forms",
														"reorder"
													]
												},
												"description": "#### Allowed For\n* Admins\n\n#### Request Parameters\n\nYou can pass in the following parameter in the payload:\n\n| Name                | Type   | Comment\n| ------------------- | ------ | --------\n| ticket_form_ids     | array  | An array of ticket form ids. Example: \"[2, 23, 46, 50]\"\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_forms/reorder",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_forms",
																"reorder"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ticket_forms\": [\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"agent_conditions\": [\n        {\n          \"magna_909\": 72093313.11335126,\n          \"Ut7d\": 60217819.25615138,\n          \"uta\": 81379298.7531021\n        },\n        {\n          \"eiusmod_f_5\": true,\n          \"ea_8e\": \"sint magna\",\n          \"commodo7\": 55841961\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"end_user_conditions\": [\n        {\n          \"aliquip_e1d\": \"dolor cupidatat volup\"\n        },\n        {\n          \"aliquip_d\": 14079159.360052839\n        }\n      ],\n      \"end_user_visible\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"in_all_brands\": \"<boolean>\",\n      \"position\": \"<integer>\",\n      \"raw_display_name\": \"<string>\",\n      \"raw_name\": \"<string>\",\n      \"restricted_brand_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"ticket_field_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"agent_conditions\": [\n        {\n          \"id4a\": true\n        },\n        {\n          \"aliquaf\": -46372977.70537545\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"end_user_conditions\": [\n        {\n          \"eiusmod_4d_\": false\n        },\n        {\n          \"quis_9\": -29679032,\n          \"fugiat41\": 11723576.003896102,\n          \"reprehenderit_1f\": -34177381,\n          \"eiusmode12\": -98518187\n        }\n      ],\n      \"end_user_visible\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"in_all_brands\": \"<boolean>\",\n      \"position\": \"<integer>\",\n      \"raw_display_name\": \"<string>\",\n      \"raw_name\": \"<string>\",\n      \"restricted_brand_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"ticket_field_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "show_many",
									"item": [
										{
											"name": "Show Many Ticket Forms",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_forms/show_many?ids=<string>&active=<boolean>&end_user_visible=<boolean>&fallback_to_default=<boolean>&associated_to_brand=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_forms",
														"show_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) IDs of the ticket forms to be shown"
														},
														{
															"key": "active",
															"value": "<boolean>",
															"description": "true returns active ticket forms; false returns inactive ticket forms. If not present, returns both"
														},
														{
															"key": "end_user_visible",
															"value": "<boolean>",
															"description": "true returns ticket forms where `end_user_visible`; false returns ticket forms that are not end-user visible. If not present, returns both"
														},
														{
															"key": "fallback_to_default",
															"value": "<boolean>",
															"description": "true returns the default ticket form when the criteria defined by the parameters results in a set without active and end-user visible ticket forms"
														},
														{
															"key": "associated_to_brand",
															"value": "<boolean>",
															"description": "true returns the ticket forms of the brand specified by the url's subdomain"
														}
													]
												},
												"description": "Takes an `ids` query parameter that accepts a comma-separated list of up to 100 ticket form ids. This endpoint is used primarily by the [mobile SDK](/documentation/classic-web-widget-sdks/) and the [Web Widget](/api-reference/widget/introduction/).\n\n#### Allowed For\n\n* Anyone\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_forms/show_many?ids=<string>&active=<boolean>&end_user_visible=<boolean>&fallback_to_default=<boolean>&associated_to_brand=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_forms",
																"show_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) IDs of the ticket forms to be shown"
																},
																{
																	"key": "active",
																	"value": "<boolean>",
																	"description": "true returns active ticket forms; false returns inactive ticket forms. If not present, returns both"
																},
																{
																	"key": "end_user_visible",
																	"value": "<boolean>",
																	"description": "true returns ticket forms where `end_user_visible`; false returns ticket forms that are not end-user visible. If not present, returns both"
																},
																{
																	"key": "fallback_to_default",
																	"value": "<boolean>",
																	"description": "true returns the default ticket form when the criteria defined by the parameters results in a set without active and end-user visible ticket forms"
																},
																{
																	"key": "associated_to_brand",
																	"value": "<boolean>",
																	"description": "true returns the ticket forms of the brand specified by the url's subdomain"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ticket_forms\": [\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"agent_conditions\": [\n        {\n          \"magna_909\": 72093313.11335126,\n          \"Ut7d\": 60217819.25615138,\n          \"uta\": 81379298.7531021\n        },\n        {\n          \"eiusmod_f_5\": true,\n          \"ea_8e\": \"sint magna\",\n          \"commodo7\": 55841961\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"end_user_conditions\": [\n        {\n          \"aliquip_e1d\": \"dolor cupidatat volup\"\n        },\n        {\n          \"aliquip_d\": 14079159.360052839\n        }\n      ],\n      \"end_user_visible\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"in_all_brands\": \"<boolean>\",\n      \"position\": \"<integer>\",\n      \"raw_display_name\": \"<string>\",\n      \"raw_name\": \"<string>\",\n      \"restricted_brand_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"ticket_field_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"agent_conditions\": [\n        {\n          \"id4a\": true\n        },\n        {\n          \"aliquaf\": -46372977.70537545\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"end_user_conditions\": [\n        {\n          \"eiusmod_4d_\": false\n        },\n        {\n          \"quis_9\": -29679032,\n          \"fugiat41\": 11723576.003896102,\n          \"reprehenderit_1f\": -34177381,\n          \"eiusmode12\": -98518187\n        }\n      ],\n      \"end_user_visible\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"in_all_brands\": \"<boolean>\",\n      \"position\": \"<integer>\",\n      \"raw_display_name\": \"<string>\",\n      \"raw_name\": \"<string>\",\n      \"restricted_brand_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"ticket_field_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Ticket Forms",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/ticket_forms?active=<boolean>&end_user_visible=<boolean>&fallback_to_default=<boolean>&associated_to_brand=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"ticket_forms"
											],
											"query": [
												{
													"key": "active",
													"value": "<boolean>",
													"description": "true returns active ticket forms; false returns inactive ticket forms. If not present, returns both"
												},
												{
													"key": "end_user_visible",
													"value": "<boolean>",
													"description": "true returns ticket forms where `end_user_visible`; false returns ticket forms that are not end-user visible. If not present, returns both"
												},
												{
													"key": "fallback_to_default",
													"value": "<boolean>",
													"description": "true returns the default ticket form when the criteria defined by the parameters results in a set without active and end-user visible ticket forms"
												},
												{
													"key": "associated_to_brand",
													"value": "<boolean>",
													"description": "true returns the ticket forms of the brand specified by the url's subdomain"
												}
											]
										},
										"description": "Returns a list of all ticket forms for your account if accessed as an admin or agent. End users only see ticket forms that have `end_user_visible` set to true.\n\n#### Allowed For\n\n* Anyone\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_forms?active=<boolean>&end_user_visible=<boolean>&fallback_to_default=<boolean>&associated_to_brand=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_forms"
													],
													"query": [
														{
															"key": "active",
															"value": "<boolean>",
															"description": "true returns active ticket forms; false returns inactive ticket forms. If not present, returns both"
														},
														{
															"key": "end_user_visible",
															"value": "<boolean>",
															"description": "true returns ticket forms where `end_user_visible`; false returns ticket forms that are not end-user visible. If not present, returns both"
														},
														{
															"key": "fallback_to_default",
															"value": "<boolean>",
															"description": "true returns the default ticket form when the criteria defined by the parameters results in a set without active and end-user visible ticket forms"
														},
														{
															"key": "associated_to_brand",
															"value": "<boolean>",
															"description": "true returns the ticket forms of the brand specified by the url's subdomain"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"ticket_forms\": [\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"agent_conditions\": [\n        {\n          \"magna_909\": 72093313.11335126,\n          \"Ut7d\": 60217819.25615138,\n          \"uta\": 81379298.7531021\n        },\n        {\n          \"eiusmod_f_5\": true,\n          \"ea_8e\": \"sint magna\",\n          \"commodo7\": 55841961\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"end_user_conditions\": [\n        {\n          \"aliquip_e1d\": \"dolor cupidatat volup\"\n        },\n        {\n          \"aliquip_d\": 14079159.360052839\n        }\n      ],\n      \"end_user_visible\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"in_all_brands\": \"<boolean>\",\n      \"position\": \"<integer>\",\n      \"raw_display_name\": \"<string>\",\n      \"raw_name\": \"<string>\",\n      \"restricted_brand_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"ticket_field_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"agent_conditions\": [\n        {\n          \"id4a\": true\n        },\n        {\n          \"aliquaf\": -46372977.70537545\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"display_name\": \"<string>\",\n      \"end_user_conditions\": [\n        {\n          \"eiusmod_4d_\": false\n        },\n        {\n          \"quis_9\": -29679032,\n          \"fugiat41\": 11723576.003896102,\n          \"reprehenderit_1f\": -34177381,\n          \"eiusmode12\": -98518187\n        }\n      ],\n      \"end_user_visible\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"in_all_brands\": \"<boolean>\",\n      \"position\": \"<integer>\",\n      \"raw_display_name\": \"<string>\",\n      \"raw_name\": \"<string>\",\n      \"restricted_brand_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"ticket_field_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Ticket Form",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/ticket_forms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"ticket_forms"
											]
										},
										"description": "#### Allowed For\n\n* Admins\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_forms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_forms"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"ticket_form\": {\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"agent_conditions\": [\n      {\n        \"doloreb9\": false,\n        \"proident_0\": -96485.78992278874,\n        \"aliquadf\": true\n      },\n      {\n        \"Excepteur_d23\": \"reprehenderit aute amet\",\n        \"nulla_0\": false\n      }\n    ],\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"display_name\": \"<string>\",\n    \"end_user_conditions\": [\n      {\n        \"mollit_12\": 60996220,\n        \"exercitationc62\": -90045763.47263078,\n        \"magna9c0\": true,\n        \"enimc10\": true\n      },\n      {\n        \"commodo40\": -73702117.82859237\n      }\n    ],\n    \"end_user_visible\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"in_all_brands\": \"<boolean>\",\n    \"position\": \"<integer>\",\n    \"raw_display_name\": \"<string>\",\n    \"raw_name\": \"<string>\",\n    \"restricted_brand_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"ticket_field_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "ticket_metrics",
							"item": [
								{
									"name": "{ticket_metric_id}",
									"item": [
										{
											"name": "Show Ticket Metrics",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_metrics/:ticket_metric_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_metrics",
														":ticket_metric_id"
													],
													"variable": [
														{
															"key": "ticket_metric_id",
															"value": "<string>",
															"description": "(Required) The id of the ticket metric to retrieve"
														}
													]
												},
												"description": "Returns a specific metric, or the metrics of a specific ticket.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/ticket_metrics/:ticket_metric_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"ticket_metrics",
																":ticket_metric_id"
															],
															"variable": [
																{
																	"key": "ticket_metric_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ticket_metric\": [\n    {\n      \"agent_wait_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"assigned_at\": \"<dateTime>\",\n      \"assignee_stations\": \"<integer>\",\n      \"assignee_updated_at\": \"<dateTime>\",\n      \"created_at\": \"<dateTime>\",\n      \"custom_status_updated_at\": \"<dateTime>\",\n      \"first_resolution_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"full_resolution_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"group_stations\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"initially_assigned_at\": \"<dateTime>\",\n      \"latest_comment_added_at\": \"<dateTime>\",\n      \"on_hold_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"reopens\": \"<integer>\",\n      \"replies\": \"<integer>\",\n      \"reply_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"reply_time_in_seconds\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"requester_updated_at\": \"<dateTime>\",\n      \"requester_wait_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"solved_at\": \"<dateTime>\",\n      \"status_updated_at\": \"<dateTime>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"agent_wait_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"assigned_at\": \"<dateTime>\",\n      \"assignee_stations\": \"<integer>\",\n      \"assignee_updated_at\": \"<dateTime>\",\n      \"created_at\": \"<dateTime>\",\n      \"custom_status_updated_at\": \"<dateTime>\",\n      \"first_resolution_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"full_resolution_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"group_stations\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"initially_assigned_at\": \"<dateTime>\",\n      \"latest_comment_added_at\": \"<dateTime>\",\n      \"on_hold_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"reopens\": \"<integer>\",\n      \"replies\": \"<integer>\",\n      \"reply_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"reply_time_in_seconds\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"requester_updated_at\": \"<dateTime>\",\n      \"requester_wait_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"solved_at\": \"<dateTime>\",\n      \"status_updated_at\": \"<dateTime>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Ticket Metrics",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/ticket_metrics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"ticket_metrics"
											]
										},
										"description": "Returns a list of tickets with their metrics.\n\nTickets are ordered chronologically by created date, from newest to oldest.\nThe last ticket listed may not be the absolute oldest ticket in your account\ndue to ticket archiving.\n\nArchived tickets are not included in the response. See\n[About archived tickets](https://support.zendesk.com/hc/en-us/articles/203657756) in\nZendesk help.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n\n#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/ticket_metrics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"ticket_metrics"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"ticket_metrics\": [\n    {\n      \"agent_wait_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"assigned_at\": \"<dateTime>\",\n      \"assignee_stations\": \"<integer>\",\n      \"assignee_updated_at\": \"<dateTime>\",\n      \"created_at\": \"<dateTime>\",\n      \"custom_status_updated_at\": \"<dateTime>\",\n      \"first_resolution_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"full_resolution_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"group_stations\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"initially_assigned_at\": \"<dateTime>\",\n      \"latest_comment_added_at\": \"<dateTime>\",\n      \"on_hold_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"reopens\": \"<integer>\",\n      \"replies\": \"<integer>\",\n      \"reply_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"reply_time_in_seconds\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"requester_updated_at\": \"<dateTime>\",\n      \"requester_wait_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"solved_at\": \"<dateTime>\",\n      \"status_updated_at\": \"<dateTime>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"agent_wait_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"assigned_at\": \"<dateTime>\",\n      \"assignee_stations\": \"<integer>\",\n      \"assignee_updated_at\": \"<dateTime>\",\n      \"created_at\": \"<dateTime>\",\n      \"custom_status_updated_at\": \"<dateTime>\",\n      \"first_resolution_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"full_resolution_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"group_stations\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"initially_assigned_at\": \"<dateTime>\",\n      \"latest_comment_added_at\": \"<dateTime>\",\n      \"on_hold_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"reopens\": \"<integer>\",\n      \"replies\": \"<integer>\",\n      \"reply_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"reply_time_in_seconds\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"requester_updated_at\": \"<dateTime>\",\n      \"requester_wait_time_in_minutes\": {\n        \"business\": \"<integer>\",\n        \"calendar\": \"<integer>\"\n      },\n      \"solved_at\": \"<dateTime>\",\n      \"status_updated_at\": \"<dateTime>\",\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "tickets",
							"item": [
								{
									"name": "{ticket_id}",
									"item": [
										{
											"name": "audits",
											"item": [
												{
													"name": "{ticket_audit_id}",
													"item": [
														{
															"name": "make_private",
															"item": [
																{
																	"name": "Change a comment from public to private",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/audits/:ticket_audit_id/make_private",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"tickets",
																				":ticket_id",
																				"audits",
																				":ticket_audit_id",
																				"make_private"
																			],
																			"variable": [
																				{
																					"key": "ticket_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the ticket"
																				},
																				{
																					"key": "ticket_audit_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the ticket audit"
																				}
																			]
																		},
																		"description": "#### Allowed for\n\n* Agents\n"
																	},
																	"response": [
																		{
																			"name": "description",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/audits/:ticket_audit_id/make_private",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"tickets",
																						":ticket_id",
																						"audits",
																						":ticket_audit_id",
																						"make_private"
																					],
																					"variable": [
																						{
																							"key": "ticket_id"
																						},
																						{
																							"key": "ticket_audit_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "<string>"
																		}
																	]
																}
															]
														},
														{
															"name": "Show Audit",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/audits/:ticket_audit_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"audits",
																		":ticket_audit_id"
																	],
																	"variable": [
																		{
																			"key": "ticket_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the ticket"
																		},
																		{
																			"key": "ticket_audit_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the ticket audit"
																		}
																	]
																},
																"description": "#### Allowed for\n\n* Agents\n"
															},
															"response": [
																{
																	"name": "OK response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/audits/:ticket_audit_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"tickets",
																				":ticket_id",
																				"audits",
																				":ticket_audit_id"
																			],
																			"variable": [
																				{
																					"key": "ticket_id"
																				},
																				{
																					"key": "ticket_audit_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"audit\": {\n    \"author_id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"events\": [\n      {\n        \"in_88\": \"amet deserunt consequat enim est\",\n        \"sint_ba\": 22989518\n      },\n      {\n        \"adbf\": \"enim mollit do\"\n      }\n    ],\n    \"id\": \"<integer>\",\n    \"metadata\": {\n      \"sint_41e\": true\n    },\n    \"ticket_id\": \"<integer>\",\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"Duise__\": true,\n        \"ea16\": true\n      }\n    }\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "count",
													"item": [
														{
															"name": "Count Audits for a Ticket",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/audits/count",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"audits",
																		"count"
																	],
																	"variable": [
																		{
																			"key": "ticket_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the ticket"
																		}
																	]
																},
																"description": "Returns an approximate count of audits for a specified ticket. If the count exceeds 100,000, the count will return a cached result.  This cached result will update every 24 hours.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed for\n\n* Agents\n"
															},
															"response": [
																{
																	"name": "Count of audits on a ticket",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/audits/count",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"tickets",
																				":ticket_id",
																				"audits",
																				"count"
																			],
																			"variable": [
																				{
																					"key": "ticket_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"count\": {\n    \"refreshed_at\": \"<dateTime>\",\n    \"value\": \"<integer>\"\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "List Audits for a Ticket",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/audits",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"audits"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "Lists the audits for a specified ticket.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n**Note**: Audits for [Archived Tickets](https://support.zendesk.com/hc/en-us/articles/4408887617050) do not support pagination for this endpoint.\n\n#### Allowed for\n\n* Agents\n"
													},
													"response": [
														{
															"name": "OK response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/audits",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"audits"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"audits\": [\n    {\n      \"author_id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"events\": [\n        {\n          \"reprehenderit_1\": \"minim ut Excepteur\",\n          \"enim__28\": -32320264.164656848\n        },\n        {\n          \"aliquip_0\": 72576162.81975707,\n          \"do_0_2\": 94860730,\n          \"aute__5\": false\n        }\n      ],\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"commodo_6d\": false\n      },\n      \"ticket_id\": \"<integer>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"ea0\": false\n        }\n      }\n    },\n    {\n      \"author_id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"events\": [\n        {\n          \"Excepteur0cb\": -92780421.96388267\n        },\n        {\n          \"reprehenderit__11\": -56443701.2182144\n        }\n      ],\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"reprehenderit_2\": -50530822\n      },\n      \"ticket_id\": \"<integer>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"culpa87_\": \"et quis no\"\n        }\n      }\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "collaborators",
											"item": [
												{
													"name": "List Collaborators for a Ticket",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/collaborators",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"collaborators"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "#### Allowed For\n\n* Agents"
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/collaborators",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"collaborators"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"dolore_8a\": true,\n  \"veniam_583\": 12896263,\n  \"veniam30\": \"sit exercitation non\",\n  \"do__18\": 33453616,\n  \"voluptate_b7e\": \"mollit in\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "comments",
											"item": [
												{
													"name": "{comment_id}",
													"item": [
														{
															"name": "attachments",
															"item": [
																{
																	"name": "{attachment_id}",
																	"item": [
																		{
																			"name": "redact",
																			"item": [
																				{
																					"name": "Redact Comment Attachment",
																					"request": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/comments/:comment_id/attachments/:attachment_id/redact",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"api",
																								"v2",
																								"tickets",
																								":ticket_id",
																								"comments",
																								":comment_id",
																								"attachments",
																								":attachment_id",
																								"redact"
																							],
																							"variable": [
																								{
																									"key": "ticket_id",
																									"value": "<integer>",
																									"description": "(Required) The ID of the ticket"
																								},
																								{
																									"key": "comment_id",
																									"value": "<integer>",
																									"description": "(Required) The ID of the comment"
																								},
																								{
																									"key": "attachment_id",
																									"value": "<integer>",
																									"description": "(Required) The ID of the attachment"
																								}
																							]
																						},
																						"description": "Redaction allows you to permanently remove attachments from an existing comment on a ticket. Once removed from a comment, the attachment is replaced with an empty \"redacted.txt\" file.\n\nThe redaction is permanent. It is not possible to undo redaction or see what was removed. Once a ticket is closed, redacting its attachments is no longer possible.\n\nAlso, if you want to redact an inline attachment, you can use the `include_inline_images` parameter in the [List Comments](/api-reference/ticketing/tickets/ticket_comments/#list-comments) operation to obtain the inline attachment ID, and use it in the request URL.\n\n#### Allowed For\n\n* Admins\n* Agents when [deleting tickets is enabled for agents on professional accounts](https://support.zendesk.com/hc/en-us/articles/360002128107)\n* Agents assigned to a custom role with permissions to redact ticket content (Enterprise only)\n"
																					},
																					"response": [
																						{
																							"name": "OK response",
																							"originalRequest": {
																								"method": "PUT",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"description": "Added as a part of security scheme: basic",
																										"key": "Authorization",
																										"value": "Basic <credentials>"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/comments/:comment_id/attachments/:attachment_id/redact",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"v2",
																										"tickets",
																										":ticket_id",
																										"comments",
																										":comment_id",
																										"attachments",
																										":attachment_id",
																										"redact"
																									],
																									"variable": [
																										{
																											"key": "ticket_id"
																										},
																										{
																											"key": "comment_id"
																										},
																										{
																											"key": "attachment_id"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"attachment\": {\n    \"content_type\": \"<string>\",\n    \"content_url\": \"<string>\",\n    \"deleted\": \"<boolean>\",\n    \"file_name\": \"<string>\",\n    \"height\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"inline\": \"<boolean>\",\n    \"malware_access_override\": \"<boolean>\",\n    \"malware_scan_result\": \"<string>\",\n    \"mapped_content_url\": \"<string>\",\n    \"size\": \"<integer>\",\n    \"url\": \"<string>\",\n    \"width\": \"<string>\",\n    \"thumbnails\": [\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\"\n      },\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\"\n      }\n    ]\n  }\n}"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "{ticket_comment_id}",
													"item": [
														{
															"name": "make_private",
															"item": [
																{
																	"name": "Make Comment Private",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/comments/:ticket_comment_id/make_private",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"tickets",
																				":ticket_id",
																				"comments",
																				":ticket_comment_id",
																				"make_private"
																			],
																			"variable": [
																				{
																					"key": "ticket_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the ticket"
																				},
																				{
																					"key": "ticket_comment_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the ticket comment"
																				}
																			]
																		},
																		"description": "#### Allowed For\n\n* Agents\n"
																	},
																	"response": [
																		{
																			"name": "description",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/comments/:ticket_comment_id/make_private",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"tickets",
																						":ticket_id",
																						"comments",
																						":ticket_comment_id",
																						"make_private"
																					],
																					"variable": [
																						{
																							"key": "ticket_id"
																						},
																						{
																							"key": "ticket_comment_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "<string>"
																		}
																	]
																}
															]
														},
														{
															"name": "redact",
															"item": [
																{
																	"name": "Redact String in Comment",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/comments/:ticket_comment_id/redact",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"tickets",
																				":ticket_id",
																				"comments",
																				":ticket_comment_id",
																				"redact"
																			],
																			"variable": [
																				{
																					"key": "ticket_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the ticket"
																				},
																				{
																					"key": "ticket_comment_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the ticket comment"
																				}
																			]
																		},
																		"description": "Permanently removes words or strings from a ticket comment. Specify the string to redact in an object with a `text` property. Example: `'{\"text\": \"987-65-4320\"}'`. The characters of the word or string are replaced by the ▇ symbol.\n\nIf the comment was made by email, the endpoint also attempts to redact the string from the original email retained by Zendesk for audit purposes.\n\n**Note**: If you use the rich text editor, support for redacting formatted text (bold, italics, hyperlinks) is limited.\n\nRedaction is permanent. You can't undo the redaction or see *what* was removed. Once a ticket is closed, you can no longer redact strings from its comments.\n\nTo use this endpoint, the \"Agents can delete tickets\" option must be enabled in the Zendesk Support admin interface at **Admin** > **Settings** > **Agents**.\n\n#### Allowed For\n\n* Agents\n"
																	},
																	"response": [
																		{
																			"name": "Success response",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/comments/:ticket_comment_id/redact",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"tickets",
																						":ticket_id",
																						"comments",
																						":ticket_comment_id",
																						"redact"
																					],
																					"variable": [
																						{
																							"key": "ticket_id"
																						},
																						{
																							"key": "ticket_comment_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"comment\": {\n    \"attachments\": [\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\",\n        \"thumbnails\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\",\n        \"thumbnails\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"audit_id\": \"<integer>\",\n    \"author_id\": \"<integer>\",\n    \"body\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"html_body\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"metadata\": {\n      \"Duis620\": -98653633,\n      \"esse90e\": \"aliquip enim laboris\"\n    },\n    \"plain_body\": \"<string>\",\n    \"public\": \"<boolean>\",\n    \"type\": \"<string>\",\n    \"uploads\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"velitac\": false,\n        \"minima\": \"dolore commodo Excepte\"\n      }\n    }\n  }\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "count",
													"item": [
														{
															"name": "Count Ticket Comments",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/comments/count",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"comments",
																		"count"
																	],
																	"variable": [
																		{
																			"key": "ticket_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the ticket"
																		}
																	]
																},
																"description": "Returns an approximate count of the comments added to the ticket. If the count exceeds 100,000, the count will return a cached result.  This cached result will update every 24 hours.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n* Agents"
															},
															"response": [
																{
																	"name": "Count of ticket comments",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/comments/count",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"tickets",
																				":ticket_id",
																				"comments",
																				"count"
																			],
																			"variable": [
																				{
																					"key": "ticket_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"count\": {\n    \"refreshed_at\": \"<dateTime>\",\n    \"value\": \"<integer>\"\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "List Comments",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/comments?include_inline_images=<boolean>&include=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"comments"
															],
															"query": [
																{
																	"key": "include_inline_images",
																	"value": "<boolean>",
																	"description": "Default is false. When true, inline images are also listed as attachments in the response"
																},
																{
																	"key": "include",
																	"value": "<string>",
																	"description": "Accepts \"users\". Use this parameter to list email CCs by side-loading users. Example: `?include=users`. **Note**: If the comment source is email, a deleted user will be represented as the CCd email address. If the comment source is anything else, a deleted user will be represented as the user name."
																}
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "Returns the comments added to the ticket.\n\nEach comment may include a `content_url` for an attachment or a `recording_url` for a voice comment that points to a file that may be hosted externally. For security reasons, take care not to inadvertently send Zendesk authentication credentials to third parties when attempting to access these files. See [Working with url properties](/documentation/ticketing/managing-tickets/working-with-url-properties).\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Sorting\n\nBy default, comments are sorted by creation date in ascending order.\n\nWhen using cursor pagination, use the following parameter to change the sort order:\n\n| Name   | Type   | Required | Comments\n| ------ | ------ | -------- | --------\n| `sort` | string | no       | Possible values are \"created_at\" (ascending order) or \"-created_at\" (descending order)\n\nWhen using offset pagination, use the following parameters to change the sort order:\n\n| Name         | Type   | Required | Comments\n| ------------ | ------ | -------- | --------\n| `sort_order` | string | no       | One of `asc`, `desc`. Defaults to `asc`\n\n#### Allowed For\n\n* Agents\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/comments?include_inline_images=<boolean>&include=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"comments"
																	],
																	"query": [
																		{
																			"key": "include_inline_images",
																			"value": "<boolean>",
																			"description": "Default is false. When true, inline images are also listed as attachments in the response"
																		},
																		{
																			"key": "include",
																			"value": "<string>",
																			"description": "Accepts \"users\". Use this parameter to list email CCs by side-loading users. Example: `?include=users`. **Note**: If the comment source is email, a deleted user will be represented as the CCd email address. If the comment source is anything else, a deleted user will be represented as the user name."
																		}
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"comments\": [\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"audit_id\": \"<integer>\",\n      \"author_id\": \"<integer>\",\n      \"body\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"html_body\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"animefc\": \"laborum occaecat incididunt\"\n      },\n      \"plain_body\": \"<string>\",\n      \"public\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"uploads\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"Lorem972\": -90498843\n        }\n      }\n    },\n    {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"audit_id\": \"<integer>\",\n      \"author_id\": \"<integer>\",\n      \"body\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"html_body\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"velit_62\": 2175201,\n        \"adipisicing2\": -5163042\n      },\n      \"plain_body\": \"<string>\",\n      \"public\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"uploads\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"esse_640\": 11526006,\n          \"ex36\": \"sint consequat est\",\n          \"elita9\": \"aliquip sint ea\"\n        }\n      }\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "email_ccs",
											"item": [
												{
													"name": "List Email CCs for a Ticket",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/email_ccs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"email_ccs"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "Returns any users cc'd on the ticket.\n\n#### Availability\n\nThe [CCs and Followers](https://support.zendesk.com/hc/en-us/articles/203690846) feature must be enabled in Zendesk Support.\n\nIf the feature is not enabled, the default CC functionality is used. In that case, use [List Collaborators](/api-reference/ticketing/tickets/tickets/#list-collaborators-for-a-ticket) to list the users cc'ed on the ticket.\n\n#### Allowed For\n\n* Agents"
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/email_ccs",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"email_ccs"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"dolore_8a\": true,\n  \"veniam_583\": 12896263,\n  \"veniam30\": \"sit exercitation non\",\n  \"do__18\": 33453616,\n  \"voluptate_b7e\": \"mollit in\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "followers",
											"item": [
												{
													"name": "List Followers for a Ticket",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/followers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"followers"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "Returns any users who follow the ticket.\n\n#### Availability\n\nThe [CCs and Followers](https://support.zendesk.com/hc/en-us/articles/203690846) feature must be enabled in Zendesk Support.\n\n#### Allowed For\n\n* Agents"
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/followers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"followers"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"dolore_8a\": true,\n  \"veniam_583\": 12896263,\n  \"veniam30\": \"sit exercitation non\",\n  \"do__18\": 33453616,\n  \"voluptate_b7e\": \"mollit in\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "incidents",
											"item": [
												{
													"name": "List Ticket Incidents",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/incidents",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"incidents"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "#### Allowed For\n\n* Agents\n\n#### Pagination\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/)."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/incidents",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"incidents"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"dolore_8a\": true,\n  \"veniam_583\": 12896263,\n  \"veniam30\": \"sit exercitation non\",\n  \"do__18\": 33453616,\n  \"voluptate_b7e\": \"mollit in\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "macros",
											"item": [
												{
													"name": "{macro_id}",
													"item": [
														{
															"name": "apply",
															"item": [
																{
																	"name": "Show Ticket After Changes",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/macros/:macro_id/apply",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"tickets",
																				":ticket_id",
																				"macros",
																				":macro_id",
																				"apply"
																			],
																			"variable": [
																				{
																					"key": "ticket_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the ticket"
																				},
																				{
																					"key": "macro_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the macro"
																				}
																			]
																		},
																		"description": "Returns the full ticket object as it would be after applying the macro to the ticket.\nIt doesn't actually change the ticket.\n\nTo get only the ticket fields that would be changed by the macro,\nsee [Show Changes to Ticket](#show-changes-to-ticket).\n\n#### Allowed For\n\n* Agents\n"
																	},
																	"response": [
																		{
																			"name": "Success Response",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/macros/:macro_id/apply",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"tickets",
																						":ticket_id",
																						"macros",
																						":macro_id",
																						"apply"
																					],
																					"variable": [
																						{
																							"key": "ticket_id"
																						},
																						{
																							"key": "macro_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"result\": {\n    \"ticket\": {\n      \"assignee_id\": \"<integer>\",\n      \"comment\": {\n        \"body\": \"<string>\",\n        \"public\": \"<boolean>\",\n        \"scoped_body\": [\n          [\n            \"<string>\",\n            \"<string>\"\n          ],\n          [\n            \"<string>\",\n            \"<string>\"\n          ]\n        ]\n      },\n      \"fields\": {\n        \"id\": \"<integer>\",\n        \"value\": \"<string>\"\n      },\n      \"group_id\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"url\": \"<string>\"\n    }\n  }\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "mark_as_spam",
											"item": [
												{
													"name": "Mark Ticket as Spam and Suspend Requester",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/mark_as_spam",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"mark_as_spam"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "#### Allowed For\n\n* Agents"
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/mark_as_spam",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"mark_as_spam"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "<string>"
														}
													]
												}
											]
										},
										{
											"name": "merge",
											"item": [
												{
													"name": "Merge Tickets into Target Ticket",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ids\": \"<array>\",\n  \"source_comment\": \"<string>\",\n  \"source_comment_is_public\": \"<boolean>\",\n  \"target_comment\": \"<string>\",\n  \"target_comment_is_public\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/merge",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"merge"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "Merges one or more tickets into the ticket with the specified id.\n\nSee [Merging tickets](https://support.zendesk.com/hc/en-us/articles/203690916)\nin the Support Help Center for ticket merging rules.\n\nAny attachment to the source ticket is copied to the target ticket.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Agents\n\nAgents in the Enterprise account must have merge permissions.\nSee [Creating custom roles and assigning agents (Enterprise)](https://support.zendesk.com/hc/en-us/articles/203662026)\nin the Support Help Center.\n\n#### Available parameters\n\nThe request takes a data object with the following properties:\n\n| Name                     | Type    | Required | Comments                                                |\n| ------------------------ | ------- | -------- | ------------------------------------------------------- |\n| ids                      | array   | yes      | Ids of tickets to merge into the target ticket          |\n| target_comment           | string  | no       | Private comment to add to the target ticket. This comment is optional but strongly recommended |\n| source_comment           | string  | no       | Private comment to add to the source ticket. This comment is optional but strongly recommended |\n| target_comment_is_public | boolean | no       | Whether comments in the target ticket are public or private   |\n| source_comment_is_public | boolean | no       | Whether comments in the source tickets are public or private |\n\n`target_comment` and `source_comment` can be used to provide a reason for the merge for recordkeeping purposes. If the source ticket has attachments, they are included in `target_comment`.\n\nComments are private and can't be modified in the following cases:\n\n  * Any of the sources or target tickets are private\n  * Any of the sources or target tickets were created through Twitter, Facebook or the Channel framework\n\nIn any other case, comments default to private but can be modified with the comment privacy parameters."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ids\": \"<array>\",\n  \"source_comment\": \"<string>\",\n  \"source_comment_is_public\": \"<boolean>\",\n  \"target_comment\": \"<string>\",\n  \"target_comment_is_public\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/merge",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"merge"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "related",
											"item": [
												{
													"name": "Ticket Related Information",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/related",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"related"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "The request returns a data object with the following properties:\n\n| Name                | Type    | Comment\n| ------------------- | ------- | -------\n| topic_id            | string  | Related topic in the Web portal (deprecated feature)\n| followup_source_ids | array   | Sources to follow up\n| from_archive        | boolean | Is true if the current ticket is archived\n| incidents           | integer | A count of related incident occurrences\n| twitter             | object  | Twitter information associated with the ticket\n\n#### Allowed For\n\n* Agents"
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/related",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"related"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"followup_source_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"from_archive\": \"<boolean>\",\n  \"incidents\": \"<integer>\",\n  \"topic_id\": \"<string>\",\n  \"twitter\": {\n    \"aliquipa\": -55650917.385913566,\n    \"ine75\": true\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "satisfaction_rating",
											"item": [
												{
													"name": "Create a Satisfaction Rating",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/satisfaction_rating",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"satisfaction_rating"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The id of the ticket"
																}
															]
														},
														"description": "Creates a CSAT rating for a solved ticket, or for a ticket that was previously\nsolved and then reopened.\n\nOnly the end user listed as the ticket requester can create a satisfaction rating for the ticket.\n\n#### Allowed For\n\n* End user who requested the ticket\n\nThe end user must be a verified user.\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/satisfaction_rating",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"satisfaction_rating"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"satisfaction_rating\": [\n    {\n      \"assignee_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"requester_id\": \"<integer>\",\n      \"ticket_id\": \"<integer>\",\n      \"score\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"reason\": \"<string>\",\n      \"reason_code\": \"<integer>\",\n      \"reason_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"assignee_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"requester_id\": \"<integer>\",\n      \"ticket_id\": \"<integer>\",\n      \"score\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"reason\": \"<string>\",\n      \"reason_code\": \"<integer>\",\n      \"reason_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "tags",
											"item": [
												{
													"name": "List Resource Tags",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"tags"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "#### Allowed For\n\n* Agents\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/tags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"tags"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														}
													]
												},
												{
													"name": "Set Tags",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"tags"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "#### Allowed For\n\n* Agents\n"
													},
													"response": [
														{
															"name": "Created response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/tags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"tags"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														}
													]
												},
												{
													"name": "Add Tags",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"tags"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "You can also add tags to multiple tickets with the [Update Many\nTickets](/api-reference/ticketing/tickets/tickets/#update-many-tickets) endpoint.\n\n#### Safe Update\n\nIf the same ticket is updated by multiple API requests at\nthe same time, some tags could be lost because of ticket\nupdate collisions. Include `updated_stamp` and `safe_update`\nproperties in the request body to make a safe update.\n\nFor `updated_stamp`, retrieve and specify the ticket's\nlatest `updated_at` timestamp. The tag update only occurs\nif the `updated_stamp` timestamp matches the ticket's\nactual `updated_at` timestamp at the time of the request.\nIf the timestamps don't match (in other words, if the\nticket was updated since you retrieved the ticket's\nlast `updated_at` timestamp), the request returns a\n409 Conflict error.\n\n#### Example\n\n```js\n{\n  \"tags\": [\"customer\"],\n  \"updated_stamp\":\"2019-09-12T21:45:16Z\",\n  \"safe_update\":\"true\"\n}\n```\n\nFor details, see [Protecting against ticket update collisions](/api-reference/ticketing/tickets/tickets/#protecting-against-ticket-update-collisions).\n\n#### Allowed For\n\n* Agents\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/tags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"tags"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														}
													]
												},
												{
													"name": "Remove Tags",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id",
																"tags"
															],
															"variable": [
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "You can also delete tags from multiple tickets with the\n[Update Many Tickets](/api-reference/ticketing/tickets/tickets/#update-many-tickets) endpoint.\n\nThis endpoint supports safe updates. See [Safe Update](/api-reference/ticketing/ticket-management/tags/#safe-update).\n\n#### Allowed For\n\n* Agents\n"
													},
													"response": [
														{
															"name": "No Content response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id/tags",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"tickets",
																		":ticket_id",
																		"tags"
																	],
																	"variable": [
																		{
																			"key": "ticket_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														}
													]
												}
											]
										},
										{
											"name": "Show Ticket",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tickets",
														":ticket_id"
													],
													"variable": [
														{
															"key": "ticket_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket"
														}
													]
												},
												"description": "Returns a number of ticket properties though not the ticket comments. To get the comments, use [List Comments](/api-reference/ticketing/tickets/ticket_comments/#list-comments)\n\n#### Allowed For\n* Agents"
											},
											"response": [
												{
													"name": "Ticket",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id"
															],
															"variable": [
																{
																	"key": "ticket_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ticket\": {\n    \"requester_id\": \"<integer>\",\n    \"allow_attachments\": \"<boolean>\",\n    \"allow_channelback\": \"<boolean>\",\n    \"assignee_email\": \"<string>\",\n    \"assignee_id\": \"<integer>\",\n    \"attribute_value_ids\": \"<array>\",\n    \"brand_id\": \"<integer>\",\n    \"collaborator_ids\": \"<array>\",\n    \"collaborators\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"comment\": {},\n    \"created_at\": \"<dateTime>\",\n    \"custom_fields\": \"<array>\",\n    \"custom_status_id\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"due_at\": \"<dateTime>\",\n    \"email_cc_ids\": \"<array>\",\n    \"email_ccs\": {},\n    \"external_id\": \"<string>\",\n    \"follower_ids\": \"<array>\",\n    \"followers\": {},\n    \"followup_ids\": \"<array>\",\n    \"forum_topic_id\": \"<integer>\",\n    \"from_messaging_channel\": \"<boolean>\",\n    \"group_id\": \"<integer>\",\n    \"has_incidents\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"is_public\": \"<boolean>\",\n    \"macro_id\": \"<integer>\",\n    \"macro_ids\": \"<array>\",\n    \"metadata\": {},\n    \"organization_id\": \"<integer>\",\n    \"priority\": \"high\",\n    \"problem_id\": \"<integer>\",\n    \"raw_subject\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"requester\": {},\n    \"safe_update\": \"<boolean>\",\n    \"satisfaction_rating\": {\n      \"exercitation_c48\": false,\n      \"Ut4\": 54410130.125641406\n    },\n    \"sharing_agreement_ids\": \"<array>\",\n    \"status\": \"pending\",\n    \"subject\": \"<string>\",\n    \"submitter_id\": \"<integer>\",\n    \"tags\": \"<array>\",\n    \"ticket_form_id\": \"<integer>\",\n    \"type\": \"incident\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_stamp\": \"<string>\",\n    \"url\": \"<string>\",\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"voluptate_de\": -31344927.765781045,\n        \"dolore_e\": \"ea nisi magna do\",\n        \"est952\": false\n      }\n    },\n    \"via_followup_source_id\": \"<integer>\",\n    \"via_id\": \"<integer>\",\n    \"voice_comment\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Update Ticket",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ticket\": {\n    \"additional_collaborators\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"assignee_email\": \"<email>\",\n    \"assignee_id\": \"<integer>\",\n    \"attribute_value_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"collaborator_ids\": \"<array>\",\n    \"comment\": {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"audit_id\": \"<integer>\",\n      \"author_id\": \"<integer>\",\n      \"body\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"html_body\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"dolor7\": -41375499.678633034,\n        \"dolor_7\": \"consectetur amet magna consequat\"\n      },\n      \"plain_body\": \"<string>\",\n      \"public\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"uploads\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"voluptated8\": \"veniam fugiat\"\n        }\n      }\n    },\n    \"custom_fields\": \"<array>\",\n    \"custom_status_id\": \"<integer>\",\n    \"due_at\": \"<dateTime>\",\n    \"email_ccs\": [\n      {\n        \"action\": \"delete\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\",\n        \"user_name\": \"<string>\"\n      },\n      {\n        \"action\": \"delete\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\",\n        \"user_name\": \"<string>\"\n      }\n    ],\n    \"external_id\": \"<string>\",\n    \"followers\": [\n      {\n        \"action\": \"put\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\"\n      },\n      {\n        \"action\": \"delete\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\"\n      }\n    ],\n    \"group_id\": \"<integer>\",\n    \"organization_id\": \"<integer>\",\n    \"priority\": \"urgent\",\n    \"problem_id\": \"<integer>\",\n    \"requester_id\": \"<integer>\",\n    \"safe_update\": \"<boolean>\",\n    \"sharing_agreement_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"status\": \"pending\",\n    \"subject\": \"<string>\",\n    \"tags\": \"<array>\",\n    \"type\": \"incident\",\n    \"updated_stamp\": \"<dateTime>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tickets",
														":ticket_id"
													],
													"variable": [
														{
															"key": "ticket_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ticket\": {\n    \"additional_collaborators\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"assignee_email\": \"<email>\",\n    \"assignee_id\": \"<integer>\",\n    \"attribute_value_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"collaborator_ids\": \"<array>\",\n    \"comment\": {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"audit_id\": \"<integer>\",\n      \"author_id\": \"<integer>\",\n      \"body\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"html_body\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"dolor7\": -41375499.678633034,\n        \"dolor_7\": \"consectetur amet magna consequat\"\n      },\n      \"plain_body\": \"<string>\",\n      \"public\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"uploads\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"voluptated8\": \"veniam fugiat\"\n        }\n      }\n    },\n    \"custom_fields\": \"<array>\",\n    \"custom_status_id\": \"<integer>\",\n    \"due_at\": \"<dateTime>\",\n    \"email_ccs\": [\n      {\n        \"action\": \"delete\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\",\n        \"user_name\": \"<string>\"\n      },\n      {\n        \"action\": \"delete\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\",\n        \"user_name\": \"<string>\"\n      }\n    ],\n    \"external_id\": \"<string>\",\n    \"followers\": [\n      {\n        \"action\": \"put\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\"\n      },\n      {\n        \"action\": \"delete\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\"\n      }\n    ],\n    \"group_id\": \"<integer>\",\n    \"organization_id\": \"<integer>\",\n    \"priority\": \"urgent\",\n    \"problem_id\": \"<integer>\",\n    \"requester_id\": \"<integer>\",\n    \"safe_update\": \"<boolean>\",\n    \"sharing_agreement_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"status\": \"pending\",\n    \"subject\": \"<string>\",\n    \"tags\": \"<array>\",\n    \"type\": \"incident\",\n    \"updated_stamp\": \"<dateTime>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id"
															],
															"variable": [
																{
																	"key": "ticket_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"audit\": {\n    \"author_id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"events\": \"<array>\",\n    \"id\": \"<integer>\",\n    \"metadata\": {},\n    \"ticket_id\": \"<integer>\",\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"from\": {\n          \"address\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"title\": \"<string>\"\n        },\n        \"rel\": \"<string>\",\n        \"to\": {\n          \"address\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      }\n    }\n  },\n  \"ticket\": {\n    \"requester_id\": \"<integer>\",\n    \"allow_attachments\": \"<boolean>\",\n    \"allow_channelback\": \"<boolean>\",\n    \"assignee_email\": \"<string>\",\n    \"assignee_id\": \"<integer>\",\n    \"attribute_value_ids\": \"<array>\",\n    \"brand_id\": \"<integer>\",\n    \"collaborator_ids\": \"<array>\",\n    \"collaborators\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"comment\": {},\n    \"created_at\": \"<dateTime>\",\n    \"custom_fields\": \"<array>\",\n    \"custom_status_id\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"due_at\": \"<dateTime>\",\n    \"email_cc_ids\": \"<array>\",\n    \"email_ccs\": {},\n    \"external_id\": \"<string>\",\n    \"follower_ids\": \"<array>\",\n    \"followers\": {},\n    \"followup_ids\": \"<array>\",\n    \"forum_topic_id\": \"<integer>\",\n    \"from_messaging_channel\": \"<boolean>\",\n    \"group_id\": \"<integer>\",\n    \"has_incidents\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"is_public\": \"<boolean>\",\n    \"macro_id\": \"<integer>\",\n    \"macro_ids\": \"<array>\",\n    \"metadata\": {},\n    \"organization_id\": \"<integer>\",\n    \"priority\": \"urgent\",\n    \"problem_id\": \"<integer>\",\n    \"raw_subject\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"requester\": {},\n    \"safe_update\": \"<boolean>\",\n    \"satisfaction_rating\": {\n      \"ipsum6\": -84806050,\n      \"voluptate_f\": \"ut enim fugiat adi\"\n    },\n    \"sharing_agreement_ids\": \"<array>\",\n    \"status\": \"closed\",\n    \"subject\": \"<string>\",\n    \"submitter_id\": \"<integer>\",\n    \"tags\": \"<array>\",\n    \"ticket_form_id\": \"<integer>\",\n    \"type\": \"question\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_stamp\": \"<string>\",\n    \"url\": \"<string>\",\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"fugiatd4\": false,\n        \"ipsum_7e\": 7660214,\n        \"aute_a\": -44158430.07092288,\n        \"culpa_92\": 420702.90336191654\n      }\n    },\n    \"via_followup_source_id\": \"<integer>\",\n    \"via_id\": \"<integer>\",\n    \"voice_comment\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Ticket",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tickets",
														":ticket_id"
													],
													"variable": [
														{
															"key": "ticket_id",
															"value": "<integer>",
															"description": "(Required) The ID of the ticket"
														}
													]
												},
												"description": "#### Allowed For\n\n* Admins\n* Agents with permission to delete tickets\n\nAgent delete permissions are set in Support. See\n[Deleting tickets](https://support.zendesk.com/hc/en-us/articles/203690936)\nin the Support Help Center.\n\n#### Ticket deletion rate limit\n\nYou can delete 400 tickets every 1 minute using this endpoint.\nThe rate limiting mechanism behaves as described in\n[Rate limits](/api-reference/introduction/rate-limits/) in the API introduction.\nZendesk recommends that you obey the Retry-After header values.\nTo delete many tickets, you may use [Bulk Delete Tickets](/api-reference/ticketing/tickets/tickets/#bulk-delete-tickets)."
											},
											"response": [
												{
													"name": "No content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/:ticket_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																":ticket_id"
															],
															"variable": [
																{
																	"key": "ticket_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "count",
									"item": [
										{
											"name": "Count Tickets",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tickets/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tickets",
														"count"
													]
												},
												"description": "Returns an approximate count of tickets in the account. If the count exceeds 100,000, it is updated every 24 hours.\n\n`ccd` lists tickets that the specified user is cc'd on.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n* Agents"
											},
											"response": [
												{
													"name": "Count of tickets",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																"count"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": {\n    \"refreshed_at\": \"<dateTime>\",\n    \"value\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "create_many",
									"item": [
										{
											"name": "Create Many Tickets",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tickets\": [\n    {\n      \"comment\": {\n        \"attachments\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          }\n        ],\n        \"audit_id\": \"<integer>\",\n        \"author_id\": \"<integer>\",\n        \"body\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"html_body\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"metadata\": {\n          \"eta\": \"nisi fugiat consectetur\",\n          \"Ut68e\": -18298059.107185826,\n          \"ullamco_\": true\n        },\n        \"plain_body\": \"<string>\",\n        \"public\": \"<boolean>\",\n        \"type\": \"<string>\",\n        \"uploads\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"via\": {\n          \"channel\": \"<string>\",\n          \"source\": {\n            \"cupidatat_c36\": \"in consequat culpa in\",\n            \"adipisicing_4\": \"pariatur amet ut est\",\n            \"ex69\": -16785429,\n            \"anim_3\": -59701254.93216219\n          }\n        }\n      },\n      \"additional_collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"assignee_email\": \"<email>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"collaborator_ids\": \"<array>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_ccs\": [\n        {\n          \"action\": \"put\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\",\n          \"user_name\": \"<string>\"\n        },\n        {\n          \"action\": \"delete\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\",\n          \"user_name\": \"<string>\"\n        }\n      ],\n      \"external_id\": \"<string>\",\n      \"followers\": [\n        {\n          \"action\": \"put\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\"\n        },\n        {\n          \"action\": \"delete\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\"\n        }\n      ],\n      \"group_id\": \"<integer>\",\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"normal\",\n      \"problem_id\": \"<integer>\",\n      \"requester_id\": \"<integer>\",\n      \"safe_update\": \"<boolean>\",\n      \"sharing_agreement_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"status\": \"new\",\n      \"subject\": \"<string>\",\n      \"tags\": \"<array>\",\n      \"type\": \"task\",\n      \"updated_stamp\": \"<dateTime>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborators\": \"<array>\",\n      \"email_cc_ids\": \"<array>\",\n      \"follower_ids\": \"<array>\",\n      \"macro_ids\": \"<array>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"dolore878\": false,\n          \"occaecat_e6\": true,\n          \"exercitation_2\": 35618115\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\"\n    },\n    {\n      \"comment\": {\n        \"attachments\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          }\n        ],\n        \"audit_id\": \"<integer>\",\n        \"author_id\": \"<integer>\",\n        \"body\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"html_body\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"metadata\": {\n          \"cillum_c\": -56204234\n        },\n        \"plain_body\": \"<string>\",\n        \"public\": \"<boolean>\",\n        \"type\": \"<string>\",\n        \"uploads\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"via\": {\n          \"channel\": \"<string>\",\n          \"source\": {\n            \"tempore\": \"in ex\",\n            \"enim_6c5\": \"do sint\"\n          }\n        }\n      },\n      \"additional_collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"assignee_email\": \"<email>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"collaborator_ids\": \"<array>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_ccs\": [\n        {\n          \"action\": \"put\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\",\n          \"user_name\": \"<string>\"\n        },\n        {\n          \"action\": \"delete\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\",\n          \"user_name\": \"<string>\"\n        }\n      ],\n      \"external_id\": \"<string>\",\n      \"followers\": [\n        {\n          \"action\": \"delete\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\"\n        },\n        {\n          \"action\": \"put\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\"\n        }\n      ],\n      \"group_id\": \"<integer>\",\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"normal\",\n      \"problem_id\": \"<integer>\",\n      \"requester_id\": \"<integer>\",\n      \"safe_update\": \"<boolean>\",\n      \"sharing_agreement_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"status\": \"solved\",\n      \"subject\": \"<string>\",\n      \"tags\": \"<array>\",\n      \"type\": \"problem\",\n      \"updated_stamp\": \"<dateTime>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborators\": \"<array>\",\n      \"email_cc_ids\": \"<array>\",\n      \"follower_ids\": \"<array>\",\n      \"macro_ids\": \"<array>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"ex_f_a\": 96358044.50856057,\n          \"dolore_d\": 72835611,\n          \"idc\": 60408601\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/tickets/create_many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tickets",
														"create_many"
													]
												},
												"description": "Accepts an array of up to 100 ticket objects. **Note**: Every ticket created with this endpoint may be affected by your business rules, which can include sending email notifications to your end users. If you are importing historical tickets or creating more than 1000 tickets, consider using the [Ticket Bulk Import](/api-reference/ticketing/tickets/ticket_import/#ticket-bulk-import) endpoint.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n* Agents"
											},
											"response": [
												{
													"name": "Create many tickets",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tickets\": [\n    {\n      \"comment\": {\n        \"attachments\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          }\n        ],\n        \"audit_id\": \"<integer>\",\n        \"author_id\": \"<integer>\",\n        \"body\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"html_body\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"metadata\": {\n          \"eta\": \"nisi fugiat consectetur\",\n          \"Ut68e\": -18298059.107185826,\n          \"ullamco_\": true\n        },\n        \"plain_body\": \"<string>\",\n        \"public\": \"<boolean>\",\n        \"type\": \"<string>\",\n        \"uploads\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"via\": {\n          \"channel\": \"<string>\",\n          \"source\": {\n            \"cupidatat_c36\": \"in consequat culpa in\",\n            \"adipisicing_4\": \"pariatur amet ut est\",\n            \"ex69\": -16785429,\n            \"anim_3\": -59701254.93216219\n          }\n        }\n      },\n      \"additional_collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"assignee_email\": \"<email>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"collaborator_ids\": \"<array>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_ccs\": [\n        {\n          \"action\": \"put\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\",\n          \"user_name\": \"<string>\"\n        },\n        {\n          \"action\": \"delete\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\",\n          \"user_name\": \"<string>\"\n        }\n      ],\n      \"external_id\": \"<string>\",\n      \"followers\": [\n        {\n          \"action\": \"put\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\"\n        },\n        {\n          \"action\": \"delete\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\"\n        }\n      ],\n      \"group_id\": \"<integer>\",\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"normal\",\n      \"problem_id\": \"<integer>\",\n      \"requester_id\": \"<integer>\",\n      \"safe_update\": \"<boolean>\",\n      \"sharing_agreement_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"status\": \"new\",\n      \"subject\": \"<string>\",\n      \"tags\": \"<array>\",\n      \"type\": \"task\",\n      \"updated_stamp\": \"<dateTime>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborators\": \"<array>\",\n      \"email_cc_ids\": \"<array>\",\n      \"follower_ids\": \"<array>\",\n      \"macro_ids\": \"<array>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"dolore878\": false,\n          \"occaecat_e6\": true,\n          \"exercitation_2\": 35618115\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\"\n    },\n    {\n      \"comment\": {\n        \"attachments\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\",\n            \"thumbnails\": [\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              },\n              {\n                \"content_type\": \"<string>\",\n                \"content_url\": \"<string>\",\n                \"deleted\": \"<boolean>\",\n                \"file_name\": \"<string>\",\n                \"height\": \"<string>\",\n                \"id\": \"<integer>\",\n                \"inline\": \"<boolean>\",\n                \"malware_access_override\": \"<boolean>\",\n                \"malware_scan_result\": \"<string>\",\n                \"mapped_content_url\": \"<string>\",\n                \"size\": \"<integer>\",\n                \"url\": \"<string>\",\n                \"width\": \"<string>\"\n              }\n            ]\n          }\n        ],\n        \"audit_id\": \"<integer>\",\n        \"author_id\": \"<integer>\",\n        \"body\": \"<string>\",\n        \"created_at\": \"<dateTime>\",\n        \"html_body\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"metadata\": {\n          \"cillum_c\": -56204234\n        },\n        \"plain_body\": \"<string>\",\n        \"public\": \"<boolean>\",\n        \"type\": \"<string>\",\n        \"uploads\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"via\": {\n          \"channel\": \"<string>\",\n          \"source\": {\n            \"tempore\": \"in ex\",\n            \"enim_6c5\": \"do sint\"\n          }\n        }\n      },\n      \"additional_collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"assignee_email\": \"<email>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"collaborator_ids\": \"<array>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_ccs\": [\n        {\n          \"action\": \"put\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\",\n          \"user_name\": \"<string>\"\n        },\n        {\n          \"action\": \"delete\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\",\n          \"user_name\": \"<string>\"\n        }\n      ],\n      \"external_id\": \"<string>\",\n      \"followers\": [\n        {\n          \"action\": \"delete\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\"\n        },\n        {\n          \"action\": \"put\",\n          \"user_email\": \"<email>\",\n          \"user_id\": \"<string>\"\n        }\n      ],\n      \"group_id\": \"<integer>\",\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"normal\",\n      \"problem_id\": \"<integer>\",\n      \"requester_id\": \"<integer>\",\n      \"safe_update\": \"<boolean>\",\n      \"sharing_agreement_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"status\": \"solved\",\n      \"subject\": \"<string>\",\n      \"tags\": \"<array>\",\n      \"type\": \"problem\",\n      \"updated_stamp\": \"<dateTime>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborators\": \"<array>\",\n      \"email_cc_ids\": \"<array>\",\n      \"follower_ids\": \"<array>\",\n      \"macro_ids\": \"<array>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"from\": {\n            \"address\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n          },\n          \"rel\": \"<string>\",\n          \"to\": {\n            \"address\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"ex_f_a\": 96358044.50856057,\n          \"dolore_d\": 72835611,\n          \"idc\": 60408601\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/create_many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																"create_many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Bulk Delete Tickets",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tickets/destroy_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tickets",
														"destroy_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) Comma-separated list of ticket ids"
														}
													]
												},
												"description": "Accepts a comma-separated list of up to 100 ticket ids.\n\n#### Allowed For\n\n* Admins\n* Agents with permission to delete tickets\n\nAgent delete permissions are set in Support. See\n[Deleting tickets](https://support.zendesk.com/hc/en-us/articles/203690936)\nin the Support Help Center.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/destroy_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																"destroy_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) Comma-separated list of ticket ids"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "mark_many_as_spam",
									"item": [
										{
											"name": "Bulk Mark Tickets as Spam",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tickets/mark_many_as_spam?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tickets",
														"mark_many_as_spam"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) Comma-separated list of ticket ids"
														}
													]
												},
												"description": "Accepts a comma-separated list of up to 100 ticket ids.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Agents"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/mark_many_as_spam?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																"mark_many_as_spam"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) Comma-separated list of ticket ids"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "show_many",
									"item": [
										{
											"name": "Show Multiple Tickets",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tickets/show_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tickets",
														"show_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) Comma-separated list of ticket ids"
														}
													]
												},
												"description": "Accepts a comma-separated list of ticket ids to return.\n\nThis endpoint will return up to 100 tickets records.\n\n#### Allowed For\n* Agents"
											},
											"response": [
												{
													"name": "List tickets",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/show_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																"show_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) Comma-separated list of ticket ids"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tickets\": [\n    {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"urgent\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"reprehenderit6cd\": false\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"hold\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"question\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"in0\": -75111685,\n          \"Excepteur_254\": -23675577,\n          \"Excepteur6\": -33008582.759869486\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    },\n    {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"high\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"dolore35e\": 11932282.934943482,\n        \"laboris_ce\": \"velit esse\",\n        \"aute_8e\": true,\n        \"ina\": -86816496.92331019\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"closed\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"incident\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"et__4\": false,\n          \"velit655\": -67723031.43957758,\n          \"officia_e\": true,\n          \"eiusmod7e\": true\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "update_many",
									"item": [
										{
											"name": "Update Many Tickets",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tickets/update_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tickets",
														"update_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "Comma-separated list of ticket ids"
														}
													]
												},
												"description": "Accepts an array of up to 100 ticket objects, or a comma-separated list of up to 100 ticket ids."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/tickets/update_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"tickets",
																"update_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "Comma-separated list of ticket ids"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Tickets",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/tickets?external_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tickets"
											],
											"query": [
												{
													"key": "external_id",
													"value": "<string>",
													"description": "Lists tickets by external id. External ids don't have to be unique for each ticket. As a result, the request may return multiple tickets with the same external id."
												}
											]
										}
									},
									"response": [
										{
											"name": "List tickets",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/tickets?external_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tickets"
													],
													"query": [
														{
															"key": "external_id",
															"value": "<string>",
															"description": "Lists tickets by external id. External ids don't have to be unique for each ticket. As a result, the request may return multiple tickets with the same external id."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"tickets\": [\n    {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"urgent\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"reprehenderit6cd\": false\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"hold\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"question\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"in0\": -75111685,\n          \"Excepteur_254\": -23675577,\n          \"Excepteur6\": -33008582.759869486\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    },\n    {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"high\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"dolore35e\": 11932282.934943482,\n        \"laboris_ce\": \"velit esse\",\n        \"aute_8e\": true,\n        \"ina\": -86816496.92331019\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"closed\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"incident\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"et__4\": false,\n          \"velit655\": -67723031.43957758,\n          \"officia_e\": true,\n          \"eiusmod7e\": true\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Ticket",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ticket\": {\n    \"comment\": {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"audit_id\": \"<integer>\",\n      \"author_id\": \"<integer>\",\n      \"body\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"html_body\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"Excepteur993\": \"Duis nostrud lab\"\n      },\n      \"plain_body\": \"<string>\",\n      \"public\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"uploads\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"exercitation789\": -37755595.24029264,\n          \"Excepteur5\": true\n        }\n      }\n    },\n    \"additional_collaborators\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"assignee_email\": \"<email>\",\n    \"assignee_id\": \"<integer>\",\n    \"attribute_value_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"collaborator_ids\": \"<array>\",\n    \"custom_fields\": \"<array>\",\n    \"custom_status_id\": \"<integer>\",\n    \"due_at\": \"<dateTime>\",\n    \"email_ccs\": [\n      {\n        \"action\": \"put\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\",\n        \"user_name\": \"<string>\"\n      },\n      {\n        \"action\": \"delete\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\",\n        \"user_name\": \"<string>\"\n      }\n    ],\n    \"external_id\": \"<string>\",\n    \"followers\": [\n      {\n        \"action\": \"put\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\"\n      },\n      {\n        \"action\": \"put\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\"\n      }\n    ],\n    \"group_id\": \"<integer>\",\n    \"organization_id\": \"<integer>\",\n    \"priority\": \"high\",\n    \"problem_id\": \"<integer>\",\n    \"requester_id\": \"<integer>\",\n    \"safe_update\": \"<boolean>\",\n    \"sharing_agreement_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"status\": \"open\",\n    \"subject\": \"<string>\",\n    \"tags\": \"<array>\",\n    \"type\": \"problem\",\n    \"updated_stamp\": \"<dateTime>\",\n    \"brand_id\": \"<integer>\",\n    \"collaborators\": \"<array>\",\n    \"email_cc_ids\": \"<array>\",\n    \"follower_ids\": \"<array>\",\n    \"macro_ids\": \"<array>\",\n    \"raw_subject\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"submitter_id\": \"<integer>\",\n    \"ticket_form_id\": \"<integer>\",\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"from\": {\n          \"address\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"title\": \"<string>\"\n        },\n        \"rel\": \"<string>\",\n        \"to\": {\n          \"address\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      }\n    },\n    \"via_followup_source_id\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/tickets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"tickets"
											]
										}
									},
									"response": [
										{
											"name": "Create ticket",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ticket\": {\n    \"comment\": {\n      \"attachments\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\",\n          \"thumbnails\": [\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            },\n            {\n              \"content_type\": \"<string>\",\n              \"content_url\": \"<string>\",\n              \"deleted\": \"<boolean>\",\n              \"file_name\": \"<string>\",\n              \"height\": \"<string>\",\n              \"id\": \"<integer>\",\n              \"inline\": \"<boolean>\",\n              \"malware_access_override\": \"<boolean>\",\n              \"malware_scan_result\": \"<string>\",\n              \"mapped_content_url\": \"<string>\",\n              \"size\": \"<integer>\",\n              \"url\": \"<string>\",\n              \"width\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"audit_id\": \"<integer>\",\n      \"author_id\": \"<integer>\",\n      \"body\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"html_body\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"metadata\": {\n        \"Excepteur993\": \"Duis nostrud lab\"\n      },\n      \"plain_body\": \"<string>\",\n      \"public\": \"<boolean>\",\n      \"type\": \"<string>\",\n      \"uploads\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"exercitation789\": -37755595.24029264,\n          \"Excepteur5\": true\n        }\n      }\n    },\n    \"additional_collaborators\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"assignee_email\": \"<email>\",\n    \"assignee_id\": \"<integer>\",\n    \"attribute_value_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"collaborator_ids\": \"<array>\",\n    \"custom_fields\": \"<array>\",\n    \"custom_status_id\": \"<integer>\",\n    \"due_at\": \"<dateTime>\",\n    \"email_ccs\": [\n      {\n        \"action\": \"put\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\",\n        \"user_name\": \"<string>\"\n      },\n      {\n        \"action\": \"delete\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\",\n        \"user_name\": \"<string>\"\n      }\n    ],\n    \"external_id\": \"<string>\",\n    \"followers\": [\n      {\n        \"action\": \"put\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\"\n      },\n      {\n        \"action\": \"put\",\n        \"user_email\": \"<email>\",\n        \"user_id\": \"<string>\"\n      }\n    ],\n    \"group_id\": \"<integer>\",\n    \"organization_id\": \"<integer>\",\n    \"priority\": \"high\",\n    \"problem_id\": \"<integer>\",\n    \"requester_id\": \"<integer>\",\n    \"safe_update\": \"<boolean>\",\n    \"sharing_agreement_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"status\": \"open\",\n    \"subject\": \"<string>\",\n    \"tags\": \"<array>\",\n    \"type\": \"problem\",\n    \"updated_stamp\": \"<dateTime>\",\n    \"brand_id\": \"<integer>\",\n    \"collaborators\": \"<array>\",\n    \"email_cc_ids\": \"<array>\",\n    \"follower_ids\": \"<array>\",\n    \"macro_ids\": \"<array>\",\n    \"raw_subject\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"submitter_id\": \"<integer>\",\n    \"ticket_form_id\": \"<integer>\",\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"from\": {\n          \"address\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"title\": \"<string>\"\n        },\n        \"rel\": \"<string>\",\n        \"to\": {\n          \"address\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      }\n    },\n    \"via_followup_source_id\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/tickets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"tickets"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "The URL of the created ticket",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"ticket\": {\n    \"requester_id\": \"<integer>\",\n    \"allow_attachments\": \"<boolean>\",\n    \"allow_channelback\": \"<boolean>\",\n    \"assignee_email\": \"<string>\",\n    \"assignee_id\": \"<integer>\",\n    \"attribute_value_ids\": \"<array>\",\n    \"brand_id\": \"<integer>\",\n    \"collaborator_ids\": \"<array>\",\n    \"collaborators\": [\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"email\": \"<email>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"comment\": {},\n    \"created_at\": \"<dateTime>\",\n    \"custom_fields\": \"<array>\",\n    \"custom_status_id\": \"<integer>\",\n    \"description\": \"<string>\",\n    \"due_at\": \"<dateTime>\",\n    \"email_cc_ids\": \"<array>\",\n    \"email_ccs\": {},\n    \"external_id\": \"<string>\",\n    \"follower_ids\": \"<array>\",\n    \"followers\": {},\n    \"followup_ids\": \"<array>\",\n    \"forum_topic_id\": \"<integer>\",\n    \"from_messaging_channel\": \"<boolean>\",\n    \"group_id\": \"<integer>\",\n    \"has_incidents\": \"<boolean>\",\n    \"id\": \"<integer>\",\n    \"is_public\": \"<boolean>\",\n    \"macro_id\": \"<integer>\",\n    \"macro_ids\": \"<array>\",\n    \"metadata\": {},\n    \"organization_id\": \"<integer>\",\n    \"priority\": \"high\",\n    \"problem_id\": \"<integer>\",\n    \"raw_subject\": \"<string>\",\n    \"recipient\": \"<string>\",\n    \"requester\": {},\n    \"safe_update\": \"<boolean>\",\n    \"satisfaction_rating\": {\n      \"exercitation_c48\": false,\n      \"Ut4\": 54410130.125641406\n    },\n    \"sharing_agreement_ids\": \"<array>\",\n    \"status\": \"pending\",\n    \"subject\": \"<string>\",\n    \"submitter_id\": \"<integer>\",\n    \"tags\": \"<array>\",\n    \"ticket_form_id\": \"<integer>\",\n    \"type\": \"incident\",\n    \"updated_at\": \"<dateTime>\",\n    \"updated_stamp\": \"<string>\",\n    \"url\": \"<string>\",\n    \"via\": {\n      \"channel\": \"<string>\",\n      \"source\": {\n        \"voluptate_de\": -31344927.765781045,\n        \"dolore_e\": \"ea nisi magna do\",\n        \"est952\": false\n      }\n    },\n    \"via_followup_source_id\": \"<integer>\",\n    \"via_id\": \"<integer>\",\n    \"voice_comment\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "trigger_categories",
							"item": [
								{
									"name": "{trigger_category_id}",
									"item": [
										{
											"name": "Show Trigger Category",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/trigger_categories/:trigger_category_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"trigger_categories",
														":trigger_category_id"
													],
													"variable": [
														{
															"key": "trigger_category_id",
															"value": "<string>",
															"description": "(Required) The id of the trigger category to retrieve"
														}
													]
												},
												"description": "Returns the trigger category with the specified ID."
											},
											"response": [
												{
													"name": "The requested trigger category",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/trigger_categories/:trigger_category_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"trigger_categories",
																":trigger_category_id"
															],
															"variable": [
																{
																	"key": "trigger_category_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trigger_category\": {\n    \"created_at\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"position\": \"<long>\",\n    \"updated_at\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/trigger_categories/:trigger_category_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"trigger_categories",
																":trigger_category_id"
															],
															"variable": [
																{
																	"key": "trigger_category_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update Trigger Category",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"trigger_category\": {\n    \"name\": \"<string>\",\n    \"position\": \"<long>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/trigger_categories/:trigger_category_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"trigger_categories",
														":trigger_category_id"
													],
													"variable": [
														{
															"key": "trigger_category_id",
															"value": "<string>",
															"description": "(Required) The id of the trigger category to update"
														}
													]
												},
												"description": "Updates the trigger category with the specified ID."
											},
											"response": [
												{
													"name": "The updated trigger category",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"trigger_category\": {\n    \"name\": \"<string>\",\n    \"position\": \"<long>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/trigger_categories/:trigger_category_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"trigger_categories",
																":trigger_category_id"
															],
															"variable": [
																{
																	"key": "trigger_category_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trigger_category\": {\n    \"created_at\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"position\": \"<long>\",\n    \"updated_at\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"trigger_category\": {\n    \"name\": \"<string>\",\n    \"position\": \"<long>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/trigger_categories/:trigger_category_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"trigger_categories",
																":trigger_category_id"
															],
															"variable": [
																{
																	"key": "trigger_category_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"trigger_category\": {\n    \"name\": \"<string>\",\n    \"position\": \"<long>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/trigger_categories/:trigger_category_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"trigger_categories",
																":trigger_category_id"
															],
															"variable": [
																{
																	"key": "trigger_category_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete Trigger Category",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/trigger_categories/:trigger_category_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"trigger_categories",
														":trigger_category_id"
													],
													"variable": [
														{
															"key": "trigger_category_id",
															"value": "<string>",
															"description": "(Required) The id of the trigger category to delete"
														}
													]
												},
												"description": "Deletes the trigger category with the specified ID."
											},
											"response": [
												{
													"name": "No content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/trigger_categories/:trigger_category_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"trigger_categories",
																":trigger_category_id"
															],
															"variable": [
																{
																	"key": "trigger_category_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/trigger_categories/:trigger_category_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"trigger_categories",
																":trigger_category_id"
															],
															"variable": [
																{
																	"key": "trigger_category_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/trigger_categories/:trigger_category_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"trigger_categories",
																":trigger_category_id"
															],
															"variable": [
																{
																	"key": "trigger_category_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "jobs",
									"item": [
										{
											"name": "Create Batch Job for Trigger Categories",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"job\": {\n    \"action\": \"patch\",\n    \"items\": {\n      \"trigger_categories\": [\n        {\n          \"id\": \"<string>\",\n          \"position\": \"<long>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"position\": \"<long>\"\n        }\n      ],\n      \"triggers\": [\n        {\n          \"id\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"category_id\": \"<string>\",\n          \"position\": \"<long>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"category_id\": \"<string>\",\n          \"position\": \"<long>\"\n        }\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/trigger_categories/jobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"trigger_categories",
														"jobs"
													]
												},
												"description": "Creates a job that performs a batch operation for the given trigger categories."
											},
											"response": [
												{
													"name": "The response to the batch job",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"job\": {\n    \"action\": \"patch\",\n    \"items\": {\n      \"trigger_categories\": [\n        {\n          \"id\": \"<string>\",\n          \"position\": \"<long>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"position\": \"<long>\"\n        }\n      ],\n      \"triggers\": [\n        {\n          \"id\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"category_id\": \"<string>\",\n          \"position\": \"<long>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"category_id\": \"<string>\",\n          \"position\": \"<long>\"\n        }\n      ]\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/trigger_categories/jobs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"trigger_categories",
																"jobs"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\",\n      \"trigger_id\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\",\n      \"trigger_id\": \"<string>\"\n    }\n  ],\n  \"results\": {\n    \"trigger_categories\": [\n      {\n        \"created_at\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"position\": \"<long>\",\n        \"updated_at\": \"<string>\"\n      },\n      {\n        \"created_at\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"position\": \"<long>\",\n        \"updated_at\": \"<string>\"\n      }\n    ],\n    \"triggers\": [\n      {\n        \"conditions\": {\n          \"all\": [\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"any\": [\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        \"actions\": [\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"title\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"category_id\": \"<string>\",\n        \"created_at\": \"<string>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_title\": \"<string>\",\n        \"updated_at\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"conditions\": {\n          \"all\": [\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"any\": [\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        \"actions\": [\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"title\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"category_id\": \"<string>\",\n        \"created_at\": \"<string>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_title\": \"<string>\",\n        \"updated_at\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  },\n  \"status\": \"complete\"\n}"
												},
												{
													"name": "Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"job\": {\n    \"action\": \"patch\",\n    \"items\": {\n      \"trigger_categories\": [\n        {\n          \"id\": \"<string>\",\n          \"position\": \"<long>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"position\": \"<long>\"\n        }\n      ],\n      \"triggers\": [\n        {\n          \"id\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"category_id\": \"<string>\",\n          \"position\": \"<long>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"category_id\": \"<string>\",\n          \"position\": \"<long>\"\n        }\n      ]\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/trigger_categories/jobs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"trigger_categories",
																"jobs"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\",\n      \"trigger_id\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\",\n      \"trigger_id\": \"<string>\"\n    }\n  ],\n  \"results\": {\n    \"trigger_categories\": [\n      {\n        \"created_at\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"position\": \"<long>\",\n        \"updated_at\": \"<string>\"\n      },\n      {\n        \"created_at\": \"<string>\",\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"position\": \"<long>\",\n        \"updated_at\": \"<string>\"\n      }\n    ],\n    \"triggers\": [\n      {\n        \"conditions\": {\n          \"all\": [\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"any\": [\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        \"actions\": [\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"title\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"category_id\": \"<string>\",\n        \"created_at\": \"<string>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_title\": \"<string>\",\n        \"updated_at\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"conditions\": {\n          \"all\": [\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"any\": [\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        \"actions\": [\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"title\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"category_id\": \"<string>\",\n        \"created_at\": \"<string>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_title\": \"<string>\",\n        \"updated_at\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  },\n  \"status\": \"complete\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Trigger Categories",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/trigger_categories?page[after]=<string>&page[before]=<string>&page[size]=<integer>&sort=-updated_at&include=rule_counts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"trigger_categories"
											],
											"query": [
												{
													"key": "page[after]",
													"value": "<string>",
													"description": "Pagination parameters"
												},
												{
													"key": "page[before]",
													"value": "<string>",
													"description": "Pagination parameters"
												},
												{
													"key": "page[size]",
													"value": "<integer>",
													"description": "Pagination parameters"
												},
												{
													"key": "sort",
													"value": "-updated_at",
													"description": "Sort parameters"
												},
												{
													"key": "include",
													"value": "rule_counts",
													"description": "Allowed sideloads"
												}
											]
										},
										"description": "Returns all the trigger categories in the account.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
									},
									"response": [
										{
											"name": "A paged array of trigger categories",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/trigger_categories?page[after]=<string>&page[before]=<string>&page[size]=<integer>&sort=-updated_at&include=rule_counts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"trigger_categories"
													],
													"query": [
														{
															"key": "page[after]",
															"value": "<string>",
															"description": "Pagination parameters"
														},
														{
															"key": "page[before]",
															"value": "<string>",
															"description": "Pagination parameters"
														},
														{
															"key": "page[size]",
															"value": "<integer>",
															"description": "Pagination parameters"
														},
														{
															"key": "sort",
															"value": "-updated_at",
															"description": "Sort parameters"
														},
														{
															"key": "include",
															"value": "rule_counts",
															"description": "Allowed sideloads"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trigger_categories\": [\n    {\n      \"active_count\": \"<long>\",\n      \"inactive_count\": \"<long>\"\n    },\n    {\n      \"active_count\": \"<long>\",\n      \"inactive_count\": \"<long>\"\n    }\n  ],\n  \"links\": {\n    \"next\": \"<string>\",\n    \"prev\": \"<string>\"\n  },\n  \"meta\": {\n    \"after_cursor\": \"<string>\",\n    \"before_cursor\": \"<string>\",\n    \"has_more\": \"<boolean>\"\n  }\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/trigger_categories?page[after]=<string>&page[before]=<string>&page[size]=<integer>&sort=-updated_at&include=rule_counts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"trigger_categories"
													],
													"query": [
														{
															"key": "page[after]",
															"value": "<string>",
															"description": "Pagination parameters"
														},
														{
															"key": "page[before]",
															"value": "<string>",
															"description": "Pagination parameters"
														},
														{
															"key": "page[size]",
															"value": "<integer>",
															"description": "Pagination parameters"
														},
														{
															"key": "sort",
															"value": "-updated_at",
															"description": "Sort parameters"
														},
														{
															"key": "include",
															"value": "rule_counts",
															"description": "Allowed sideloads"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/trigger_categories?page[after]=<string>&page[before]=<string>&page[size]=<integer>&sort=-updated_at&include=rule_counts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"trigger_categories"
													],
													"query": [
														{
															"key": "page[after]",
															"value": "<string>",
															"description": "Pagination parameters"
														},
														{
															"key": "page[before]",
															"value": "<string>",
															"description": "Pagination parameters"
														},
														{
															"key": "page[size]",
															"value": "<integer>",
															"description": "Pagination parameters"
														},
														{
															"key": "sort",
															"value": "-updated_at",
															"description": "Sort parameters"
														},
														{
															"key": "include",
															"value": "rule_counts",
															"description": "Allowed sideloads"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Trigger Category",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"trigger_category\": {\n    \"name\": \"<string>\",\n    \"position\": \"<long>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/trigger_categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"trigger_categories"
											]
										},
										"description": "Creates a trigger category."
									},
									"response": [
										{
											"name": "The created trigger category",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"trigger_category\": {\n    \"name\": \"<string>\",\n    \"position\": \"<long>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/trigger_categories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"trigger_categories"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trigger_category\": {\n    \"created_at\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"position\": \"<long>\",\n    \"updated_at\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"trigger_category\": {\n    \"name\": \"<string>\",\n    \"position\": \"<long>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/trigger_categories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"trigger_categories"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"trigger_category\": {\n    \"name\": \"<string>\",\n    \"position\": \"<long>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/trigger_categories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"trigger_categories"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"title\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"id\": \"<string>\",\n      \"links\": {},\n      \"source\": {},\n      \"status\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "triggers",
							"item": [
								{
									"name": "{trigger_id}",
									"item": [
										{
											"name": "revisions",
											"item": [
												{
													"name": "{trigger_revision_id}",
													"item": [
														{
															"name": "Show Trigger Revision",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/triggers/:trigger_id/revisions/:trigger_revision_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"triggers",
																		":trigger_id",
																		"revisions",
																		":trigger_revision_id"
																	],
																	"variable": [
																		{
																			"key": "trigger_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the trigger"
																		},
																		{
																			"key": "trigger_revision_id",
																			"value": "<integer>",
																			"description": "The ID of the revision for a particular trigger"
																		}
																	]
																},
																"description": "Fetches a revision associated with a trigger. Trigger revision history is only available on Enterprise plans.\n\n#### Allowed For\n\n * Agents\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name  | Will sideload\n| ----- | -------------\n| users | The user that authored each revision\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/triggers/:trigger_id/revisions/:trigger_revision_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"triggers",
																				":trigger_id",
																				"revisions",
																				":trigger_revision_id"
																			],
																			"variable": [
																				{
																					"key": "trigger_id"
																				},
																				{
																					"key": "trigger_revision_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trigger_revision\": {\n    \"author_id\": \"<integer>\",\n    \"created_at\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"snapshot\": {\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"description\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    \"url\": \"<string>\"\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "List Trigger Revisions",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/triggers/:trigger_id/revisions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"triggers",
																":trigger_id",
																"revisions"
															],
															"variable": [
																{
																	"key": "trigger_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the trigger"
																}
															]
														},
														"description": "List the revisions associated with a trigger. Trigger revision history is only available on Enterprise plans.\n\n#### Allowed For\n\n * Agents\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name  | Will sideload\n| ----- | -------------\n| users | The user that authored each revision\n\n#### Pagination\n\nThis endpoint uses cursor-based pagination. The records are ordered in\ndescending order by the `created_at` timestamp, then by `id` on duplicate\n`created_at` values.\n\nThe `cursor` parameter is a non-human-readable argument you can use to move\nforward or backward in time.\n\nEach JSON response will contain the following attributes to help you get\nmore results:\n\n- `after_url` requests more recent results\n- `before_url` requests older results\n- `after_cursor` is the cursor to build the request yourself\n- `before_cursor` is the cursor to build the request yourself\n\nThe properties are null if no more records are available.\n\nYou can request a maximum of 1000 records using the `limit` parameter. If\nno `limit` parameter is supplied, it will default to 1,000.\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/triggers/:trigger_id/revisions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"triggers",
																		":trigger_id",
																		"revisions"
																	],
																	"variable": [
																		{
																			"key": "trigger_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"after_cursor\": \"<string>\",\n  \"after_url\": \"<string>\",\n  \"before_cursor\": \"<string>\",\n  \"before_url\": \"<string>\",\n  \"count\": \"<integer>\",\n  \"trigger_revisions\": [\n    {\n      \"author_id\": \"<integer>\",\n      \"created_at\": \"<string>\",\n      \"diff\": {\n        \"actions\": [\n          {\n            \"field\": [\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              },\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              }\n            ],\n            \"value\": [\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              },\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              }\n            ]\n          },\n          {\n            \"field\": [\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              },\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              }\n            ],\n            \"value\": [\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              },\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              }\n            ]\n          }\n        ],\n        \"active\": [\n          {\n            \"change\": \"<string>\",\n            \"content\": \"<boolean>\"\n          },\n          {\n            \"change\": \"<string>\",\n            \"content\": \"<boolean>\"\n          }\n        ],\n        \"conditions\": {\n          \"field\": [\n            {\n              \"change\": \"<string>\",\n              \"content\": \"<boolean>\"\n            },\n            {\n              \"change\": \"<string>\",\n              \"content\": \"<boolean>\"\n            }\n          ],\n          \"operator\": [\n            {\n              \"change\": \"<string>\",\n              \"content\": \"<boolean>\"\n            },\n            {\n              \"change\": \"<string>\",\n              \"content\": \"<boolean>\"\n            }\n          ],\n          \"value\": [\n            {\n              \"change\": \"<string>\",\n              \"content\": \"<boolean>\"\n            },\n            {\n              \"change\": \"<string>\",\n              \"content\": \"<boolean>\"\n            }\n          ]\n        },\n        \"description\": [\n          {\n            \"change\": \"<string>\",\n            \"content\": \"<boolean>\"\n          },\n          {\n            \"change\": \"<string>\",\n            \"content\": \"<boolean>\"\n          }\n        ],\n        \"source_id\": \"<integer>\",\n        \"target_id\": \"<integer>\",\n        \"title\": [\n          {\n            \"change\": \"<string>\",\n            \"content\": \"<boolean>\"\n          },\n          {\n            \"change\": \"<string>\",\n            \"content\": \"<boolean>\"\n          }\n        ]\n      },\n      \"id\": \"<integer>\",\n      \"snapshot\": {\n        \"actions\": [\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"active\": \"<boolean>\",\n        \"conditions\": {\n          \"all\": [\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"any\": [\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        \"description\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      \"url\": \"<string>\"\n    },\n    {\n      \"author_id\": \"<integer>\",\n      \"created_at\": \"<string>\",\n      \"diff\": {\n        \"actions\": [\n          {\n            \"field\": [\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              },\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              }\n            ],\n            \"value\": [\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              },\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              }\n            ]\n          },\n          {\n            \"field\": [\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              },\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              }\n            ],\n            \"value\": [\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              },\n              {\n                \"change\": \"<string>\",\n                \"content\": \"<boolean>\"\n              }\n            ]\n          }\n        ],\n        \"active\": [\n          {\n            \"change\": \"<string>\",\n            \"content\": \"<boolean>\"\n          },\n          {\n            \"change\": \"<string>\",\n            \"content\": \"<boolean>\"\n          }\n        ],\n        \"conditions\": {\n          \"field\": [\n            {\n              \"change\": \"<string>\",\n              \"content\": \"<boolean>\"\n            },\n            {\n              \"change\": \"<string>\",\n              \"content\": \"<boolean>\"\n            }\n          ],\n          \"operator\": [\n            {\n              \"change\": \"<string>\",\n              \"content\": \"<boolean>\"\n            },\n            {\n              \"change\": \"<string>\",\n              \"content\": \"<boolean>\"\n            }\n          ],\n          \"value\": [\n            {\n              \"change\": \"<string>\",\n              \"content\": \"<boolean>\"\n            },\n            {\n              \"change\": \"<string>\",\n              \"content\": \"<boolean>\"\n            }\n          ]\n        },\n        \"description\": [\n          {\n            \"change\": \"<string>\",\n            \"content\": \"<boolean>\"\n          },\n          {\n            \"change\": \"<string>\",\n            \"content\": \"<boolean>\"\n          }\n        ],\n        \"source_id\": \"<integer>\",\n        \"target_id\": \"<integer>\",\n        \"title\": [\n          {\n            \"change\": \"<string>\",\n            \"content\": \"<boolean>\"\n          },\n          {\n            \"change\": \"<string>\",\n            \"content\": \"<boolean>\"\n          }\n        ]\n      },\n      \"id\": \"<integer>\",\n      \"snapshot\": {\n        \"actions\": [\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"active\": \"<boolean>\",\n        \"conditions\": {\n          \"all\": [\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"any\": [\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"operator\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        \"description\": \"<string>\",\n        \"title\": \"<string>\"\n      },\n      \"url\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Show Trigger",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/triggers/:trigger_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"triggers",
														":trigger_id"
													],
													"variable": [
														{
															"key": "trigger_id",
															"value": "<integer>",
															"description": "(Required) The ID of the trigger"
														}
													]
												},
												"description": "#### Allowed For\n\n* Agents\n\nThe Via Type value is a number instead of a text string. See [Via types reference](/documentation/ticketing/reference-guides/via-types/) for the keys.\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/triggers/:trigger_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"triggers",
																":trigger_id"
															],
															"variable": [
																{
																	"key": "trigger_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trigger\": {\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"category_id\": \"<string>\",\n    \"created_at\": \"<string>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_title\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Trigger",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"trigger\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/triggers/:trigger_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"triggers",
														":trigger_id"
													],
													"variable": [
														{
															"key": "trigger_id",
															"value": "<integer>",
															"description": "(Required) The ID of the trigger"
														}
													]
												},
												"description": "#### Allowed For\n\n* Agents\n\n#### Note\n\nUpdating a condition or action updates both the conditions and actions arrays,\nclearing all existing values of both arrays. Include all your conditions\nand actions when updating any condition or action.\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"trigger\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/triggers/:trigger_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"triggers",
																":trigger_id"
															],
															"variable": [
																{
																	"key": "trigger_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trigger\": {\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"category_id\": \"<string>\",\n    \"created_at\": \"<string>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_title\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Trigger",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/triggers/:trigger_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"triggers",
														":trigger_id"
													],
													"variable": [
														{
															"key": "trigger_id",
															"value": "<integer>",
															"description": "(Required) The ID of the trigger"
														}
													]
												},
												"description": "#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/triggers/:trigger_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"triggers",
																":trigger_id"
															],
															"variable": [
																{
																	"key": "trigger_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "active",
									"item": [
										{
											"name": "List Active Triggers",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/triggers/active?sort=<string>&sort_by=<string>&sort_order=<string>&category_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"triggers",
														"active"
													],
													"query": [
														{
															"key": "sort",
															"value": "<string>",
															"description": "Cursor-based pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", or \"position\"."
														},
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
														},
														{
															"key": "category_id",
															"value": "<string>",
															"description": "Filter triggers by category ID"
														}
													]
												},
												"description": "Lists all active triggers.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n#### Allowed For\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each trigger, if present\n| permissions      | The permissions for each trigger\n| usage_1h         | The number of times each trigger has been used in the past hour\n| usage_24h        | The number of times each trigger has been used in the past day\n| usage_7d         | The number of times each trigger has been used in the past week\n| usage_30d        | The number of times each trigger has been used in the past thirty days\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/triggers/active?sort=<string>&sort_by=<string>&sort_order=<string>&category_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"triggers",
																"active"
															],
															"query": [
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "Cursor-based pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", or \"position\"."
																},
																{
																	"key": "sort_by",
																	"value": "<string>",
																	"description": "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
																},
																{
																	"key": "sort_order",
																	"value": "<string>",
																	"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
																},
																{
																	"key": "category_id",
																	"value": "<string>",
																	"description": "Filter triggers by category ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"triggers\": [\n    {\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"category_id\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"category_id\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "definitions",
									"item": [
										{
											"name": "List Trigger Action and Condition Definitions",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/triggers/definitions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"triggers",
														"definitions"
													]
												},
												"description": "Returns the definitions of the actions a trigger can perform and the\ndefinitions of the conditions under which a trigger can execute. The\ndefinition of the action includes a title (\"Status\"), a type (\"list\"), and\npossible values. The definition of the condition includes the same fields\nas well as the possible operators.\n\nFor a list of supported actions, see the [Actions reference](/documentation/ticketing/reference-guides/actions-reference)\nFor a list of supported conditions, see the [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/triggers/definitions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"triggers",
																"definitions"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"definitions\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"actions\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"group\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"nullable\": {\n              \"type\": \"boolean\",\n              \"default\": \"<boolean>\"\n            },\n            \"repeatable\": {\n              \"type\": \"boolean\",\n              \"default\": \"<boolean>\"\n            },\n            \"subject\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"values\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"enabled\": {\n                    \"type\": \"boolean\",\n                    \"default\": \"<boolean>\"\n                  },\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  },\n                  \"value\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"conditions_all\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"group\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"nullable\": {\n              \"type\": \"boolean\",\n              \"default\": \"<boolean>\"\n            },\n            \"operators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"terminal\": {\n                    \"type\": \"boolean\",\n                    \"default\": \"<boolean>\"\n                  },\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  },\n                  \"value\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  }\n                }\n              }\n            },\n            \"repeatable\": {\n              \"type\": \"boolean\",\n              \"default\": \"<boolean>\"\n            },\n            \"subject\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"values\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"enabled\": {\n                    \"type\": \"boolean\",\n                    \"default\": \"<boolean>\"\n                  },\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  },\n                  \"value\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"conditions_any\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"group\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"nullable\": {\n              \"type\": \"boolean\",\n              \"default\": \"<boolean>\"\n            },\n            \"operators\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"terminal\": {\n                    \"type\": \"boolean\",\n                    \"default\": \"<boolean>\"\n                  },\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  },\n                  \"value\": {\n                    \"type\": \"string\",\n                    \"default\": \"<string>\"\n                  }\n                }\n              }\n            },\n            \"repeatable\": {\n              \"type\": \"boolean\",\n              \"default\": \"<boolean>\"\n            },\n            \"subject\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"default\": \"<string>\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Bulk Delete Triggers",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/triggers/destroy_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"triggers",
														"destroy_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) A comma separated list of trigger IDs"
														}
													]
												},
												"description": "Deletes the triggers corresponding to the provided comma-separated list of IDs.\n\n#### Allowed For\n\n* Agents\n\n#### Request Parameters\n\nThe DELETE request takes one parameter, an `ids` object that lists the\ntriggers to delete.\n\n| Name | Description\n| ---- | -----------\n| ids  | The IDs of the triggers to delete\n\n#### Example request\n\n```js\n{\n  \"ids\": \"25,23,27,22\"\n}\n```\n"
											},
											"response": [
												{
													"name": "No content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/triggers/destroy_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"triggers",
																"destroy_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) A comma separated list of trigger IDs"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "reorder",
									"item": [
										{
											"name": "Reorder Triggers",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/triggers/reorder",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"triggers",
														"reorder"
													]
												},
												"description": "Alters the firing order of triggers in the account. See\n[Reordering and sorting triggers](https://support.zendesk.com/hc/en-us/articles/115015696088)\nin the Zendesk Help Center. The firing order is set in a `trigger_ids` array in the request body.\n\nYou must include every trigger id in your account to reorder the triggers. If not, the endpoint will return 404 Forbidden.\n\nReordering triggers via the API is not permitted if you have more than one trigger category. If there is more than one\ntrigger category, the endpoint will return a `LimitOneCategory` error.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/triggers/reorder",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"triggers",
																"reorder"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"trigger\": {\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"category_id\": \"<string>\",\n    \"created_at\": \"<string>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_title\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "search",
									"item": [
										{
											"name": "Search Triggers",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/triggers/search?query=<string>&json=[object Object]&active=<boolean>&sort=<string>&sort_by=<string>&sort_order=<string>&include=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"triggers",
														"search"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>",
															"description": "(Required) Query string used to find all triggers with matching title"
														},
														{
															"key": "json",
															"value": "[object Object]",
															"description": "Trigger attribute filters for the search. See [Filter](#filter)"
														},
														{
															"key": "active",
															"value": "<boolean>",
															"description": "Filter by active triggers if true or inactive triggers if false"
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Cursor-based pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", or \"position\"."
														},
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
														},
														{
															"key": "include",
															"value": "<string>",
															"description": "A sideload to include in the response. See [Sideloads](#sideloads-2)"
														}
													]
												},
												"description": "#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported. For more information, see [Side-loading](/documentation/ticketing/using-the-zendesk-api/side_loading/).\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each trigger, if present\n| permissions      | The permissions for each trigger\n| usage_1h         | The number of times each trigger has been used in the past hour\n| usage_24h        | The number of times each trigger has been used in the past day\n| usage_7d         | The number of times each trigger has been used in the past week\n| usage_30d        | The number of times each trigger has been used in the past thirty days\n\n#### Filter\n\nUse the `filter` query parameter to filter a trigger search by one or more attributes. For example, the following `filter` argument filters triggers by the `description` attribute:\n\n```json\n{\n  \"json\": {\n    \"description\": \"Close a ticket\"\n  }\n}\n```\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/triggers/search?query=<string>&json=[object Object]&active=<boolean>&sort=<string>&sort_by=<string>&sort_order=<string>&include=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"triggers",
																"search"
															],
															"query": [
																{
																	"key": "query",
																	"value": "<string>",
																	"description": "(Required) Query string used to find all triggers with matching title"
																},
																{
																	"key": "json",
																	"value": "[object Object]",
																	"description": "Trigger attribute filters for the search. See [Filter](#filter)"
																},
																{
																	"key": "active",
																	"value": "<boolean>",
																	"description": "Filter by active triggers if true or inactive triggers if false"
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "Cursor-based pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", or \"position\"."
																},
																{
																	"key": "sort_by",
																	"value": "<string>",
																	"description": "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
																},
																{
																	"key": "sort_order",
																	"value": "<string>",
																	"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
																},
																{
																	"key": "include",
																	"value": "<string>",
																	"description": "A sideload to include in the response. See [Sideloads](#sideloads-2)"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"triggers\": [\n    {\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"category_id\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"category_id\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "update_many",
									"item": [
										{
											"name": "Update Many Triggers",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"triggers\": [\n    {\n      \"id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"category_id\": \"<string>\",\n      \"position\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"category_id\": \"<string>\",\n      \"position\": \"<integer>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/triggers/update_many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"triggers",
														"update_many"
													]
												},
												"description": "Updates the position or the active status of multiple triggers. Any additional properties are ignored.\n\n#### Allowed For\n\n* Agents\n\n#### Request Parameters\n\nThe PUT request expects a `triggers` object that lists the triggers to update.\n\nEach trigger may have the following properties:\n\n| Name        | Mandatory | Description\n| --------    | --------- | -----------\n| id          | yes       | The ID of the trigger to update\n| position    | no        | The new position of the trigger\n| active      | no        | The active status of the trigger (true or false)\n| category_id | no        | The ID of the new category the trigger is to be moved to\n\n#### Example Request\n\n```js\n{\n  \"triggers\": [\n    {\"id\": 25, \"position\": 3},\n    {\"id\": 23, \"position\": 5},\n    {\"id\": 27, \"position\": 9},\n    {\"id\": 22, \"position\": 7}\n  ]\n}\n```\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"triggers\": [\n    {\n      \"id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"category_id\": \"<string>\",\n      \"position\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"active\": \"<boolean>\",\n      \"category_id\": \"<string>\",\n      \"position\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/triggers/update_many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"triggers",
																"update_many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"triggers\": [\n    {\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"category_id\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"category_id\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Triggers",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/triggers?active=<boolean>&sort=<string>&sort_by=<string>&sort_order=<string>&category_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"triggers"
											],
											"query": [
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Filter by active triggers if true or inactive triggers if false"
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "Cursor-based pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", or \"position\"."
												},
												{
													"key": "sort_by",
													"value": "<string>",
													"description": "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
												},
												{
													"key": "sort_order",
													"value": "<string>",
													"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
												},
												{
													"key": "category_id",
													"value": "<string>",
													"description": "Filter triggers by category ID"
												}
											]
										},
										"description": "Lists all triggers for the current account.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported. The usage sideloads are only supported on the Support Professional or Suite Growth plan or above.\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each trigger, if present\n| permissions      | The permissions for each trigger\n| usage_1h         | The number of times each trigger has been used in the past hour\n| usage_24h        | The number of times each trigger has been used in the past day\n| usage_7d         | The number of times each trigger has been used in the past week\n| usage_30d        | The number of times each trigger has been used in the past thirty days\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/triggers?active=<boolean>&sort=<string>&sort_by=<string>&sort_order=<string>&category_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"triggers"
													],
													"query": [
														{
															"key": "active",
															"value": "<boolean>",
															"description": "Filter by active triggers if true or inactive triggers if false"
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "Cursor-based pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", or \"position\"."
														},
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
														},
														{
															"key": "category_id",
															"value": "<string>",
															"description": "Filter triggers by category ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"triggers\": [\n    {\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"category_id\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"actions\": [\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"category_id\": \"<string>\",\n      \"created_at\": \"<string>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_title\": \"<string>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Trigger",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"trigger\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/triggers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"triggers"
											]
										},
										"description": "#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"trigger\": {\n    \"value\": \"<Error: Could not resolve allOf schema\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/triggers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"triggers"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"trigger\": {\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"actions\": [\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"field\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"category_id\": \"<string>\",\n    \"created_at\": \"<string>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_title\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "uploads",
							"item": [
								{
									"name": "{token}",
									"item": [
										{
											"name": "Delete Upload",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/uploads/:token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"uploads",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "<string>",
															"description": "(Required) The token of the uploaded attachment"
														}
													]
												},
												"description": "#### Allowed for\n\n* End Users\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/uploads/:token",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"uploads",
																":token"
															],
															"variable": [
																{
																	"key": "token"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "Upload Files",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/uploads",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"uploads"
											]
										},
										"description": "Uploads a file that can be attached to a ticket comment. It doesn't attach the file to the comment. For details and examples, see [Attaching ticket comments with the API](/documentation/ticketing/using-the-zendesk-api/adding-ticket-attachments-with-the-api).\n\nThe endpoint has a required `filename` query parameter. The parameter specifies what the file will be named when attached to the ticket comment (to give the agent more context about the file). The parameter does not specify the file on the local system to be uploaded. While the two names can be different, their file extensions must be the same. If they don't match, the agent's browser or file reader could give an error when attempting to open the attachment.\n\nThe `Content-Type` header must contain a recognized MIME type that correctly describes the type of the uploaded file. Failing to send a recognized, correct type may cause undesired behavior. For example, in-browser audio playback may be interrupted by the browser's security mechanisms for MP3s uploaded with an incorrect type.\n\nAdding multiple files to the same upload is handled by splitting requests and passing the API token received from the first request to each subsequent request. The token is valid for 3 days.\n\n**Note**: Even if [private attachments](https://support.zendesk.com/hc/en-us/articles/204265396) are enabled in the Zendesk Support instance, uploaded files are visible to any authenticated user at the `content_URL` specified in the [JSON response](#json-format) until the upload token is consumed. Once a file is associated with a ticket or post, visibility is restricted to users with access to the ticket or post with the attachment.\n\n#### Allowed For\n\n* End users\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/uploads",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"uploads"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"upload\": {\n    \"attachment\": {\n      \"content_type\": \"<string>\",\n      \"content_url\": \"<string>\",\n      \"deleted\": \"<boolean>\",\n      \"file_name\": \"<string>\",\n      \"height\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"inline\": \"<boolean>\",\n      \"malware_access_override\": \"<boolean>\",\n      \"malware_scan_result\": \"<string>\",\n      \"mapped_content_url\": \"<string>\",\n      \"size\": \"<integer>\",\n      \"url\": \"<string>\",\n      \"width\": \"<string>\",\n      \"thumbnails\": [\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        },\n        {\n          \"content_type\": \"<string>\",\n          \"content_url\": \"<string>\",\n          \"deleted\": \"<boolean>\",\n          \"file_name\": \"<string>\",\n          \"height\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"inline\": \"<boolean>\",\n          \"malware_access_override\": \"<boolean>\",\n          \"malware_scan_result\": \"<string>\",\n          \"mapped_content_url\": \"<string>\",\n          \"size\": \"<integer>\",\n          \"url\": \"<string>\",\n          \"width\": \"<string>\"\n        }\n      ]\n    },\n    \"attachments\": [\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\",\n        \"thumbnails\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"content_type\": \"<string>\",\n        \"content_url\": \"<string>\",\n        \"deleted\": \"<boolean>\",\n        \"file_name\": \"<string>\",\n        \"height\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"inline\": \"<boolean>\",\n        \"malware_access_override\": \"<boolean>\",\n        \"malware_scan_result\": \"<string>\",\n        \"mapped_content_url\": \"<string>\",\n        \"size\": \"<integer>\",\n        \"url\": \"<string>\",\n        \"width\": \"<string>\",\n        \"thumbnails\": [\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          },\n          {\n            \"content_type\": \"<string>\",\n            \"content_url\": \"<string>\",\n            \"deleted\": \"<boolean>\",\n            \"file_name\": \"<string>\",\n            \"height\": \"<string>\",\n            \"id\": \"<integer>\",\n            \"inline\": \"<boolean>\",\n            \"malware_access_override\": \"<boolean>\",\n            \"malware_scan_result\": \"<string>\",\n            \"mapped_content_url\": \"<string>\",\n            \"size\": \"<integer>\",\n            \"url\": \"<string>\",\n            \"width\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"token\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "user_fields",
							"item": [
								{
									"name": "{user_field_id}",
									"item": [
										{
											"name": "options",
											"item": [
												{
													"name": "{user_field_option_id}",
													"item": [
														{
															"name": "Show a User Field Option",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id/options/:user_field_option_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"user_fields",
																		":user_field_id",
																		"options",
																		":user_field_option_id"
																	],
																	"variable": [
																		{
																			"key": "user_field_id",
																			"value": "<integer>",
																			"description": "(Required) The ID or key of the user field"
																		},
																		{
																			"key": "user_field_option_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the user field option"
																		}
																	]
																},
																"description": "#### Allowed for\n* Agents\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id/options/:user_field_option_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"user_fields",
																				":user_field_id",
																				"options",
																				":user_field_option_id"
																			],
																			"variable": [
																				{
																					"key": "user_field_id"
																				},
																				{
																					"key": "user_field_option_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"custom_field_option\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_name\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
																}
															]
														},
														{
															"name": "Delete User Field Option",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id/options/:user_field_option_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"user_fields",
																		":user_field_id",
																		"options",
																		":user_field_option_id"
																	],
																	"variable": [
																		{
																			"key": "user_field_id",
																			"value": "<integer>",
																			"description": "(Required) The ID or key of the user field"
																		},
																		{
																			"key": "user_field_option_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the user field option"
																		}
																	]
																},
																"description": "#### Allowed for\n* Admins\n"
															},
															"response": [
																{
																	"name": "No Content response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id/options/:user_field_option_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"user_fields",
																				":user_field_id",
																				"options",
																				":user_field_option_id"
																			],
																			"variable": [
																				{
																					"key": "user_field_id"
																				},
																				{
																					"key": "user_field_option_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": null
																}
															]
														}
													]
												},
												{
													"name": "List User Field Options",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id/options",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"user_fields",
																":user_field_id",
																"options"
															],
															"variable": [
																{
																	"key": "user_field_id",
																	"value": "<integer>",
																	"description": "(Required) The ID or key of the user field"
																}
															]
														},
														"description": "Returns a list of custom user field options for the given dropdown user field.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id/options",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"user_fields",
																		":user_field_id",
																		"options"
																	],
																	"variable": [
																		{
																			"key": "user_field_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"count\": \"<integer>\",\n  \"custom_field_options\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_name\": \"<string>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_name\": \"<string>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Create or Update a User Field Option",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id/options",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"user_fields",
																":user_field_id",
																"options"
															],
															"variable": [
																{
																	"key": "user_field_id",
																	"value": "<integer>",
																	"description": "(Required) The ID or key of the user field"
																}
															]
														},
														"description": "Creates a new option or updates an existing option for the given drop-down user field.\n\nTo update an option, include the id of the option in the `custom_field_option` object. Example: `{\"custom_field_option\": {\"id\": 10002, \"name\": \"Pineapples\", ... }`. If an option exists for the given ID, the option will be updated. Otherwise, a new option will be created.\n\n#### Response\n\nReturns one of the following status codes:\n\n- 200 with `Location: /api/v2/user_fields/{user_field_id}/options.json` if the user field option already exists in the database\n- 201 with `Location: /api/v2/user_fields/{user_field_id}/options.json` if the user field option is new\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id/options",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"user_fields",
																		":user_field_id",
																		"options"
																	],
																	"variable": [
																		{
																			"key": "user_field_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"custom_field_option\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_name\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
														},
														{
															"name": "Created response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id/options",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"user_fields",
																		":user_field_id",
																		"options"
																	],
																	"variable": [
																		{
																			"key": "user_field_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"custom_field_option\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_name\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Show User Field",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user_fields",
														":user_field_id"
													],
													"variable": [
														{
															"key": "user_field_id",
															"value": "<integer>",
															"description": "(Required) The ID or key of the user field"
														}
													]
												},
												"description": "#### Allowed for\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"user_fields",
																":user_field_id"
															],
															"variable": [
																{
																	"key": "user_field_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"user_field\": {\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"system\": \"<boolean>\",\n    \"tag\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update User Field",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user_fields",
														":user_field_id"
													],
													"variable": [
														{
															"key": "user_field_id",
															"value": "<integer>",
															"description": "(Required) The ID or key of the user field"
														}
													]
												},
												"description": "#### Updating a Dropdown (Tagger) Field\n\nDropdown fields return an array of `custom_field_options` which specify the name, value and order of the list of dropdown options.\nUnderstand the following behavior when updating a dropdown field:\n\n- All options must be passed on update. Options that are not passed will be removed. As a result, these values will be removed from any organizations.\n- To create a new option, pass a null `id` along with `name` and `value`.\n- To update an existing option, pass its `id` along with `name` and `value`.\n- To re-order an option, reposition it in the `custom_field_options` array relative to the other options.\n- To remove an option, omit it from the list of options upon update.\n\n#### Example Request\n\n```bash\ncurl https://{subdomain}.zendesk.com/api/v2/user_fields/{user_field_id}.json \\\n  -H \"Content-Type: application/json\" -X PUT \\\n  -d '{\"user_field\": {\"custom_field_options\": [{\"id\": 124, \"name\": \"Option 2\", \"value\": \"option_2\"}, {\"id\": 123, \"name\": \"Option 1\", \"value\": \"option_1\"}, {\"id\": 125, \"name\": \"Option 2\", \"value\": \"option_3\"}]}}' \\\n  -v -u {email_address}:{password}\n```\n#### Allowed for\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"user_fields",
																":user_field_id"
															],
															"variable": [
																{
																	"key": "user_field_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"user_field\": {\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"system\": \"<boolean>\",\n    \"tag\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete User Field",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user_fields",
														":user_field_id"
													],
													"variable": [
														{
															"key": "user_field_id",
															"value": "<integer>",
															"description": "(Required) The ID or key of the user field"
														}
													]
												},
												"description": "#### Allowed for\n\n* Admins\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/user_fields/:user_field_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"user_fields",
																":user_field_id"
															],
															"variable": [
																{
																	"key": "user_field_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "reorder",
									"item": [
										{
											"name": "Reorder User Field",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user_fields/reorder",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user_fields",
														"reorder"
													]
												},
												"description": "#### Allowed For\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/user_fields/reorder",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"user_fields",
																"reorder"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "<string>"
												}
											]
										}
									]
								},
								{
									"name": "List User Fields",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user_fields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user_fields"
											]
										},
										"description": "Returns a list of custom user fields in your account. Fields are returned in the order that you specify in your user fields configuration in Zendesk Support. Clients should cache this resource for the duration of their API usage and map the key for each User Field to the values returned under the `user_fields` attribute on the [User](/api-reference/ticketing/users/users/) resource.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user_fields"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"user_fields\": [\n    {\n      \"key\": \"<string>\",\n      \"type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"custom_field_options\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_description\": \"<string>\",\n      \"raw_title\": \"<string>\",\n      \"regexp_for_validation\": \"<string>\",\n      \"relationship_filter\": {},\n      \"relationship_target_type\": \"<string>\",\n      \"system\": \"<boolean>\",\n      \"tag\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"custom_field_options\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"raw_name\": \"<string>\",\n          \"url\": \"<string>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"raw_description\": \"<string>\",\n      \"raw_title\": \"<string>\",\n      \"regexp_for_validation\": \"<string>\",\n      \"relationship_filter\": {},\n      \"relationship_target_type\": \"<string>\",\n      \"system\": \"<boolean>\",\n      \"tag\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create User Field",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/user_fields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"user_fields"
											]
										},
										"description": "Creates any of the following custom field types:\n\n* text (default when no \"type\" is specified)\n* textarea\n* checkbox\n* date\n* integer\n* decimal\n* regexp\n* dropdown\n* lookup\n\nSee [About custom field types](https://support.zendesk.com/hc/en-us/articles/203661866) in Zendesk help.\n\n#### Allowed For\n\n* Admins\n"
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/user_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"user_fields"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"user_field\": {\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"custom_field_options\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"raw_name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"raw_description\": \"<string>\",\n    \"raw_title\": \"<string>\",\n    \"regexp_for_validation\": \"<string>\",\n    \"relationship_filter\": {},\n    \"relationship_target_type\": \"<string>\",\n    \"system\": \"<boolean>\",\n    \"tag\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "users",
							"item": [
								{
									"name": "{user_id}",
									"item": [
										{
											"name": "compliance_deletion_statuses",
											"item": [
												{
													"name": "Show Compliance Deletion Statuses",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:user_id/compliance_deletion_statuses?application=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":user_id",
																"compliance_deletion_statuses"
															],
															"query": [
																{
																	"key": "application",
																	"value": "<string>",
																	"description": "Area of compliance"
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"description": "(Required) The id of the user"
																}
															]
														},
														"description": "Returns the GDPR status for each user per area of compliance. A Zendesk area of compliance is typically a product like \"support/explore\" but can be more fine-grained for areas within the product lines.\n\nIf the user is not in the account, the request returns a 404 status.\n\n```http\nStatus: 404\n{\n  \"error\":\"RecordNotFound\",\n  \"description\":\"Not found\"\n}\n```\n\n#### Allowed For\n\n* Agents, with restrictions\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/compliance_deletion_statuses?application=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"compliance_deletion_statuses"
																	],
																	"query": [
																		{
																			"key": "application",
																			"value": "<string>",
																			"description": "Area of compliance"
																		}
																	],
																	"variable": [
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"compliance_deletion_statuses\": [\n    {\n      \"action\": \"<string>\",\n      \"application\": \"<string>\",\n      \"account_subdomain\": \"<string>\",\n      \"executer_id\": \"<integer>\",\n      \"user_id\": \"<integer>\",\n      \"created_at\": \"<string>\"\n    },\n    {\n      \"action\": \"<string>\",\n      \"application\": \"<string>\",\n      \"account_subdomain\": \"<string>\",\n      \"executer_id\": \"<integer>\",\n      \"user_id\": \"<integer>\",\n      \"created_at\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "group_memberships",
											"item": [
												{
													"name": "{group_membership_id}",
													"item": [
														{
															"name": "make_default",
															"item": [
																{
																	"name": "Set Membership as Default",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/group_memberships/:group_membership_id/make_default",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"group_memberships",
																				":group_membership_id",
																				"make_default"
																			],
																			"variable": [
																				{
																					"key": "user_id",
																					"value": "<integer>",
																					"description": "(Required) The id of the user"
																				},
																				{
																					"key": "group_membership_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the group membership"
																				}
																			]
																		},
																		"description": "#### Allowed For:\n\n* Agents\n"
																	},
																	"response": [
																		{
																			"name": "Success response",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/users/:user_id/group_memberships/:group_membership_id/make_default",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"users",
																						":user_id",
																						"group_memberships",
																						":group_membership_id",
																						"make_default"
																					],
																					"variable": [
																						{
																							"key": "user_id"
																						},
																						{
																							"key": "group_membership_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"group_memberships\": [\n    {\n      \"user_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"user_id\": \"<integer>\",\n      \"group_id\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "identities",
											"item": [
												{
													"name": "{user_identity_id}",
													"item": [
														{
															"name": "make_primary",
															"item": [
																{
																	"name": "Make Identity Primary",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/identities/:user_identity_id/make_primary",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"identities",
																				":user_identity_id",
																				"make_primary"
																			],
																			"variable": [
																				{
																					"key": "user_id",
																					"value": "<integer>",
																					"description": "(Required) The id of the user"
																				},
																				{
																					"key": "user_identity_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the user identity"
																				}
																			]
																		},
																		"description": "Sets the specified identity as primary. To change other attributes, use the [Update  Identity](#update-identity) endpoint. This is a collection-level operation and the correct behavior for an API client is to subsequently reload the entire collection.\n\nThe first endpoint is the preferred option if authenticating as an agent. If authenticating as an end user, you can only use the second endpoint. In addition, an end user can only make an email identity primary if the email is verified.\n\n#### Allowed For\n\n* Agents\n* Verified end users\n"
																	},
																	"response": [
																		{
																			"name": "Success response",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/users/:user_id/identities/:user_identity_id/make_primary",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"users",
																						":user_id",
																						"identities",
																						":user_identity_id",
																						"make_primary"
																					],
																					"variable": [
																						{
																							"key": "user_id"
																						},
																						{
																							"key": "user_identity_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"identities\": [\n    {\n      \"user_id\": \"<integer>\",\n      \"type\": \"email\",\n      \"value\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"deliverable_state\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"primary\": \"<boolean>\",\n      \"undeliverable_count\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"verified\": \"<boolean>\"\n    },\n    {\n      \"user_id\": \"<integer>\",\n      \"type\": \"email\",\n      \"value\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"deliverable_state\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"primary\": \"<boolean>\",\n      \"undeliverable_count\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"verified\": \"<boolean>\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "request_verification",
															"item": [
																{
																	"name": "Request User Verification",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/identities/:user_identity_id/request_verification",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"identities",
																				":user_identity_id",
																				"request_verification"
																			],
																			"variable": [
																				{
																					"key": "user_id",
																					"value": "<integer>",
																					"description": "(Required) The id of the user"
																				},
																				{
																					"key": "user_identity_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the user identity"
																				}
																			]
																		},
																		"description": "Sends the user a verification email with a link to verify ownership of the email address.\n\n#### Allowed For\n\n* Agents\n"
																	},
																	"response": [
																		{
																			"name": "Success description",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/users/:user_id/identities/:user_identity_id/request_verification",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"users",
																						":user_id",
																						"identities",
																						":user_identity_id",
																						"request_verification"
																					],
																					"variable": [
																						{
																							"key": "user_id"
																						},
																						{
																							"key": "user_identity_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "<string>"
																		}
																	]
																}
															]
														},
														{
															"name": "verify",
															"item": [
																{
																	"name": "Verify Identity",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/identities/:user_identity_id/verify",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"identities",
																				":user_identity_id",
																				"verify"
																			],
																			"variable": [
																				{
																					"key": "user_id",
																					"value": "<integer>",
																					"description": "(Required) The id of the user"
																				},
																				{
																					"key": "user_identity_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the user identity"
																				}
																			]
																		},
																		"description": "Sets the specified identity as verified.\n\nFor security reasons, you can't use this endpoint to update the email identity of the account owner. To verify the person's identity, send a verification email. See [Verifying the account owner's email address](https://support.zendesk.com/hc/en-us/articles/4408828975130) in Zendesk help.\n\n#### Allowed For\n\n* Agents\n"
																	},
																	"response": [
																		{
																			"name": "Success response",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/users/:user_id/identities/:user_identity_id/verify",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"users",
																						":user_id",
																						"identities",
																						":user_identity_id",
																						"verify"
																					],
																					"variable": [
																						{
																							"key": "user_id"
																						},
																						{
																							"key": "user_identity_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"identity\": {\n    \"user_id\": \"<integer>\",\n    \"type\": \"google\",\n    \"value\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"deliverable_state\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"primary\": \"<boolean>\",\n    \"undeliverable_count\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"verified\": \"<boolean>\"\n  }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Show Identity",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/identities/:user_identity_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"identities",
																		":user_identity_id"
																	],
																	"variable": [
																		{
																			"key": "user_id",
																			"value": "<integer>",
																			"description": "(Required) The id of the user"
																		},
																		{
																			"key": "user_identity_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the user identity"
																		}
																	]
																},
																"description": "Shows the identity with the given id for a given user.\n\nUse the first endpoint if authenticating as an agent. Use the second if authenticating as an end user. End users can only view email or phone number identity.\n\n#### Allowed For\n\n* Agents\n* Verified end users\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/identities/:user_identity_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"identities",
																				":user_identity_id"
																			],
																			"variable": [
																				{
																					"key": "user_id"
																				},
																				{
																					"key": "user_identity_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"identity\": {\n    \"user_id\": \"<integer>\",\n    \"type\": \"google\",\n    \"value\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"deliverable_state\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"primary\": \"<boolean>\",\n    \"undeliverable_count\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"verified\": \"<boolean>\"\n  }\n}"
																}
															]
														},
														{
															"name": "Update Identity",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/identities/:user_identity_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"identities",
																		":user_identity_id"
																	],
																	"variable": [
																		{
																			"key": "user_id",
																			"value": "<integer>",
																			"description": "(Required) The id of the user"
																		},
																		{
																			"key": "user_identity_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the user identity"
																		}
																	]
																},
																"description": "This endpoint allows you to:\n\n* Set the specified identity as verified (but you cannot unverify a verified identity)\n* Update the `value` property of the specified identity\n\nYou can't change an identity's `primary` attribute with this endpoint. You must use the [Make Identity Primary](#make-identity-primary) endpoint instead.\n\n#### Allowed For\n\n* Agents\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/identities/:user_identity_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"identities",
																				":user_identity_id"
																			],
																			"variable": [
																				{
																					"key": "user_id"
																				},
																				{
																					"key": "user_identity_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"identity\": {\n    \"user_id\": \"<integer>\",\n    \"type\": \"google\",\n    \"value\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"deliverable_state\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"primary\": \"<boolean>\",\n    \"undeliverable_count\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"verified\": \"<boolean>\"\n  }\n}"
																}
															]
														},
														{
															"name": "Delete Identity",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/identities/:user_identity_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"identities",
																		":user_identity_id"
																	],
																	"variable": [
																		{
																			"key": "user_id",
																			"value": "<integer>",
																			"description": "(Required) The id of the user"
																		},
																		{
																			"key": "user_identity_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the user identity"
																		}
																	]
																},
																"description": "Deletes the identity for a given user.\nIn certain cases, a phone number associated with an identity is still visible on the user profile after the identity has been deleted via API. You can remove the phone number from the user profile by updating the `phone` attribute of the user to an empty string. See [Update User via API](/api-reference/ticketing/users/users/#update-user) for details and examples.\n\n#### Allowed For\n* Agents\n"
															},
															"response": [
																{
																	"name": "No Content response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/identities/:user_identity_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"identities",
																				":user_identity_id"
																			],
																			"variable": [
																				{
																					"key": "user_id"
																				},
																				{
																					"key": "user_identity_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": null
																}
															]
														}
													]
												},
												{
													"name": "List Identities",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:user_id/identities",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":user_id",
																"identities"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"description": "(Required) The id of the user"
																}
															]
														},
														"description": "Returns a list of identities for the given user.\n\nUse the first endpoint if authenticating as an agent. Use the second if authenticating as an end user. End users can only list email and phone number identities.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n* Verified end users\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/identities",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"identities"
																	],
																	"variable": [
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"identities\": [\n    {\n      \"user_id\": \"<integer>\",\n      \"type\": \"email\",\n      \"value\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"deliverable_state\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"primary\": \"<boolean>\",\n      \"undeliverable_count\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"verified\": \"<boolean>\"\n    },\n    {\n      \"user_id\": \"<integer>\",\n      \"type\": \"email\",\n      \"value\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"deliverable_state\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"primary\": \"<boolean>\",\n      \"undeliverable_count\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"verified\": \"<boolean>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create Identity",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:user_id/identities",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":user_id",
																"identities"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"description": "(Required) The id of the user"
																}
															]
														},
														"description": "Adds an identity to a user's profile. An agent can add an identity to any user profile.\n\nSupported identity types:\n\n| Type             | Example |\n| ---------------- | ------- |\n| email            | `{ \"type\" : \"email\", \"value\" : \"someone@example.com\" }` |\n| twitter          | `{ \"type\" : \"twitter\", \"value\" : \"screen_name\" }` |\n| facebook         | `{ \"type\" : \"facebook\", \"value\" : \"855769377321\" }` |\n| google           | `{ \"type\" : \"google\", \"value\" : \"example@gmail.com\" }` |\n| agent_forwarding | `{ \"type\" : \"agent_forwarding\", \"value\" : \"+1 555-123-4567\" }` |\n| phone_number     | `{ \"type\" : \"phone_number\", \"value\" : \"+1 555-123-4567\" }` |\n\nTo create an identity without sending out a verification email, include a `\"skip_verify_email\": true` property.\n\n#### Allowed For\n\n* Agents\n"
													},
													"response": [
														{
															"name": "Created response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/identities",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"identities"
																	],
																	"variable": [
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"identity\": {\n    \"user_id\": \"<integer>\",\n    \"type\": \"google\",\n    \"value\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"deliverable_state\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"primary\": \"<boolean>\",\n    \"undeliverable_count\": \"<integer>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"verified\": \"<boolean>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "merge",
											"item": [
												{
													"name": "Merge End Users",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:user_id/merge",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":user_id",
																"merge"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"description": "(Required) The id of the user"
																}
															]
														},
														"description": "Merges the end user specified in the path parameter into the existing end user specified in the request body.\n\nAny two end users can be merged with the exception of end users created by sharing agreements.\n\nAgents and admins cannot be merged.\n\nFor more information about how user data is merged, see [Merging a user's duplicate account](https://support.zendesk.com/hc/en-us/articles/4408887695898) in Zendesk help.\n\n#### Allowed For\n\n* Admins or agents with permission to edit end users\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/merge",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"merge"
																	],
																	"variable": [
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"alias\": \"<string>\",\n    \"chat_only\": \"<boolean>\",\n    \"created_at\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"default_group_id\": \"<integer>\",\n    \"details\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"iana_time_zone\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"last_login_at\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"locale_id\": \"<integer>\",\n    \"moderator\": \"<boolean>\",\n    \"notes\": \"<string>\",\n    \"only_private_comments\": \"<boolean>\",\n    \"organization_id\": \"<integer>\",\n    \"phone\": \"<string>\",\n    \"photo\": {\n      \"reprehenderita\": true\n    },\n    \"remote_photo_url\": \"<string>\",\n    \"report_csv\": \"<boolean>\",\n    \"restricted_agent\": \"<boolean>\",\n    \"role\": \"<string>\",\n    \"role_type\": \"<integer>\",\n    \"shared\": \"<boolean>\",\n    \"shared_agent\": \"<boolean>\",\n    \"shared_phone_number\": \"<boolean>\",\n    \"signature\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tags\": \"<array>\",\n    \"ticket_restriction\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"two_factor_auth_enabled\": \"<boolean>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\",\n    \"user_fields\": {\n      \"nisi_7ec\": 54932786,\n      \"dolore_66\": -49692770.456187494\n    },\n    \"verified\": \"<boolean>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "organization_memberships",
											"item": [
												{
													"name": "{organization_membership_id}",
													"item": [
														{
															"name": "make_default",
															"item": [
																{
																	"name": "Set Membership as Default",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/organization_memberships/:organization_membership_id/make_default",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"organization_memberships",
																				":organization_membership_id",
																				"make_default"
																			],
																			"variable": [
																				{
																					"key": "user_id",
																					"value": "<integer>",
																					"description": "(Required) The id of the user"
																				},
																				{
																					"key": "organization_membership_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of the organization membership"
																				}
																			]
																		},
																		"description": "Sets the default organization membership of a given user.\n\n#### Allowed for\n\n* Admins\n* Agents when setting the default organization membership for an end user\n"
																	},
																	"response": [
																		{
																			"name": "Success response",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/users/:user_id/organization_memberships/:organization_membership_id/make_default",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"users",
																						":user_id",
																						"organization_memberships",
																						":organization_membership_id",
																						"make_default"
																					],
																					"variable": [
																						{
																							"key": "user_id"
																						},
																						{
																							"key": "organization_membership_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"organization_memberships\": [\n    {\n      \"user_id\": \"<integer>\",\n      \"organization_id\": \"<integer>\",\n      \"default\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"organization_name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"view_tickets\": \"<boolean>\"\n    },\n    {\n      \"user_id\": \"<integer>\",\n      \"organization_id\": \"<integer>\",\n      \"default\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"organization_name\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\",\n      \"view_tickets\": \"<boolean>\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "organizations",
											"item": [
												{
													"name": "{organization_id}",
													"item": [
														{
															"name": "make_default",
															"item": [
																{
																	"name": "Set Organization as Default",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/organizations/:organization_id/make_default",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"organizations",
																				":organization_id",
																				"make_default"
																			],
																			"variable": [
																				{
																					"key": "user_id",
																					"value": "<integer>",
																					"description": "(Required) The id of the user"
																				},
																				{
																					"key": "organization_id",
																					"value": "<integer>",
																					"description": "(Required) The ID of an organization"
																				}
																			]
																		},
																		"description": "Sets the default organization membership of a given user.\n\n#### Allowed For\n\n* Agents\n"
																	},
																	"response": [
																		{
																			"name": "Success response",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/v2/users/:user_id/organizations/:organization_id/make_default",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v2",
																						"users",
																						":user_id",
																						"organizations",
																						":organization_id",
																						"make_default"
																					],
																					"variable": [
																						{
																							"key": "user_id"
																						},
																						{
																							"key": "organization_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"organization_membership\": {\n    \"user_id\": \"<integer>\",\n    \"organization_id\": \"<integer>\",\n    \"default\": \"<boolean>\",\n    \"created_at\": \"<dateTime>\",\n    \"id\": \"<integer>\",\n    \"organization_name\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\",\n    \"view_tickets\": \"<boolean>\"\n  }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Unassign Organization",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/organizations/:organization_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"organizations",
																		":organization_id"
																	],
																	"variable": [
																		{
																			"key": "user_id",
																			"value": "<integer>",
																			"description": "(Required) The id of the user"
																		},
																		{
																			"key": "organization_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of an organization"
																		}
																	]
																},
																"description": "Immediately removes a user from an organization and schedules a job to unassign all working tickets currently assigned to the user and organization combination. The `organization_id` of the unassigned tickets is set to null.\n\n#### Allowed For\n\n* Agents\n"
															},
															"response": [
																{
																	"name": "No Content response",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/organizations/:organization_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"organizations",
																				":organization_id"
																			],
																			"variable": [
																				{
																					"key": "user_id"
																				},
																				{
																					"key": "organization_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": null
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "password",
											"item": [
												{
													"name": "requirements",
													"item": [
														{
															"name": "List password requirements",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/password/requirements",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"password",
																		"requirements"
																	],
																	"variable": [
																		{
																			"key": "user_id",
																			"value": "<integer>",
																			"description": "(Required) The id of the user"
																		}
																	]
																},
																"description": "#### Allowed For\n\n* Agents\n* End Users\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/password/requirements",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"password",
																				"requirements"
																			],
																			"variable": [
																				{
																					"key": "user_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"requirements\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Set a User's Password",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:user_id/password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":user_id",
																"password"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"description": "(Required) The id of the user"
																}
															]
														},
														"description": "An admin can set a user's password only if the setting is enabled in Zendesk Support under **Settings** > **Security** > **Global**. The setting is off by default. Only the account owner can access and change this setting.\n\n#### Allowed For\n\n* Admins\n"
													},
													"response": [
														{
															"name": "Success description",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/password",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"password"
																	],
																	"variable": [
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "<string>"
														}
													]
												},
												{
													"name": "Change Your Password",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:user_id/password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":user_id",
																"password"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"description": "(Required) The id of the user"
																}
															]
														},
														"description": "You can only change your own password. Nobody can change the password of another user because it requires knowing the user's existing password. However, an admin can set a new password for another user without knowing the existing password. See [Set a User's Password](#set-a-users-password) above.\n\n#### Allowed For\n\n* Agents\n* End Users\n"
													},
													"response": [
														{
															"name": "Success description",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/password",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"password"
																	],
																	"variable": [
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "<string>"
														}
													]
												}
											]
										},
										{
											"name": "related",
											"item": [
												{
													"name": "Show User Related Information",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:user_id/related",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":user_id",
																"related"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"description": "(Required) The id of the user"
																}
															]
														}
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/related",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"related"
																	],
																	"variable": [
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"user_related\": {\n    \"assigned_tickets\": \"<integer>\",\n    \"ccd_tickets\": \"<integer>\",\n    \"organization_subscriptions\": \"<integer>\",\n    \"requested_tickets\": \"<integer>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "sessions",
											"item": [
												{
													"name": "{session_id}",
													"item": [
														{
															"name": "Show Session",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/sessions/:session_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"sessions",
																		":session_id"
																	],
																	"variable": [
																		{
																			"key": "user_id",
																			"value": "<integer>",
																			"description": "(Required) The id of the user"
																		},
																		{
																			"key": "session_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the session"
																		}
																	]
																},
																"description": "#### Allowed For\n\n* Admins, Agents, End users\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/sessions/:session_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"sessions",
																				":session_id"
																			],
																			"variable": [
																				{
																					"key": "user_id"
																				},
																				{
																					"key": "session_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"session\": [\n    {\n      \"id\": \"<integer>\",\n      \"authenticated_at\": \"<string>\",\n      \"last_seen_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"authenticated_at\": \"<string>\",\n      \"last_seen_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_id\": \"<integer>\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Delete Session",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/sessions/:session_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"sessions",
																		":session_id"
																	],
																	"variable": [
																		{
																			"key": "user_id",
																			"value": "<integer>",
																			"description": "(Required) The id of the user"
																		},
																		{
																			"key": "session_id",
																			"value": "<integer>",
																			"description": "(Required) The ID of the session"
																		}
																	]
																},
																"description": "#### Allowed For\n\n* Admins, Agents, End users\n"
															},
															"response": [
																{
																	"name": "No Content",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/:user_id/sessions/:session_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				":user_id",
																				"sessions",
																				":session_id"
																			],
																			"variable": [
																				{
																					"key": "user_id"
																				},
																				{
																					"key": "session_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": null
																}
															]
														}
													]
												},
												{
													"name": "Bulk Delete Sessions",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:user_id/sessions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":user_id",
																"sessions"
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"description": "(Required) The id of the user"
																}
															]
														},
														"description": "Deletes all the sessions for a user.\n\n#### Allowed For\n\n* Admins, Agents, End users\n"
													},
													"response": [
														{
															"name": "No Content",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/sessions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"sessions"
																	],
																	"variable": [
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														}
													]
												}
											]
										},
										{
											"name": "skips",
											"item": [
												{
													"name": "List Ticket Skips",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:user_id/skips?sort_order=desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":user_id",
																"skips"
															],
															"query": [
																{
																	"key": "sort_order",
																	"value": "desc",
																	"description": "Sort order. Defaults to \"asc\""
																}
															],
															"variable": [
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"description": "User ID of an agent"
																},
																{
																	"key": "ticket_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the ticket"
																}
															]
														},
														"description": "Archived tickets are not included in the response. See\n[About archived tickets](https://support.zendesk.com/hc/en-us/articles/203657756) in\nthe Support Help Center.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n* Agents with \"View only\" or higher reports permissions in Support.\n  These permissions are distinct from Explore permissions.\n* Agents retrieving their own skips\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/:user_id/skips?sort_order=desc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		":user_id",
																		"skips"
																	],
																	"query": [
																		{
																			"key": "sort_order",
																			"value": "desc",
																			"description": "Sort order. Defaults to \"asc\""
																		}
																	],
																	"variable": [
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"skips\": [\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"reason\": \"<string>\",\n      \"ticket\": {\n        \"requester_id\": \"<integer>\",\n        \"allow_attachments\": \"<boolean>\",\n        \"allow_channelback\": \"<boolean>\",\n        \"assignee_email\": \"<string>\",\n        \"assignee_id\": \"<integer>\",\n        \"attribute_value_ids\": \"<array>\",\n        \"brand_id\": \"<integer>\",\n        \"collaborator_ids\": \"<array>\",\n        \"collaborators\": [\n          {\n            \"email\": \"<email>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"email\": \"<email>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"comment\": {},\n        \"created_at\": \"<dateTime>\",\n        \"custom_fields\": \"<array>\",\n        \"custom_status_id\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"due_at\": \"<dateTime>\",\n        \"email_cc_ids\": \"<array>\",\n        \"email_ccs\": {},\n        \"external_id\": \"<string>\",\n        \"follower_ids\": \"<array>\",\n        \"followers\": {},\n        \"followup_ids\": \"<array>\",\n        \"forum_topic_id\": \"<integer>\",\n        \"from_messaging_channel\": \"<boolean>\",\n        \"group_id\": \"<integer>\",\n        \"has_incidents\": \"<boolean>\",\n        \"id\": \"<integer>\",\n        \"is_public\": \"<boolean>\",\n        \"macro_id\": \"<integer>\",\n        \"macro_ids\": \"<array>\",\n        \"metadata\": {},\n        \"organization_id\": \"<integer>\",\n        \"priority\": \"high\",\n        \"problem_id\": \"<integer>\",\n        \"raw_subject\": \"<string>\",\n        \"recipient\": \"<string>\",\n        \"requester\": {},\n        \"safe_update\": \"<boolean>\",\n        \"satisfaction_rating\": {\n          \"consequat_e\": -23296242,\n          \"Lorem_19\": true\n        },\n        \"sharing_agreement_ids\": \"<array>\",\n        \"status\": \"pending\",\n        \"subject\": \"<string>\",\n        \"submitter_id\": \"<integer>\",\n        \"tags\": \"<array>\",\n        \"ticket_form_id\": \"<integer>\",\n        \"type\": \"task\",\n        \"updated_at\": \"<dateTime>\",\n        \"updated_stamp\": \"<string>\",\n        \"url\": \"<string>\",\n        \"via\": {\n          \"channel\": \"<string>\",\n          \"source\": {\n            \"occaecat85\": \"ullamco magna\"\n          }\n        },\n        \"via_followup_source_id\": \"<integer>\",\n        \"via_id\": \"<integer>\",\n        \"voice_comment\": {}\n      },\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"user_id\": \"<integer>\"\n    },\n    {\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<integer>\",\n      \"reason\": \"<string>\",\n      \"ticket\": {\n        \"requester_id\": \"<integer>\",\n        \"allow_attachments\": \"<boolean>\",\n        \"allow_channelback\": \"<boolean>\",\n        \"assignee_email\": \"<string>\",\n        \"assignee_id\": \"<integer>\",\n        \"attribute_value_ids\": \"<array>\",\n        \"brand_id\": \"<integer>\",\n        \"collaborator_ids\": \"<array>\",\n        \"collaborators\": [\n          {\n            \"email\": \"<email>\",\n            \"name\": \"<string>\"\n          },\n          {\n            \"email\": \"<email>\",\n            \"name\": \"<string>\"\n          }\n        ],\n        \"comment\": {},\n        \"created_at\": \"<dateTime>\",\n        \"custom_fields\": \"<array>\",\n        \"custom_status_id\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"due_at\": \"<dateTime>\",\n        \"email_cc_ids\": \"<array>\",\n        \"email_ccs\": {},\n        \"external_id\": \"<string>\",\n        \"follower_ids\": \"<array>\",\n        \"followers\": {},\n        \"followup_ids\": \"<array>\",\n        \"forum_topic_id\": \"<integer>\",\n        \"from_messaging_channel\": \"<boolean>\",\n        \"group_id\": \"<integer>\",\n        \"has_incidents\": \"<boolean>\",\n        \"id\": \"<integer>\",\n        \"is_public\": \"<boolean>\",\n        \"macro_id\": \"<integer>\",\n        \"macro_ids\": \"<array>\",\n        \"metadata\": {},\n        \"organization_id\": \"<integer>\",\n        \"priority\": \"urgent\",\n        \"problem_id\": \"<integer>\",\n        \"raw_subject\": \"<string>\",\n        \"recipient\": \"<string>\",\n        \"requester\": {},\n        \"safe_update\": \"<boolean>\",\n        \"satisfaction_rating\": {\n          \"ut_fbf\": 63837616\n        },\n        \"sharing_agreement_ids\": \"<array>\",\n        \"status\": \"new\",\n        \"subject\": \"<string>\",\n        \"submitter_id\": \"<integer>\",\n        \"tags\": \"<array>\",\n        \"ticket_form_id\": \"<integer>\",\n        \"type\": \"question\",\n        \"updated_at\": \"<dateTime>\",\n        \"updated_stamp\": \"<string>\",\n        \"url\": \"<string>\",\n        \"via\": {\n          \"channel\": \"<string>\",\n          \"source\": {\n            \"mollit_2\": 27546367.47151111\n          }\n        },\n        \"via_followup_source_id\": \"<integer>\",\n        \"via_id\": \"<integer>\",\n        \"voice_comment\": {}\n      },\n      \"ticket_id\": \"<integer>\",\n      \"updated_at\": \"<dateTime>\",\n      \"user_id\": \"<integer>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Show User",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>",
															"description": "(Required) The id of the user"
														}
													]
												},
												"description": "#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"alias\": \"<string>\",\n    \"chat_only\": \"<boolean>\",\n    \"created_at\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"default_group_id\": \"<integer>\",\n    \"details\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"iana_time_zone\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"last_login_at\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"locale_id\": \"<integer>\",\n    \"moderator\": \"<boolean>\",\n    \"notes\": \"<string>\",\n    \"only_private_comments\": \"<boolean>\",\n    \"organization_id\": \"<integer>\",\n    \"phone\": \"<string>\",\n    \"photo\": {\n      \"reprehenderita\": true\n    },\n    \"remote_photo_url\": \"<string>\",\n    \"report_csv\": \"<boolean>\",\n    \"restricted_agent\": \"<boolean>\",\n    \"role\": \"<string>\",\n    \"role_type\": \"<integer>\",\n    \"shared\": \"<boolean>\",\n    \"shared_agent\": \"<boolean>\",\n    \"shared_phone_number\": \"<boolean>\",\n    \"signature\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tags\": \"<array>\",\n    \"ticket_restriction\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"two_factor_auth_enabled\": \"<boolean>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\",\n    \"user_fields\": {\n      \"nisi_7ec\": 54932786,\n      \"dolore_66\": -49692770.456187494\n    },\n    \"verified\": \"<boolean>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update User",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>",
															"description": "(Required) The id of the user"
														}
													]
												}
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"alias\": \"<string>\",\n    \"chat_only\": \"<boolean>\",\n    \"created_at\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"default_group_id\": \"<integer>\",\n    \"details\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"iana_time_zone\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"last_login_at\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"locale_id\": \"<integer>\",\n    \"moderator\": \"<boolean>\",\n    \"notes\": \"<string>\",\n    \"only_private_comments\": \"<boolean>\",\n    \"organization_id\": \"<integer>\",\n    \"phone\": \"<string>\",\n    \"photo\": {\n      \"reprehenderita\": true\n    },\n    \"remote_photo_url\": \"<string>\",\n    \"report_csv\": \"<boolean>\",\n    \"restricted_agent\": \"<boolean>\",\n    \"role\": \"<string>\",\n    \"role_type\": \"<integer>\",\n    \"shared\": \"<boolean>\",\n    \"shared_agent\": \"<boolean>\",\n    \"shared_phone_number\": \"<boolean>\",\n    \"signature\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tags\": \"<array>\",\n    \"ticket_restriction\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"two_factor_auth_enabled\": \"<boolean>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\",\n    \"user_fields\": {\n      \"nisi_7ec\": 54932786,\n      \"dolore_66\": -49692770.456187494\n    },\n    \"verified\": \"<boolean>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete User",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>",
															"description": "(Required) The id of the user"
														}
													]
												},
												"description": "Deletes the user and associated records from the account.\n\n**Warning**:\n\n* Deleted users are not recoverable.\n* Both agents and administrators can soft delete users in the agent interface in Zendesk Support. Agents with permission can delete end users, while administrators can delete all users except the account owner.\n\nTo comply with GDPR, a further step is needed. See [Permanently Delete User](/api-reference/ticketing/users/users/#permanently-delete-user).\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage end users or team members\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"alias\": \"<string>\",\n    \"chat_only\": \"<boolean>\",\n    \"created_at\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"default_group_id\": \"<integer>\",\n    \"details\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"iana_time_zone\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"last_login_at\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"locale_id\": \"<integer>\",\n    \"moderator\": \"<boolean>\",\n    \"notes\": \"<string>\",\n    \"only_private_comments\": \"<boolean>\",\n    \"organization_id\": \"<integer>\",\n    \"phone\": \"<string>\",\n    \"photo\": {\n      \"reprehenderita\": true\n    },\n    \"remote_photo_url\": \"<string>\",\n    \"report_csv\": \"<boolean>\",\n    \"restricted_agent\": \"<boolean>\",\n    \"role\": \"<string>\",\n    \"role_type\": \"<integer>\",\n    \"shared\": \"<boolean>\",\n    \"shared_agent\": \"<boolean>\",\n    \"shared_phone_number\": \"<boolean>\",\n    \"signature\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tags\": \"<array>\",\n    \"ticket_restriction\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"two_factor_auth_enabled\": \"<boolean>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\",\n    \"user_fields\": {\n      \"nisi_7ec\": 54932786,\n      \"dolore_66\": -49692770.456187494\n    },\n    \"verified\": \"<boolean>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "autocomplete",
									"item": [
										{
											"name": "Autocomplete Users",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/autocomplete?name=<string>&field_id=<string>&source=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														"autocomplete"
													],
													"query": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) The name to search for the user.\n"
														},
														{
															"key": "field_id",
															"value": "<string>",
															"description": "The id of a lookup relationship field.  The type of field is determined\nby the `source` param\n"
														},
														{
															"key": "source",
															"value": "<string>",
															"description": "If a `field_id` is provided, this specifies the type of the field.\nFor example, if the field is on a \"zen:user\", it references a field on a user\n"
														}
													]
												},
												"description": "Returns an array of users whose name starts with the value specified in the `name` parameter.\nIt only returns users with no foreign identities.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/autocomplete?name=<string>&field_id=<string>&source=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"autocomplete"
															],
															"query": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) The name to search for the user.\n"
																},
																{
																	"key": "field_id",
																	"value": "<string>",
																	"description": "The id of a lookup relationship field.  The type of field is determined\nby the `source` param\n"
																},
																{
																	"key": "source",
																	"value": "<string>",
																	"description": "If a `field_id` is provided, this specifies the type of the field.\nFor example, if the field is on a \"zen:user\", it references a field on a user\n"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"users\": [\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"eufc\": -4605729\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"mollit_61_\": false,\n        \"officiaca\": \"culpa reprehenderit amet\"\n      },\n      \"verified\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"labore_49\": false,\n        \"est_4bc\": false\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"laboredf\": false,\n        \"doloref\": -32691025\n      },\n      \"verified\": \"<boolean>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "count",
									"item": [
										{
											"name": "Count Users",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/count?role=agent&role[]=<string>&permission_set=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														"count"
													],
													"query": [
														{
															"key": "role",
															"value": "agent",
															"description": "Filters the results by role. Possible values are \"end-user\", \"agent\", or \"admin\"\n"
														},
														{
															"key": "role[]",
															"value": "<string>",
															"description": "Filters the results by more than one role using the format `role[]={role}&role[]={role}`\n"
														},
														{
															"key": "permission_set",
															"value": "<integer>",
															"description": "For custom roles which is available on the Enterprise plan and above. You can only filter by one role ID per request"
														}
													]
												},
												"description": "Returns an approximate count of users. If the count exceeds 100,000, it is updated every 24 hours.\n\nThe response includes a `refreshed_at` property in a `count` object that contains a timestamp indicating when the count was last updated.\n\n**Note**: When the count exceeds 100,000, the `refreshed_at` property may occasionally be null.\nThis indicates that the count is being updated in the background. The `count` object's `value` property is limited to 100,000 until the update is complete.\n\n#### Allowed For\n\n* Admins, Agents and Light Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/count?role=agent&role[]=<string>&permission_set=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"count"
															],
															"query": [
																{
																	"key": "role",
																	"value": "agent",
																	"description": "Filters the results by role. Possible values are \"end-user\", \"agent\", or \"admin\"\n"
																},
																{
																	"key": "role[]",
																	"value": "<string>",
																	"description": "Filters the results by more than one role using the format `role[]={role}&role[]={role}`\n"
																},
																{
																	"key": "permission_set",
																	"value": "<integer>",
																	"description": "For custom roles which is available on the Enterprise plan and above. You can only filter by one role ID per request"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": {\n    \"refreshed_at\": \"<string>\",\n    \"value\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "create_many",
									"item": [
										{
											"name": "Create Many Users",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"users\": [\n    {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"external_id\": \"<string>\",\n      \"identities\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"organization\": {\n        \"name\": \"<string>\"\n      },\n      \"organization_id\": \"<integer>\",\n      \"role\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"external_id\": \"<string>\",\n      \"identities\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"organization\": {\n        \"name\": \"<string>\"\n      },\n      \"organization_id\": \"<integer>\",\n      \"role\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/create_many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														"create_many"
													]
												},
												"description": "Accepts an array of up to 100 user objects.\n\n**Note**: To protect the data in your Zendesk account, bulk user imports are not enabled by default in Zendesk accounts. The account owner must contact [Zendesk Customer Support](https://support.zendesk.com/hc/en-us/articles/4408843597850) to enable the imports. A 403 Forbidden\nerror is returned if data imports are not enabled.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage end users or team members\n\n#### Specifying an organization\n\nYou can assign a user to an existing organization by setting an\n`organization_id` property in the user object.\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"users\": [\n    {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"external_id\": \"<string>\",\n      \"identities\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"organization\": {\n        \"name\": \"<string>\"\n      },\n      \"organization_id\": \"<integer>\",\n      \"role\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"external_id\": \"<string>\",\n      \"identities\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"organization\": {\n        \"name\": \"<string>\"\n      },\n      \"organization_id\": \"<integer>\",\n      \"role\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/create_many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"create_many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "create_or_update",
									"item": [
										{
											"name": "Create Or Update User",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/create_or_update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														"create_or_update"
													]
												},
												"description": "Creates a user if the user does not already exist, or updates an existing user\nidentified by e-mail address or external ID.\n\nIf you don't specify a role parameter, the new user is assigned the role of end user.\n\nIf you need to create users without sending out a verification email, include a `\"skip_verify_email\": true` property in the body.\n\n#### External ID Case Sensitivity\n\nWhen providing an external id to identify an existing user to update, the search for the user record is not case sensitive.\n\nHowever, if an existing user is found, the system will update the user's external id to match the case of the external id used to find the user.\n\n#### Response Status Code\n\n- If the user exists in Zendesk, a successful request returns a 200 status code with \"Location: /api/v2/users/{user_id}.json\".\n- If the user does not exist in Zendesk, a successful request returns a 201 status code with \"Location: /api/v2/users/{new_user_id}.json\".\n\n#### Rate Limit\n\nThe rate limit is 5 requests per minute for each unique end user profile. For example, you can make 10 calls per second as long as you make five calls for one user and five calls for another user.\nThe rate limiting mechanism behaves as described in\n[Usage Limits](/api-reference/introduction/rate-limits/#monitoring-your-request-activity)\nin the API introduction. Zendesk recommends that you obey the Retry-After header values.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage end users or team members\n"
											},
											"response": [
												{
													"name": "Successful response, when user exits",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/create_or_update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"create_or_update"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"alias\": \"<string>\",\n    \"chat_only\": \"<boolean>\",\n    \"created_at\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"default_group_id\": \"<integer>\",\n    \"details\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"iana_time_zone\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"last_login_at\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"locale_id\": \"<integer>\",\n    \"moderator\": \"<boolean>\",\n    \"notes\": \"<string>\",\n    \"only_private_comments\": \"<boolean>\",\n    \"organization_id\": \"<integer>\",\n    \"phone\": \"<string>\",\n    \"photo\": {\n      \"reprehenderita\": true\n    },\n    \"remote_photo_url\": \"<string>\",\n    \"report_csv\": \"<boolean>\",\n    \"restricted_agent\": \"<boolean>\",\n    \"role\": \"<string>\",\n    \"role_type\": \"<integer>\",\n    \"shared\": \"<boolean>\",\n    \"shared_agent\": \"<boolean>\",\n    \"shared_phone_number\": \"<boolean>\",\n    \"signature\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tags\": \"<array>\",\n    \"ticket_restriction\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"two_factor_auth_enabled\": \"<boolean>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\",\n    \"user_fields\": {\n      \"nisi_7ec\": 54932786,\n      \"dolore_66\": -49692770.456187494\n    },\n    \"verified\": \"<boolean>\"\n  }\n}"
												},
												{
													"name": "Created response, when user is new",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/create_or_update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"create_or_update"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"alias\": \"<string>\",\n    \"chat_only\": \"<boolean>\",\n    \"created_at\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"default_group_id\": \"<integer>\",\n    \"details\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"iana_time_zone\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"last_login_at\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"locale_id\": \"<integer>\",\n    \"moderator\": \"<boolean>\",\n    \"notes\": \"<string>\",\n    \"only_private_comments\": \"<boolean>\",\n    \"organization_id\": \"<integer>\",\n    \"phone\": \"<string>\",\n    \"photo\": {\n      \"reprehenderita\": true\n    },\n    \"remote_photo_url\": \"<string>\",\n    \"report_csv\": \"<boolean>\",\n    \"restricted_agent\": \"<boolean>\",\n    \"role\": \"<string>\",\n    \"role_type\": \"<integer>\",\n    \"shared\": \"<boolean>\",\n    \"shared_agent\": \"<boolean>\",\n    \"shared_phone_number\": \"<boolean>\",\n    \"signature\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tags\": \"<array>\",\n    \"ticket_restriction\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"two_factor_auth_enabled\": \"<boolean>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\",\n    \"user_fields\": {\n      \"nisi_7ec\": 54932786,\n      \"dolore_66\": -49692770.456187494\n    },\n    \"verified\": \"<boolean>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "create_or_update_many",
									"item": [
										{
											"name": "Create Or Update Many Users",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"users\": [\n    {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"external_id\": \"<string>\",\n      \"identities\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"organization\": {\n        \"name\": \"<string>\"\n      },\n      \"organization_id\": \"<integer>\",\n      \"role\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"external_id\": \"<string>\",\n      \"identities\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"organization\": {\n        \"name\": \"<string>\"\n      },\n      \"organization_id\": \"<integer>\",\n      \"role\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/create_or_update_many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														"create_or_update_many"
													]
												},
												"description": "Accepts an array of up to 100 user objects. For each user, the user is created if it does not\nalready exist, or the existing user is updated.\n\n**Note**: To protect the data in your Zendesk account, bulk user imports are not enabled by default in Zendesk accounts. The account owner must contact [Zendesk Customer Support](https://support.zendesk.com/hc/en-us/articles/4408843597850) to enable the imports. A 403 Forbidden\nerror is returned if data imports are not enabled.    \n\nEach individual user object can identify an existing user by `email` or by `external_id`.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage end users or team members\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"users\": [\n    {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"external_id\": \"<string>\",\n      \"identities\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"organization\": {\n        \"name\": \"<string>\"\n      },\n      \"organization_id\": \"<integer>\",\n      \"role\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"external_id\": \"<string>\",\n      \"identities\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"organization\": {\n        \"name\": \"<string>\"\n      },\n      \"organization_id\": \"<integer>\",\n      \"role\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/create_or_update_many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"create_or_update_many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Bulk Delete Users",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/destroy_many?ids=<string>&external_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														"destroy_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "Id of the users to delete. Comma separated"
														},
														{
															"key": "external_ids",
															"value": "<string>",
															"description": "External Id of the users to delete. Comma separated"
														}
													]
												},
												"description": "Accepts a comma-separated list of up to 100 user ids.\n\nThe request takes an `ids` or an `external_ids` query parameter.\n\n#### Allowed for\n\n- Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage end users or team members\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/destroy_many?ids=<string>&external_ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"destroy_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "Id of the users to delete. Comma separated"
																},
																{
																	"key": "external_ids",
																	"value": "<string>",
																	"description": "External Id of the users to delete. Comma separated"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "logout_many",
									"item": [
										{
											"name": "Logout many users",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/logout_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														"logout_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "Accepts a comma-separated list of up to 100 user ids.\n"
														}
													]
												},
												"description": "Accepts a comma-separated list of up to 100 user ids.\n\n#### Allowed For:\n\n* Admins\n"
											},
											"response": [
												{
													"name": "Accepted response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/logout_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"logout_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "Accepts a comma-separated list of up to 100 user ids.\n"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "<string>"
												}
											]
										}
									]
								},
								{
									"name": "me",
									"item": [
										{
											"name": "logout",
											"item": [
												{
													"name": "Delete the Authenticated Session",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/me/logout",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"me",
																"logout"
															]
														},
														"description": "Deletes the current session. In practice, this only works when using session auth for requests, such as client-side requests\nmade from a Zendesk app. When using OAuth or basic authentication, you don't have a current session so this endpoint has no effect.\n\n#### Allowed For\n\n* Admins, Agents, End users\n"
													},
													"response": [
														{
															"name": "No Content",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/me/logout",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		"me",
																		"logout"
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": null
														}
													]
												}
											]
										},
										{
											"name": "session",
											"item": [
												{
													"name": "renew",
													"item": [
														{
															"name": "Renew the current session",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/me/session/renew",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		"me",
																		"session",
																		"renew"
																	]
																},
																"description": "#### Allowed For\n\n* Admins, Agents, End users\n"
															},
															"response": [
																{
																	"name": "Success response",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v2/users/me/session/renew",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v2",
																				"users",
																				"me",
																				"session",
																				"renew"
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"authenticity_token\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Show the Currently Authenticated Session",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/me/session",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"me",
																"session"
															]
														},
														"description": "#### Allowed For\n\n* Admins, Agents, End users\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/users/me/session",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"users",
																		"me",
																		"session"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"session\": [\n    {\n      \"id\": \"<integer>\",\n      \"authenticated_at\": \"<string>\",\n      \"last_seen_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"authenticated_at\": \"<string>\",\n      \"last_seen_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_id\": \"<integer>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Show Self",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/me",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														"me"
													]
												},
												"description": "#### Allowed For\n\n* Anonymous users\n\n#### Authenticity Token\n\nThe endpoint returns an `authenticity_token`. Zendesk API calls made by end users from a Zendesk help center must include this token in the `X-CSRF-Token` HTTP header. This helps prevent [cross-site request forgery (CSRF)](https://en.wikipedia.org/wiki/Cross-site_request_forgery) attacks.\n\nFor an example using an authenticity token, see the AJAX request in the [Upgrading from Templating API v1](https://developer.zendesk.com/documentation/help_center/help-center-templates/v1#jquery) documentation.\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/me",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"me"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"alias\": \"<string>\",\n    \"chat_only\": \"<boolean>\",\n    \"created_at\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"default_group_id\": \"<integer>\",\n    \"details\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"iana_time_zone\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"last_login_at\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"locale_id\": \"<integer>\",\n    \"moderator\": \"<boolean>\",\n    \"notes\": \"<string>\",\n    \"only_private_comments\": \"<boolean>\",\n    \"organization_id\": \"<integer>\",\n    \"phone\": \"<string>\",\n    \"photo\": {\n      \"proident_0\": -56845857,\n      \"dolor_29a\": 22514769,\n      \"ad_6d4\": false\n    },\n    \"remote_photo_url\": \"<string>\",\n    \"report_csv\": \"<boolean>\",\n    \"restricted_agent\": \"<boolean>\",\n    \"role\": \"<string>\",\n    \"role_type\": \"<integer>\",\n    \"shared\": \"<boolean>\",\n    \"shared_agent\": \"<boolean>\",\n    \"shared_phone_number\": \"<boolean>\",\n    \"signature\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tags\": \"<array>\",\n    \"ticket_restriction\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"two_factor_auth_enabled\": \"<boolean>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\",\n    \"user_fields\": {\n      \"ind\": \"occaecat elit nostrud dolor ut\",\n      \"cillum_0\": \"pariatur exercitatio\"\n    },\n    \"verified\": \"<boolean>\",\n    \"authenticity_token\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "request_create",
									"item": [
										{
											"name": "Request User Create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/request_create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														"request_create"
													]
												},
												"description": "Sends the owner a reminder email to update their subscription so more agents can be created.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "description",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/request_create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"request_create"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "<string>"
												}
											]
										}
									]
								},
								{
									"name": "search",
									"item": [
										{
											"name": "Search Users",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/search?query=<string>&external_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														"search"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>",
															"description": "The `query` parameter supports the Zendesk search syntax for more advanced\nuser searches. It can specify a partial or full value of any\nuser property, including name, email address, notes, or phone. Example:\n`query=\"jdoe\"`.\nSee the [Search API](/api-reference/ticketing/ticket-management/search/).\n"
														},
														{
															"key": "external_id",
															"value": "<string>",
															"description": "The `external_id` parameter does not support the search syntax. It only accepts ids.\n"
														}
													]
												},
												"description": "Returns an array of users who meet the search criteria.\n\n#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n\n* Admins, Agents and Light Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/search?query=<string>&external_id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"search"
															],
															"query": [
																{
																	"key": "query",
																	"value": "<string>",
																	"description": "The `query` parameter supports the Zendesk search syntax for more advanced\nuser searches. It can specify a partial or full value of any\nuser property, including name, email address, notes, or phone. Example:\n`query=\"jdoe\"`.\nSee the [Search API](/api-reference/ticketing/ticket-management/search/).\n"
																},
																{
																	"key": "external_id",
																	"value": "<string>",
																	"description": "The `external_id` parameter does not support the search syntax. It only accepts ids.\n"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"users\": [\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"eufc\": -4605729\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"mollit_61_\": false,\n        \"officiaca\": \"culpa reprehenderit amet\"\n      },\n      \"verified\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"labore_49\": false,\n        \"est_4bc\": false\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"laboredf\": false,\n        \"doloref\": -32691025\n      },\n      \"verified\": \"<boolean>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "show_many",
									"item": [
										{
											"name": "Show Many Users",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/show_many?ids=<string>&external_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														"show_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "Accepts a comma-separated list of up to 100 user ids.\n"
														},
														{
															"key": "external_ids",
															"value": "<string>",
															"description": "Accepts a comma-separated list of up to 100 external ids.\n"
														}
													]
												},
												"description": "Accepts a comma-separated list of up to 100 user ids or external ids.\n\n#### Allowed For:\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/show_many?ids=<string>&external_ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"show_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "Accepts a comma-separated list of up to 100 user ids.\n"
																},
																{
																	"key": "external_ids",
																	"value": "<string>",
																	"description": "Accepts a comma-separated list of up to 100 external ids.\n"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"users\": [\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"eufc\": -4605729\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"mollit_61_\": false,\n        \"officiaca\": \"culpa reprehenderit amet\"\n      },\n      \"verified\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"labore_49\": false,\n        \"est_4bc\": false\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"laboredf\": false,\n        \"doloref\": -32691025\n      },\n      \"verified\": \"<boolean>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "update_many",
									"item": [
										{
											"name": "Update Many Users",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users/update_many?ids=<string>&external_ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users",
														"update_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "Id of the users to update. Comma separated"
														},
														{
															"key": "external_ids",
															"value": "<string>",
															"description": "External Id of the users to update. Comma separated"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/users/update_many?ids=<string>&external_ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"users",
																"update_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "Id of the users to update. Comma separated"
																},
																{
																	"key": "external_ids",
																	"value": "<string>",
																	"description": "External Id of the users to update. Comma separated"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"job_status\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\",\n    \"progress\": \"<integer>\",\n    \"results\": [\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"index\": \"<integer>\"\n      }\n    ],\n    \"status\": \"<string>\",\n    \"total\": \"<integer>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Users",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/users?role=agent&role[]=<string>&permission_set=<integer>&external_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											],
											"query": [
												{
													"key": "role",
													"value": "agent",
													"description": "Filters the results by role. Possible values are \"end-user\", \"agent\", or \"admin\"\n"
												},
												{
													"key": "role[]",
													"value": "<string>",
													"description": "Filters the results by more than one role using the format `role[]={role}&role[]={role}`\n"
												},
												{
													"key": "permission_set",
													"value": "<integer>",
													"description": "For custom roles which is available on the Enterprise plan and above. You can only filter by one role ID per request"
												},
												{
													"key": "external_id",
													"value": "<string>",
													"description": "List users by external id. External id has to be unique for each user under the same account."
												}
											]
										},
										"description": "#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Admins, Agents and Light Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/users?role=agent&role[]=<string>&permission_set=<integer>&external_id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users"
													],
													"query": [
														{
															"key": "role",
															"value": "agent",
															"description": "Filters the results by role. Possible values are \"end-user\", \"agent\", or \"admin\"\n"
														},
														{
															"key": "role[]",
															"value": "<string>",
															"description": "Filters the results by more than one role using the format `role[]={role}&role[]={role}`\n"
														},
														{
															"key": "permission_set",
															"value": "<integer>",
															"description": "For custom roles which is available on the Enterprise plan and above. You can only filter by one role ID per request"
														},
														{
															"key": "external_id",
															"value": "<string>",
															"description": "List users by external id. External id has to be unique for each user under the same account."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"users\": [\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"eufc\": -4605729\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"mollit_61_\": false,\n        \"officiaca\": \"culpa reprehenderit amet\"\n      },\n      \"verified\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"alias\": \"<string>\",\n      \"chat_only\": \"<boolean>\",\n      \"created_at\": \"<string>\",\n      \"custom_role_id\": \"<integer>\",\n      \"default_group_id\": \"<integer>\",\n      \"details\": \"<string>\",\n      \"email\": \"<string>\",\n      \"external_id\": \"<string>\",\n      \"iana_time_zone\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"last_login_at\": \"<string>\",\n      \"locale\": \"<string>\",\n      \"locale_id\": \"<integer>\",\n      \"moderator\": \"<boolean>\",\n      \"notes\": \"<string>\",\n      \"only_private_comments\": \"<boolean>\",\n      \"organization_id\": \"<integer>\",\n      \"phone\": \"<string>\",\n      \"photo\": {\n        \"labore_49\": false,\n        \"est_4bc\": false\n      },\n      \"remote_photo_url\": \"<string>\",\n      \"report_csv\": \"<boolean>\",\n      \"restricted_agent\": \"<boolean>\",\n      \"role\": \"<string>\",\n      \"role_type\": \"<integer>\",\n      \"shared\": \"<boolean>\",\n      \"shared_agent\": \"<boolean>\",\n      \"shared_phone_number\": \"<boolean>\",\n      \"signature\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tags\": \"<array>\",\n      \"ticket_restriction\": \"<string>\",\n      \"time_zone\": \"<string>\",\n      \"two_factor_auth_enabled\": \"<boolean>\",\n      \"updated_at\": \"<string>\",\n      \"url\": \"<string>\",\n      \"user_fields\": {\n        \"laboredf\": false,\n        \"doloref\": -32691025\n      },\n      \"verified\": \"<boolean>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create User",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Created response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"external_id\": \"<string>\",\n    \"identities\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"name\": \"<string>\"\n    },\n    \"organization_id\": \"<integer>\",\n    \"role\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"user\": {\n    \"name\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"alias\": \"<string>\",\n    \"chat_only\": \"<boolean>\",\n    \"created_at\": \"<string>\",\n    \"custom_role_id\": \"<integer>\",\n    \"default_group_id\": \"<integer>\",\n    \"details\": \"<string>\",\n    \"email\": \"<string>\",\n    \"external_id\": \"<string>\",\n    \"iana_time_zone\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"last_login_at\": \"<string>\",\n    \"locale\": \"<string>\",\n    \"locale_id\": \"<integer>\",\n    \"moderator\": \"<boolean>\",\n    \"notes\": \"<string>\",\n    \"only_private_comments\": \"<boolean>\",\n    \"organization_id\": \"<integer>\",\n    \"phone\": \"<string>\",\n    \"photo\": {\n      \"reprehenderita\": true\n    },\n    \"remote_photo_url\": \"<string>\",\n    \"report_csv\": \"<boolean>\",\n    \"restricted_agent\": \"<boolean>\",\n    \"role\": \"<string>\",\n    \"role_type\": \"<integer>\",\n    \"shared\": \"<boolean>\",\n    \"shared_agent\": \"<boolean>\",\n    \"shared_phone_number\": \"<boolean>\",\n    \"signature\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tags\": \"<array>\",\n    \"ticket_restriction\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"two_factor_auth_enabled\": \"<boolean>\",\n    \"updated_at\": \"<string>\",\n    \"url\": \"<string>\",\n    \"user_fields\": {\n      \"nisi_7ec\": 54932786,\n      \"dolore_66\": -49692770.456187494\n    },\n    \"verified\": \"<boolean>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "views",
							"item": [
								{
									"name": "{view_id}",
									"item": [
										{
											"name": "count",
											"item": [
												{
													"name": "Count Tickets in View",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/:view_id/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																":view_id",
																"count"
															],
															"variable": [
																{
																	"key": "view_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the view"
																}
															]
														},
														"description": "Returns the ticket count for a single view.\n\nThis endpoint is rate limited to 5 requests per minute, per view, per agent.\n\n#### View Counts\n\nThe view count endpoints, Count Tickets in View (this endpoint) and [Count Tickets in Views](#count-tickets-in-views), let you estimate how many tickets remain in a view without having to retrieve the entire view. They're designed to help estimate view size. From a business perspective, accuracy becomes less relevant as view size increases.\n\nTo ensure quality of service, these counts are cached more heavily as the number of tickets in a view grows. For a view with thousands of tickets, you can expect the count to be cached for 60-90 minutes. As a result, the count may not reflect the actual number of tickets in your view.\n\nView counts are represented as JSON objects with the following attributes:\n\n| Name            | Type        | Comment\n| --------------- | ------------| -------\n| view_id         | integer     | The id of the view\n| url             | string      | The API url of the count\n| value           | integer     | The cached number of tickets in the view. Can also be null if the system is loading and caching new data. Not to be confused with 0 tickets\n| pretty          | string      | A pretty-printed text approximation of the view count\n| fresh           | boolean     | false if the cached data is stale and the system is still loading and caching new data\n| active          | boolean     | Only active views if true, inactive views if false, all views if null.\n\n#### Example\n```js\n{\n  \"view_count\": {\n    \"view_id\": 25,\n    \"url\":     \"https://company.zendesk.com/api/v2/views/25/count.json\",\n    \"value\":   719,\n    \"pretty\":  \"~700\",\n    \"fresh\":   true\n  }\n}\n```\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/views/:view_id/count",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"views",
																		":view_id",
																		"count"
																	],
																	"variable": [
																		{
																			"key": "view_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"view_count\": {\n    \"active\": \"<boolean>\",\n    \"fresh\": \"<boolean>\",\n    \"pretty\": \"<string>\",\n    \"url\": \"<string>\",\n    \"value\": \"<integer>\",\n    \"view_id\": \"<integer>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "execute",
											"item": [
												{
													"name": "Execute View",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/:view_id/execute?sort_by=<string>&sort_order=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																":view_id",
																"execute"
															],
															"query": [
																{
																	"key": "sort_by",
																	"value": "<string>",
																	"description": "The ticket field used for sorting. This will either be a title or a custom field id."
																},
																{
																	"key": "sort_order",
																	"value": "<string>",
																	"description": "The direction the tickets are sorted. May be one of 'asc' or 'desc'"
																}
															],
															"variable": [
																{
																	"key": "view_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the view"
																}
															]
														},
														"description": "Returns the column titles and the rows of the specified view.\n\nThe `columns` array lists the view's column titles and includes only views parameters.\n\nThe `rows` array lists the values of each column for each ticket and includes parameters from both views and tickets. Though not displayed in the view, a partial ticket object is included with each row object.\n\n**Note**: To get the full ticket objects for a specified view, use [List Tickets from a View](#list-tickets-from-a-view).\n\nThis endpoint is rate limited to 5 requests per minute, per view, per agent.\n\nThe view execution system is designed for periodic rather than high-frequency API usage. In particular, views called very frequently may be cached by Zendesk. This means that the API client will still receive a result, but that result may have been computed at any time within the last 10 minutes.\n\nZendesk recommends using the Incremental Ticket Export endpoint to get the latest changes. You can call it more often, and it returns all the tickets that changed since the last poll. For details and rate limits, see [Incremental Exports](/api-reference/ticketing/ticket-management/incremental_exports/).\n\nView output sorting can be controlled by passing the `sort_by` and `sort_order` parameters in the format described in the table in [Preview Views](#preview-views).\n\n#### Allowed For\n\n* Agents\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/views/:view_id/execute?sort_by=<string>&sort_order=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"views",
																		":view_id",
																		"execute"
																	],
																	"query": [
																		{
																			"key": "sort_by",
																			"value": "<string>",
																			"description": "The ticket field used for sorting. This will either be a title or a custom field id."
																		},
																		{
																			"key": "sort_order",
																			"value": "<string>",
																			"description": "The direction the tickets are sorted. May be one of 'asc' or 'desc'"
																		}
																	],
																	"variable": [
																		{
																			"key": "view_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"columns\": [\n    {\n      \"auteb9\": false\n    },\n    {\n      \"Loremd\": \"enim ullamco\"\n    }\n  ],\n  \"groups\": [\n    {\n      \"ut_f11\": true\n    },\n    {\n      \"enim2\": true\n    }\n  ],\n  \"rows\": [\n    {\n      \"tempor_69\": \"esse sit\",\n      \"Duis_7\": false\n    },\n    {\n      \"sint__c3\": 57129508.98326087\n    }\n  ],\n  \"view\": {\n    \"active\": \"<boolean>\",\n    \"conditions\": {\n      \"sunt63\": \"aliquip dolor elit\"\n    },\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"execution\": {\n      \"laborume9a\": 1945075,\n      \"anim_d\": false,\n      \"laborum_04\": false\n    },\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"restriction\": {\n      \"occaecat_e7\": 23725454.940022454\n    },\n    \"title\": \"<string>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "export",
											"item": [
												{
													"name": "Export View",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/:view_id/export",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																":view_id",
																"export"
															],
															"variable": [
																{
																	"key": "view_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the view"
																}
															]
														},
														"description": "Returns the csv attachment of the specified view if possible. Enqueues a job to produce the csv if necessary.\n\n#### Allowed For\n\n* Agents\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/views/:view_id/export",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"views",
																		":view_id",
																		"export"
																	],
																	"variable": [
																		{
																			"key": "view_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"export\": {\n    \"status\": \"<string>\",\n    \"view_id\": \"<integer>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "tickets",
											"item": [
												{
													"name": "List Tickets From a View",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/:view_id/tickets?sort_by=<string>&sort_order=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																":view_id",
																"tickets"
															],
															"query": [
																{
																	"key": "sort_by",
																	"value": "<string>",
																	"description": "Sort or group the tickets by a column in the [View columns](#view-columns) table. The `subject` and `submitter` columns are not supported"
																},
																{
																	"key": "sort_order",
																	"value": "<string>",
																	"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
																}
															],
															"variable": [
																{
																	"key": "view_id",
																	"value": "<integer>",
																	"description": "(Required) The ID of the view"
																}
															]
														},
														"description": "#### Allowed For\n\n* Agents\n\n#### Pagination\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/views/:view_id/tickets?sort_by=<string>&sort_order=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"views",
																		":view_id",
																		"tickets"
																	],
																	"query": [
																		{
																			"key": "sort_by",
																			"value": "<string>",
																			"description": "Sort or group the tickets by a column in the [View columns](#view-columns) table. The `subject` and `submitter` columns are not supported"
																		},
																		{
																			"key": "sort_order",
																			"value": "<string>",
																			"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
																		}
																	],
																	"variable": [
																		{
																			"key": "view_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"tickets\": [\n    {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"urgent\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"reprehenderit6cd\": false\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"hold\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"question\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"in0\": -75111685,\n          \"Excepteur_254\": -23675577,\n          \"Excepteur6\": -33008582.759869486\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    },\n    {\n      \"requester_id\": \"<integer>\",\n      \"allow_attachments\": \"<boolean>\",\n      \"allow_channelback\": \"<boolean>\",\n      \"assignee_email\": \"<string>\",\n      \"assignee_id\": \"<integer>\",\n      \"attribute_value_ids\": \"<array>\",\n      \"brand_id\": \"<integer>\",\n      \"collaborator_ids\": \"<array>\",\n      \"collaborators\": [\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"email\": \"<email>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"comment\": {},\n      \"created_at\": \"<dateTime>\",\n      \"custom_fields\": \"<array>\",\n      \"custom_status_id\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"due_at\": \"<dateTime>\",\n      \"email_cc_ids\": \"<array>\",\n      \"email_ccs\": {},\n      \"external_id\": \"<string>\",\n      \"follower_ids\": \"<array>\",\n      \"followers\": {},\n      \"followup_ids\": \"<array>\",\n      \"forum_topic_id\": \"<integer>\",\n      \"from_messaging_channel\": \"<boolean>\",\n      \"group_id\": \"<integer>\",\n      \"has_incidents\": \"<boolean>\",\n      \"id\": \"<integer>\",\n      \"is_public\": \"<boolean>\",\n      \"macro_id\": \"<integer>\",\n      \"macro_ids\": \"<array>\",\n      \"metadata\": {},\n      \"organization_id\": \"<integer>\",\n      \"priority\": \"high\",\n      \"problem_id\": \"<integer>\",\n      \"raw_subject\": \"<string>\",\n      \"recipient\": \"<string>\",\n      \"requester\": {},\n      \"safe_update\": \"<boolean>\",\n      \"satisfaction_rating\": {\n        \"dolore35e\": 11932282.934943482,\n        \"laboris_ce\": \"velit esse\",\n        \"aute_8e\": true,\n        \"ina\": -86816496.92331019\n      },\n      \"sharing_agreement_ids\": \"<array>\",\n      \"status\": \"closed\",\n      \"subject\": \"<string>\",\n      \"submitter_id\": \"<integer>\",\n      \"tags\": \"<array>\",\n      \"ticket_form_id\": \"<integer>\",\n      \"type\": \"incident\",\n      \"updated_at\": \"<dateTime>\",\n      \"updated_stamp\": \"<string>\",\n      \"url\": \"<string>\",\n      \"via\": {\n        \"channel\": \"<string>\",\n        \"source\": {\n          \"et__4\": false,\n          \"velit655\": -67723031.43957758,\n          \"officia_e\": true,\n          \"eiusmod7e\": true\n        }\n      },\n      \"via_followup_source_id\": \"<integer>\",\n      \"via_id\": \"<integer>\",\n      \"voice_comment\": {}\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Show View",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views/:view_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views",
														":view_id"
													],
													"variable": [
														{
															"key": "view_id",
															"value": "<integer>",
															"description": "(Required) The ID of the view"
														}
													]
												},
												"description": "#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/:view_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																":view_id"
															],
															"variable": [
																{
																	"key": "view_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"columns\": [\n    {\n      \"auteb9\": false\n    },\n    {\n      \"Loremd\": \"enim ullamco\"\n    }\n  ],\n  \"groups\": [\n    {\n      \"ut_f11\": true\n    },\n    {\n      \"enim2\": true\n    }\n  ],\n  \"rows\": [\n    {\n      \"tempor_69\": \"esse sit\",\n      \"Duis_7\": false\n    },\n    {\n      \"sint__c3\": 57129508.98326087\n    }\n  ],\n  \"view\": {\n    \"active\": \"<boolean>\",\n    \"conditions\": {\n      \"sunt63\": \"aliquip dolor elit\"\n    },\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"execution\": {\n      \"laborume9a\": 1945075,\n      \"anim_d\": false,\n      \"laborum_04\": false\n    },\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"restriction\": {\n      \"occaecat_e7\": 23725454.940022454\n    },\n    \"title\": \"<string>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update View",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views/:view_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views",
														":view_id"
													],
													"variable": [
														{
															"key": "view_id",
															"value": "<integer>",
															"description": "(Required) The ID of the view"
														}
													]
												},
												"description": "#### Allowed For\n\n* Agents\n\n#### JSON Format\n\n The PUT request takes one property, a `view` object that lists the values to update. All properties are optional.\n\n**Note**: Updating a condition updates the containing array, clearing the other conditions. Include all your conditions when updating any condition.\n\n| Name        | Description\n| ----------- | -----------\n| title       | The title of the view\n| all         | An array of one or more conditions. A ticket must meet all the conditions to be included in the view. The PUT request replaces all existing conditions. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)\n| any         | An array of one or more conditions. A ticket must meet any of them to be included in the view. At least one `all` condition must be defined with the `any` conditions. The PUT request replaces all existing `any` conditions. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)\n| active      | Allowed values are true or false. Determines if the view is displayed or not\n| output      | An object that specifies the columns to display. Example: `\"output\": {\"columns\": [\"status\", \"description,\" \"priority\"]}`. See [View columns](#view-columns)\n| restriction | An object that describes who can access the view. To give all agents access to the view, omit this property\n\nThe `restriction` object has the following properties.\n\n| Name | Comment\n| ---- | -------\n| type | Allowed values are \"Group\" or \"User\"\n| id   | The numeric ID of a single group or user\n| ids  | The numeric IDs of a single or more groups. Recommended for \"Group\" `type`\n\nIf `type` is \"Group\", the `ids` property is the preferred method of specifying the group id or ids.\n\nYou can also update how items are sorted and grouped. See [View sorting](#view-sorting) in Create View.\n\n#### Example Request Body\n\n```js\n{\n  \"view\": {\n    \"title\": \"Code red tickets\",\n    \"restriction\": {\n      \"type\": \"Group\",\n      \"ids\": [10052, 10057, 10062, 10002]\n    },\n    \"all\": [\n      {\n        \"field\": \"priority\",\n        \"operator\": \"is\",\n        \"value\": \"urgent\"\n      }\n    ],\n    \"output\": {\n      \"columns\": [\"status\", \"requester\", \"assignee\", \"updated\"]\n    }\n  }\n}\n```\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/:view_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																":view_id"
															],
															"variable": [
																{
																	"key": "view_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"columns\": [\n    {\n      \"auteb9\": false\n    },\n    {\n      \"Loremd\": \"enim ullamco\"\n    }\n  ],\n  \"groups\": [\n    {\n      \"ut_f11\": true\n    },\n    {\n      \"enim2\": true\n    }\n  ],\n  \"rows\": [\n    {\n      \"tempor_69\": \"esse sit\",\n      \"Duis_7\": false\n    },\n    {\n      \"sint__c3\": 57129508.98326087\n    }\n  ],\n  \"view\": {\n    \"active\": \"<boolean>\",\n    \"conditions\": {\n      \"sunt63\": \"aliquip dolor elit\"\n    },\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"execution\": {\n      \"laborume9a\": 1945075,\n      \"anim_d\": false,\n      \"laborum_04\": false\n    },\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"restriction\": {\n      \"occaecat_e7\": 23725454.940022454\n    },\n    \"title\": \"<string>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete View",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views/:view_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views",
														":view_id"
													],
													"variable": [
														{
															"key": "view_id",
															"value": "<integer>",
															"description": "(Required) The ID of the view"
														}
													]
												},
												"description": "#### Allowed For\n* Agents\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/:view_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																":view_id"
															],
															"variable": [
																{
																	"key": "view_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "active",
									"item": [
										{
											"name": "List Active Views",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views/active?access=<string>&group_id=<integer>&sort_by=<string>&sort_order=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views",
														"active"
													],
													"query": [
														{
															"key": "access",
															"value": "<string>",
															"description": "Only views with given access. May be \"personal\", \"shared\", or \"account\""
														},
														{
															"key": "group_id",
															"value": "<integer>",
															"description": "Only views belonging to given group"
														},
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "Possible values are \"alphabetical\", \"created_at\", or \"updated_at\". Defaults to \"position\""
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
														}
													]
												},
												"description": "Lists active shared and personal views available to the current user.\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each view, if present\n| permissions      | The permissions for each view\n\n#### Pagination\n\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/active?access=<string>&group_id=<integer>&sort_by=<string>&sort_order=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																"active"
															],
															"query": [
																{
																	"key": "access",
																	"value": "<string>",
																	"description": "Only views with given access. May be \"personal\", \"shared\", or \"account\""
																},
																{
																	"key": "group_id",
																	"value": "<integer>",
																	"description": "Only views belonging to given group"
																},
																{
																	"key": "sort_by",
																	"value": "<string>",
																	"description": "Possible values are \"alphabetical\", \"created_at\", or \"updated_at\". Defaults to \"position\""
																},
																{
																	"key": "sort_order",
																	"value": "<string>",
																	"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"views\": [\n    {\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"qui_57\": -48385013,\n        \"deserunte6\": -13203063,\n        \"est_22\": -89400199.24595752\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"execution\": {\n        \"fugiatcc\": -74441945.99591127,\n        \"sint_f_f\": -38227951,\n        \"Ut6\": 59142880\n      },\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"essefcb\": true\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"culpab\": -42308561,\n        \"ad6\": true,\n        \"anim2d3\": -40176084.08436475\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"execution\": {\n        \"esse_c\": -53447956\n      },\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"nulla_2d\": \"in enim\",\n        \"adce\": true\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "compact",
									"item": [
										{
											"name": "List Views - Compact",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views/compact",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views",
														"compact"
													]
												},
												"description": "A compacted list of shared and personal views available to the current user. This endpoint never returns more than 32 records and does not respect the \"per_page\" option.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/compact",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																"compact"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"views\": [\n    {\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"qui_57\": -48385013,\n        \"deserunte6\": -13203063,\n        \"est_22\": -89400199.24595752\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"execution\": {\n        \"fugiatcc\": -74441945.99591127,\n        \"sint_f_f\": -38227951,\n        \"Ut6\": 59142880\n      },\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"essefcb\": true\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"culpab\": -42308561,\n        \"ad6\": true,\n        \"anim2d3\": -40176084.08436475\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"execution\": {\n        \"esse_c\": -53447956\n      },\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"nulla_2d\": \"in enim\",\n        \"adce\": true\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "count",
									"item": [
										{
											"name": "Count Views",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views",
														"count"
													]
												},
												"description": "Returns an approximate count of shared and personal views available to the current user. If the count exceeds 100,000, the count will return a cached result.  This cached result will update every 24 hours.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n* Agents"
											},
											"response": [
												{
													"name": "Count of views",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																"count"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": {\n    \"refreshed_at\": \"<dateTime>\",\n    \"value\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "count_many",
									"item": [
										{
											"name": "Count Tickets in Views",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views/count_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views",
														"count_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) List of view's ids separated by commas."
														}
													]
												},
												"description": "Returns the ticket count of each view in a list of views. Accepts up to 20 view ids per request. For the ticket count of a single view, see [Count Tickets in View](#count-tickets-in-view).\n\nOnly returns values for personal and shared views accessible to the user performing the request.\n\nThis endpoint is rate limited to 6 requests every 5 minutes.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/count_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																"count_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) List of view's ids separated by commas."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"view_counts\": [\n    {\n      \"active\": \"<boolean>\",\n      \"fresh\": \"<boolean>\",\n      \"pretty\": \"<string>\",\n      \"url\": \"<string>\",\n      \"value\": \"<integer>\",\n      \"view_id\": \"<integer>\"\n    },\n    {\n      \"active\": \"<boolean>\",\n      \"fresh\": \"<boolean>\",\n      \"pretty\": \"<string>\",\n      \"url\": \"<string>\",\n      \"value\": \"<integer>\",\n      \"view_id\": \"<integer>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Bulk Delete Views",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views/destroy_many?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views",
														"destroy_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) The IDs of the views to delete"
														}
													]
												},
												"description": "Deletes the views corresponding to the provided list of IDs.\n\n#### Allowed For\n* Agents\n"
											},
											"response": [
												{
													"name": "No Content response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/destroy_many?ids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																"destroy_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) The IDs of the views to delete"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "preview",
									"item": [
										{
											"name": "count",
											"item": [
												{
													"name": "Preview Ticket Count",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/preview/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																"preview",
																"count"
															]
														},
														"description": "Returns the ticket count for a single preview.\n\n#### Allowed For\n\n* Agents\n"
													},
													"response": [
														{
															"name": "Success response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v2/views/preview/count",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v2",
																		"views",
																		"preview",
																		"count"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"view_count\": {\n    \"active\": \"<boolean>\",\n    \"fresh\": \"<boolean>\",\n    \"pretty\": \"<string>\",\n    \"url\": \"<string>\",\n    \"value\": \"<integer>\",\n    \"view_id\": \"<integer>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Preview Views",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views/preview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views",
														"preview"
													]
												},
												"description": "You can preview views by constructing the conditions in the proper format and nesting them under the `view` property. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference/). The output can also be controlled by passing in any of the following parameters and nesting them under the `output` property.\n\n| Name            | Type    | Comment\n| --------------- | ------- | -------\n| columns         | Array   | The ticket fields to display. System fields are looked up by name, custom fields by title or id. See the [View columns](#view-columns) table\n| group_by        | String  | When present, the field by which the tickets are grouped\n| group_order     | String  | The direction the tickets are grouped. May be one of \"asc\" or \"desc\"\n| sort_order      | String  | The direction the tickets are sorted. May be one of \"asc\" or \"desc\"\n| sort_by         | String  | The ticket field used for sorting. This will either be a title or a custom field id.\n\nThis endpoint is rate limited to 5 requests per minute, per view, per agent.\n\n#### Allowed For\n\n* Agents\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/preview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																"preview"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"columns\": [\n    {\n      \"auteb9\": false\n    },\n    {\n      \"Loremd\": \"enim ullamco\"\n    }\n  ],\n  \"groups\": [\n    {\n      \"ut_f11\": true\n    },\n    {\n      \"enim2\": true\n    }\n  ],\n  \"rows\": [\n    {\n      \"tempor_69\": \"esse sit\",\n      \"Duis_7\": false\n    },\n    {\n      \"sint__c3\": 57129508.98326087\n    }\n  ],\n  \"view\": {\n    \"active\": \"<boolean>\",\n    \"conditions\": {\n      \"sunt63\": \"aliquip dolor elit\"\n    },\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"execution\": {\n      \"laborume9a\": 1945075,\n      \"anim_d\": false,\n      \"laborum_04\": false\n    },\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"restriction\": {\n      \"occaecat_e7\": 23725454.940022454\n    },\n    \"title\": \"<string>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "search",
									"item": [
										{
											"name": "Search Views",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views/search?query=<string>&access=<string>&active=<boolean>&group_id=<integer>&sort_by=<string>&sort_order=<string>&include=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views",
														"search"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>",
															"description": "(Required) Query string used to find all views with matching title"
														},
														{
															"key": "access",
															"value": "<string>",
															"description": "Filter views by access. May be \"personal\", \"shared\", or \"account\""
														},
														{
															"key": "active",
															"value": "<boolean>",
															"description": "Filter by active views if true or inactive views if false"
														},
														{
															"key": "group_id",
															"value": "<integer>",
															"description": "Filter views by group"
														},
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "Possible values are \"alphabetical\", \"created_at\", \"updated_at\", and \"position\". If unspecified, the views are sorted by relevance"
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
														},
														{
															"key": "include",
															"value": "<string>",
															"description": "A sideload to include in the response. See [Sideloads](#sideloads-3)"
														}
													]
												},
												"description": "#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported. For more information, see [Side-loading](/documentation/ticketing/using-the-zendesk-api/side_loading/).\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each view, if present\n| permissions      | The permissions for each view\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/search?query=<string>&access=<string>&active=<boolean>&group_id=<integer>&sort_by=<string>&sort_order=<string>&include=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																"search"
															],
															"query": [
																{
																	"key": "query",
																	"value": "<string>",
																	"description": "(Required) Query string used to find all views with matching title"
																},
																{
																	"key": "access",
																	"value": "<string>",
																	"description": "Filter views by access. May be \"personal\", \"shared\", or \"account\""
																},
																{
																	"key": "active",
																	"value": "<boolean>",
																	"description": "Filter by active views if true or inactive views if false"
																},
																{
																	"key": "group_id",
																	"value": "<integer>",
																	"description": "Filter views by group"
																},
																{
																	"key": "sort_by",
																	"value": "<string>",
																	"description": "Possible values are \"alphabetical\", \"created_at\", \"updated_at\", and \"position\". If unspecified, the views are sorted by relevance"
																},
																{
																	"key": "sort_order",
																	"value": "<string>",
																	"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
																},
																{
																	"key": "include",
																	"value": "<string>",
																	"description": "A sideload to include in the response. See [Sideloads](#sideloads-3)"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"views\": [\n    {\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"qui_57\": -48385013,\n        \"deserunte6\": -13203063,\n        \"est_22\": -89400199.24595752\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"execution\": {\n        \"fugiatcc\": -74441945.99591127,\n        \"sint_f_f\": -38227951,\n        \"Ut6\": 59142880\n      },\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"essefcb\": true\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"culpab\": -42308561,\n        \"ad6\": true,\n        \"anim2d3\": -40176084.08436475\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"execution\": {\n        \"esse_c\": -53447956\n      },\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"nulla_2d\": \"in enim\",\n        \"adce\": true\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "show_many",
									"item": [
										{
											"name": "List Views By ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views/show_many?ids=<string>&active=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views",
														"show_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "(Required) List of view's ids separated by commas."
														},
														{
															"key": "active",
															"value": "<boolean>",
															"description": "Only active views if true, inactive views if false"
														}
													]
												},
												"description": "#### Allowed For\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each view, if present\n| permissions      | The permissions for each view\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/show_many?ids=<string>&active=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																"show_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "(Required) List of view's ids separated by commas."
																},
																{
																	"key": "active",
																	"value": "<boolean>",
																	"description": "Only active views if true, inactive views if false"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"views\": [\n    {\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"qui_57\": -48385013,\n        \"deserunte6\": -13203063,\n        \"est_22\": -89400199.24595752\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"execution\": {\n        \"fugiatcc\": -74441945.99591127,\n        \"sint_f_f\": -38227951,\n        \"Ut6\": 59142880\n      },\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"essefcb\": true\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"culpab\": -42308561,\n        \"ad6\": true,\n        \"anim2d3\": -40176084.08436475\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"execution\": {\n        \"esse_c\": -53447956\n      },\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"nulla_2d\": \"in enim\",\n        \"adce\": true\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "update_many",
									"item": [
										{
											"name": "Update Many Views",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views/update_many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views",
														"update_many"
													]
												},
												"description": "#### Allowed For\n\n* Agents\n\n#### Request Parameters\n\nThe PUT request expects a `views` object that lists the views to update.\n\nEach view may have the following properties:\n\n| Name     | Mandatory | Description\n| -------- | --------- | -----------\n| id       | yes       | The ID of the view to update\n| position | no        | The new position of the view\n| active   | no        | The active status of the view (true or false)\n\n#### Example Request Body\n\n```js\n{\n  \"views\": [\n    {\"id\": 25, \"position\": 3},\n    {\"id\": 23, \"position\": 5},\n    {\"id\": 27, \"position\": 9},\n    {\"id\": 22, \"position\": 7}\n  ]\n}\n```\n"
											},
											"response": [
												{
													"name": "Success response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/views/update_many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"views",
																"update_many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"views\": [\n    {\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"qui_57\": -48385013,\n        \"deserunte6\": -13203063,\n        \"est_22\": -89400199.24595752\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"execution\": {\n        \"fugiatcc\": -74441945.99591127,\n        \"sint_f_f\": -38227951,\n        \"Ut6\": 59142880\n      },\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"essefcb\": true\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"culpab\": -42308561,\n        \"ad6\": true,\n        \"anim2d3\": -40176084.08436475\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"execution\": {\n        \"esse_c\": -53447956\n      },\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"nulla_2d\": \"in enim\",\n        \"adce\": true\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Views",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/views?access=<string>&active=<boolean>&group_id=<integer>&sort_by=<string>&sort_order=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"views"
											],
											"query": [
												{
													"key": "access",
													"value": "<string>",
													"description": "Only views with given access. May be \"personal\", \"shared\", or \"account\""
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Only active views if true, inactive views if false"
												},
												{
													"key": "group_id",
													"value": "<integer>",
													"description": "Only views belonging to given group"
												},
												{
													"key": "sort_by",
													"value": "<string>",
													"description": "Possible values are \"alphabetical\", \"created_at\", or \"updated_at\". Defaults to \"position\""
												},
												{
													"key": "sort_order",
													"value": "<string>",
													"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
												}
											]
										},
										"description": "Lists shared and personal views available to the current user.\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each view, if present\n| permissions      | The permissions for each view\n\n#### Pagination\n\n- Cursor pagination (recommended, but only sorts by `created_at`)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views?access=<string>&active=<boolean>&group_id=<integer>&sort_by=<string>&sort_order=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views"
													],
													"query": [
														{
															"key": "access",
															"value": "<string>",
															"description": "Only views with given access. May be \"personal\", \"shared\", or \"account\""
														},
														{
															"key": "active",
															"value": "<boolean>",
															"description": "Only active views if true, inactive views if false"
														},
														{
															"key": "group_id",
															"value": "<integer>",
															"description": "Only views belonging to given group"
														},
														{
															"key": "sort_by",
															"value": "<string>",
															"description": "Possible values are \"alphabetical\", \"created_at\", or \"updated_at\". Defaults to \"position\""
														},
														{
															"key": "sort_order",
															"value": "<string>",
															"description": "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\",\n  \"views\": [\n    {\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"qui_57\": -48385013,\n        \"deserunte6\": -13203063,\n        \"est_22\": -89400199.24595752\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"execution\": {\n        \"fugiatcc\": -74441945.99591127,\n        \"sint_f_f\": -38227951,\n        \"Ut6\": 59142880\n      },\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"essefcb\": true\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"active\": \"<boolean>\",\n      \"conditions\": {\n        \"culpab\": -42308561,\n        \"ad6\": true,\n        \"anim2d3\": -40176084.08436475\n      },\n      \"created_at\": \"<dateTime>\",\n      \"default\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"execution\": {\n        \"esse_c\": -53447956\n      },\n      \"id\": \"<integer>\",\n      \"position\": \"<integer>\",\n      \"restriction\": {\n        \"nulla_2d\": \"in enim\",\n        \"adce\": true\n      },\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create View",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/views",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"views"
											]
										},
										"description": "#### Allowed For\n\n* Agents\n\n#### JSON Format\n\nThe JSON format consists of one property, a `view` object that lists the values to set when the view is created.\n\n**Note**: The request must include at least one condition in the `all` array that checks one of the following fields: `status`, `type`, `group_id`, `assignee_id`, or `requester_id`.\n\n| Name        | Description\n| ----------- | -----------\n| title       | Required. The title of the view\n| all         | Required. An array of one or more conditions. A ticket must meet all of them to be included in the view. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)\n| any         | An array of one or more conditions. A ticket must meet any of them to be included in the view. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)\n| description | The description of the view\n| active      | Allowed values are true or false. Determines if the view is displayed or not\n| output      | An object that specifies the columns to display. Example: `\"output\": {\"columns\": [\"status\", \"description\", \"priority\"]}`. See [View columns](#view-columns)\n| restriction | An object that describes who can access the view. To give all agents access to the view, omit this property\n\nThe `restriction` object has the following properties.\n\n| Name | Comment\n| ---- | -------\n| type | Allowed values are \"Group\" or \"User\"\n| id   | The numeric ID of a single group or user\n| ids  | The numeric IDs of a single or more groups. Recommended for \"Group\" `type`\n\nIf `type` is \"Group\", the `ids` property is the preferred method of specifying the group id or ids.\n\n#### Example Request Body\n\n```js\n{\n  \"view\": {\n    \"title\": \"Kelly's tickets\",\n    \"raw_title\": \"{{dc.tickets_assigned_to_kelly}}\",\n    \"description\": \"Tickets that are assigned to Kelly\",\n    \"active\": true,\n    \"position\": 3,\n    \"restriction\": {\n      \"type\": \"User\",\n      \"id\": \"213977756\"\n    },\n    \"all\": [\n      {\n        \"field\": \"status\",\n        \"operator\": \"less_than\",\n        \"value\": \"solved\"\n      },\n      {\n        \"field\": \"group_id\",\n        \"operator\": \"is\",\n        \"value\": \"24000932\"\n      },\n      {\n        \"field\": \"custom_fields_360011872073\",\n        \"operator\": \"is\",\n        \"value\": \"Canada\"\n      },\n      ...\n    ],\n    \"output\": {\n      \"columns\": [\"status\", \"requester\", \"assignee\"],\n      \"group_by\": \"assignee\",\n      \"group_order\": \"desc\",\n      \"sort_by\": \"status\",\n      \"sort_order\": \"desc\"\n    }\n  }\n}\n```\n\n#### View columns\n\nThe `output` request parameter lets you specify what columns to include in the view in the agent interface. Example: `\"output\": {\"columns\": [\"status\", \"description\", \"priority\"]}`. The following table lists possible columns for views in the agent UI and the corresponding values in the `columns` array.\n\nFor custom fields, specify the id of the custom field in the `columns` array.\n\nYou can specify a total of 10 columns to a view.\n\n| View column title in UI     | Value                |\n|---------------------------- | -------------------- |\n| Assigned                    | `assigned`           |\n| Assignee                    | `assignee`           |\n| Due Date                    | `due_date`           |\n| Group                       | `group`              |\n| ID                          | `nice_id`            |\n| Updated                     | `updated`            |\n| Assignee updated            | `updated_assignee`   |\n| Requester updated           | `updated_requester`  |\n| Updater                     | `updated_by_type`    |\n| Organization                | `organization`       |\n| Priority                    | `priority`           |\n| Requested                   | `created`            |\n| Requester                   | `requester`          |\n| Requester language          | `locale_id`          |\n| Satisfaction                | `satisfaction_score` |\n| Solved                      | `solved`             |\n| Status category             | `status`             |\n| Subject                     | `description`        |\n| Submitter                   | `submitter`          |\n| Ticket form                 | `ticket_form`        |\n| Type                        | `type`               |\n| Brand                       | `brand`              |\n| Ticket status               | `custom_status_id`   |\n\n#### View sorting\n\nYou can group and sort items in the view by adding items to the `output` parameter:\n\n| Attribute                   | Description\n|-----------------------------| -----------\n| `group_by`, `sort_by`       | Sort or group the tickets by a column in the [View columns](#view-columns) table. The `subject` and `submitter` columns are not supported\n| `group_order`, `sort_order` | Either \"asc\" or \"desc\"\n"
									},
									"response": [
										{
											"name": "Success response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/views",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"views"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"columns\": [\n    {\n      \"auteb9\": false\n    },\n    {\n      \"Loremd\": \"enim ullamco\"\n    }\n  ],\n  \"groups\": [\n    {\n      \"ut_f11\": true\n    },\n    {\n      \"enim2\": true\n    }\n  ],\n  \"rows\": [\n    {\n      \"tempor_69\": \"esse sit\",\n      \"Duis_7\": false\n    },\n    {\n      \"sint__c3\": 57129508.98326087\n    }\n  ],\n  \"view\": {\n    \"active\": \"<boolean>\",\n    \"conditions\": {\n      \"sunt63\": \"aliquip dolor elit\"\n    },\n    \"created_at\": \"<dateTime>\",\n    \"default\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"execution\": {\n      \"laborume9a\": 1945075,\n      \"anim_d\": false,\n      \"laborum_04\": false\n    },\n    \"id\": \"<integer>\",\n    \"position\": \"<integer>\",\n    \"restriction\": {\n      \"occaecat_e7\": 23725454.940022454\n    },\n    \"title\": \"<string>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "workspaces",
							"item": [
								{
									"name": "{workspace_id}",
									"item": [
										{
											"name": "Show Workspace",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/workspaces/:workspace_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"workspaces",
														":workspace_id"
													],
													"variable": [
														{
															"key": "workspace_id",
															"value": "<integer>",
															"description": "(Required) The id of the workspace"
														}
													]
												},
												"description": "#### Allowed For\n* Admins\n"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/workspaces/:workspace_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"workspaces",
																":workspace_id"
															],
															"variable": [
																{
																	"key": "workspace_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"workspace\": {\n    \"activated\": \"<boolean>\",\n    \"apps\": [\n      {\n        \"Loremb53\": \"aliqua velit in\",\n        \"culpa_01\": \"officia\"\n      },\n      {\n        \"est_455\": 84178696,\n        \"ipsum5e4\": false\n      }\n    ],\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"created_at\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"macro_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"macros\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"position\": \"<integer>\",\n    \"prefer_workspace_app_order\": \"<boolean>\",\n    \"selected_macros\": [\n      {\n        \"actions\": [\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"title\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"restriction\": {\n          \"do_0\": \"commodo in nisi eu\",\n          \"anim8\": \"pariatur exercitation\",\n          \"ipsum__6\": \"adipisicing incididunt ipsum eiusmod\"\n        },\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\",\n        \"app_installation\": \"<string>\",\n        \"categories\": \"<string>\",\n        \"permissions\": \"<string>\",\n        \"usage_1h\": \"<integer>\",\n        \"usage_7d\": \"<integer>\",\n        \"usage_24h\": \"<integer>\",\n        \"usage_30d\": \"<integer>\"\n      },\n      {\n        \"actions\": [\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"title\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"restriction\": {\n          \"ut06\": true\n        },\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\",\n        \"app_installation\": \"<string>\",\n        \"categories\": \"<string>\",\n        \"permissions\": \"<string>\",\n        \"usage_1h\": \"<integer>\",\n        \"usage_7d\": \"<integer>\",\n        \"usage_24h\": \"<integer>\",\n        \"usage_30d\": \"<integer>\"\n      }\n    ],\n    \"ticket_form_id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update Workspace",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workspace\": {\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"description\": \"<string>\",\n    \"macros\": [\n      \"<number>\",\n      \"<number>\"\n    ],\n    \"ticket_form_id\": \"<number>\",\n    \"title\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/workspaces/:workspace_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"workspaces",
														":workspace_id"
													],
													"variable": [
														{
															"key": "workspace_id",
															"value": "<integer>",
															"description": "(Required) The id of the workspace"
														}
													]
												},
												"description": "#### Allowed For\n* Admins"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workspace\": {\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"description\": \"<string>\",\n    \"macros\": [\n      \"<number>\",\n      \"<number>\"\n    ],\n    \"ticket_form_id\": \"<number>\",\n    \"title\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/workspaces/:workspace_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"workspaces",
																":workspace_id"
															],
															"variable": [
																{
																	"key": "workspace_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"workspace\": {\n    \"activated\": \"<boolean>\",\n    \"apps\": [\n      {\n        \"Loremb53\": \"aliqua velit in\",\n        \"culpa_01\": \"officia\"\n      },\n      {\n        \"est_455\": 84178696,\n        \"ipsum5e4\": false\n      }\n    ],\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"created_at\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"macro_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"macros\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"position\": \"<integer>\",\n    \"prefer_workspace_app_order\": \"<boolean>\",\n    \"selected_macros\": [\n      {\n        \"actions\": [\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"title\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"restriction\": {\n          \"do_0\": \"commodo in nisi eu\",\n          \"anim8\": \"pariatur exercitation\",\n          \"ipsum__6\": \"adipisicing incididunt ipsum eiusmod\"\n        },\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\",\n        \"app_installation\": \"<string>\",\n        \"categories\": \"<string>\",\n        \"permissions\": \"<string>\",\n        \"usage_1h\": \"<integer>\",\n        \"usage_7d\": \"<integer>\",\n        \"usage_24h\": \"<integer>\",\n        \"usage_30d\": \"<integer>\"\n      },\n      {\n        \"actions\": [\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"title\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"restriction\": {\n          \"ut06\": true\n        },\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\",\n        \"app_installation\": \"<string>\",\n        \"categories\": \"<string>\",\n        \"permissions\": \"<string>\",\n        \"usage_1h\": \"<integer>\",\n        \"usage_7d\": \"<integer>\",\n        \"usage_24h\": \"<integer>\",\n        \"usage_30d\": \"<integer>\"\n      }\n    ],\n    \"ticket_form_id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Workspace",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v2/workspaces/:workspace_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"workspaces",
														":workspace_id"
													],
													"variable": [
														{
															"key": "workspace_id",
															"value": "<integer>",
															"description": "(Required) The id of the workspace"
														}
													]
												},
												"description": "#### Allowed For\n* Admins\n"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/workspaces/:workspace_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"workspaces",
																":workspace_id"
															],
															"variable": [
																{
																	"key": "workspace_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": null
												}
											]
										}
									]
								},
								{
									"name": "destroy_many",
									"item": [
										{
											"name": "Bulk Delete Workspaces",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/workspaces/destroy_many?ids=<integer>&ids=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"workspaces",
														"destroy_many"
													],
													"query": [
														{
															"key": "ids",
															"value": "<integer>",
															"description": "(Required) The ids of the workspaces to delete"
														},
														{
															"key": "ids",
															"value": "<integer>",
															"description": "(Required) The ids of the workspaces to delete"
														}
													]
												},
												"description": "#### Allowed For\n* Admins\n"
											},
											"response": [
												{
													"name": "Succesful response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v2/workspaces/destroy_many?ids=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"workspaces",
																"destroy_many"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<integer>",
																	"description": "(Required) The ids of the workspaces to delete"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "<string>"
												}
											]
										}
									]
								},
								{
									"name": "reorder",
									"item": [
										{
											"name": "Reorder Workspaces",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"<number>\",\n    \"<number>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/workspaces/reorder",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"workspaces",
														"reorder"
													]
												},
												"description": "#### Allowed For\n* Admins\n"
											},
											"response": [
												{
													"name": "Succesful response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ids\": [\n    \"<number>\",\n    \"<number>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v2/workspaces/reorder",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v2",
																"workspaces",
																"reorder"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "<string>"
												}
											]
										}
									]
								},
								{
									"name": "List Workspaces",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v2/workspaces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"workspaces"
											]
										},
										"description": "#### Allowed For\n\n* Admins, Agents\n"
									},
									"response": [
										{
											"name": "Success Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v2/workspaces",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"workspaces"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"workspaces\": [\n    {\n      \"activated\": \"<boolean>\",\n      \"apps\": [\n        {\n          \"adipisicing3\": false,\n          \"elit_0\": \"ut non quis\"\n        },\n        {\n          \"ina2\": \"laborum\",\n          \"utf\": 78620295.3832789\n        }\n      ],\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"macro_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"macros\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"position\": \"<integer>\",\n      \"prefer_workspace_app_order\": \"<boolean>\",\n      \"selected_macros\": [\n        {\n          \"actions\": [\n            {\n              \"field\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"title\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"restriction\": {\n            \"ex_084\": 67157376.20488107\n          },\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\",\n          \"app_installation\": \"<string>\",\n          \"categories\": \"<string>\",\n          \"permissions\": \"<string>\",\n          \"usage_1h\": \"<integer>\",\n          \"usage_7d\": \"<integer>\",\n          \"usage_24h\": \"<integer>\",\n          \"usage_30d\": \"<integer>\"\n        },\n        {\n          \"actions\": [\n            {\n              \"field\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"title\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"restriction\": {\n            \"tempor__c\": false,\n            \"aute2eb\": 60137896,\n            \"labore_3\": \"labore ullamco\",\n            \"ut_ba\": true,\n            \"adipisicing_a7\": -20350626\n          },\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\",\n          \"app_installation\": \"<string>\",\n          \"categories\": \"<string>\",\n          \"permissions\": \"<string>\",\n          \"usage_1h\": \"<integer>\",\n          \"usage_7d\": \"<integer>\",\n          \"usage_24h\": \"<integer>\",\n          \"usage_30d\": \"<integer>\"\n        }\n      ],\n      \"ticket_form_id\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    },\n    {\n      \"activated\": \"<boolean>\",\n      \"apps\": [\n        {\n          \"esse_1ab\": \"laborum\",\n          \"in_9_f\": \"nisi sit in fugiat\",\n          \"dolor_\": \"labore aliqua\"\n        },\n        {\n          \"proident_4\": \"in Duis\",\n          \"magna_e2\": -95315859.22612397,\n          \"aliquip_d50\": \"nostrud sunt u\"\n        }\n      ],\n      \"conditions\": {\n        \"all\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"any\": [\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      \"created_at\": \"<dateTime>\",\n      \"description\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"macro_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"macros\": [\n        \"<integer>\",\n        \"<integer>\"\n      ],\n      \"position\": \"<integer>\",\n      \"prefer_workspace_app_order\": \"<boolean>\",\n      \"selected_macros\": [\n        {\n          \"actions\": [\n            {\n              \"field\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"title\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"restriction\": {\n            \"ut_b\": 48773187,\n            \"etbfc\": 160923.28168402612\n          },\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\",\n          \"app_installation\": \"<string>\",\n          \"categories\": \"<string>\",\n          \"permissions\": \"<string>\",\n          \"usage_1h\": \"<integer>\",\n          \"usage_7d\": \"<integer>\",\n          \"usage_24h\": \"<integer>\",\n          \"usage_30d\": \"<integer>\"\n        },\n        {\n          \"actions\": [\n            {\n              \"field\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"field\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"title\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"created_at\": \"<dateTime>\",\n          \"default\": \"<boolean>\",\n          \"description\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"position\": \"<integer>\",\n          \"restriction\": {\n            \"ametbe9\": -3482875\n          },\n          \"updated_at\": \"<dateTime>\",\n          \"url\": \"<string>\",\n          \"app_installation\": \"<string>\",\n          \"categories\": \"<string>\",\n          \"permissions\": \"<string>\",\n          \"usage_1h\": \"<integer>\",\n          \"usage_7d\": \"<integer>\",\n          \"usage_24h\": \"<integer>\",\n          \"usage_30d\": \"<integer>\"\n        }\n      ],\n      \"ticket_form_id\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"updated_at\": \"<dateTime>\",\n      \"url\": \"<string>\"\n    }\n  ],\n  \"count\": \"<integer>\",\n  \"next_page\": \"<string>\",\n  \"previous_page\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create Workspace",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workspace\": {\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"description\": \"<string>\",\n    \"macros\": [\n      \"<number>\",\n      \"<number>\"\n    ],\n    \"ticket_form_id\": \"<number>\",\n    \"title\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/workspaces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"workspaces"
											]
										},
										"description": "#### Allowed For\n\n* Admins\n"
									},
									"response": [
										{
											"name": "Created workspace",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workspace\": {\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"description\": \"<string>\",\n    \"macros\": [\n      \"<number>\",\n      \"<number>\"\n    ],\n    \"ticket_form_id\": \"<number>\",\n    \"title\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v2/workspaces",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v2",
														"workspaces"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"workspace\": {\n    \"activated\": \"<boolean>\",\n    \"apps\": [\n      {\n        \"Loremb53\": \"aliqua velit in\",\n        \"culpa_01\": \"officia\"\n      },\n      {\n        \"est_455\": 84178696,\n        \"ipsum5e4\": false\n      }\n    ],\n    \"conditions\": {\n      \"all\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"any\": [\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"field\": \"<string>\",\n          \"operator\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    \"created_at\": \"<dateTime>\",\n    \"description\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"macro_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"macros\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"position\": \"<integer>\",\n    \"prefer_workspace_app_order\": \"<boolean>\",\n    \"selected_macros\": [\n      {\n        \"actions\": [\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"title\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"restriction\": {\n          \"do_0\": \"commodo in nisi eu\",\n          \"anim8\": \"pariatur exercitation\",\n          \"ipsum__6\": \"adipisicing incididunt ipsum eiusmod\"\n        },\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\",\n        \"app_installation\": \"<string>\",\n        \"categories\": \"<string>\",\n        \"permissions\": \"<string>\",\n        \"usage_1h\": \"<integer>\",\n        \"usage_7d\": \"<integer>\",\n        \"usage_24h\": \"<integer>\",\n        \"usage_30d\": \"<integer>\"\n      },\n      {\n        \"actions\": [\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"field\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"title\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"created_at\": \"<dateTime>\",\n        \"default\": \"<boolean>\",\n        \"description\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"position\": \"<integer>\",\n        \"restriction\": {\n          \"ut06\": true\n        },\n        \"updated_at\": \"<dateTime>\",\n        \"url\": \"<string>\",\n        \"app_installation\": \"<string>\",\n        \"categories\": \"<string>\",\n        \"permissions\": \"<string>\",\n        \"usage_1h\": \"<integer>\",\n        \"usage_7d\": \"<integer>\",\n        \"usage_24h\": \"<integer>\",\n        \"usage_30d\": \"<integer>\"\n      }\n    ],\n    \"ticket_form_id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"updated_at\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "domain",
			"value": "zendesk"
		},
		{
			"key": "subdomain",
			"value": "example"
		},
		{
			"key": "baseUrl",
			"value": "https://{{subdomain}}.{{domain}}.com"
		}
	]
}